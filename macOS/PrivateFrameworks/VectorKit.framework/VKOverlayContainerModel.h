//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <VectorKit/VKMapTileModel.h>

#import "VKMapLayer.h"
#import "VKRouteContextObserver.h"
#import "VKRouteMatchedAnnotationPresentationObserver.h"
#import "VKStyleManagerObserver.h"

@class NSMapTable, NSMutableArray, NSMutableSet, NSSet, NSString, VKRouteContext, VKSkyModel;

__attribute__((visibility("hidden")))
@interface VKOverlayContainerModel : VKMapTileModel <VKRouteMatchedAnnotationPresentationObserver, VKRouteContextObserver, VKMapLayer, VKStyleManagerObserver>
{
    NSMutableSet *_visibleOverlays;
    NSMutableArray *_overlayPainters;
    NSMapTable *_overlaysToPainters;
    NSMutableSet *_overlaysToAdd;
    NSMutableSet *_overlaysToRemove;
    NSMutableSet *_paintersToRemove;
    id <VKOverlayContainerDelegate> _delegate;
    BOOL _shouldCheckForOcclusion;
    BOOL _shouldOccludeTraffic;
    BOOL _shouldShowTraffic;
    BOOL _isShowingOuterHaloOnLabels;
    NSMapTable *_persistentOverlaysToPainters;
    NSMutableSet *_persistentOverlays;
    id <VKRouteMatchedAnnotationPresentation> _routeLineSplitAnnotation;
    VKSkyModel *_skyModel;
    struct ClearItem *_clearItem;
    unsigned char _applicationState;
    VKRouteContext *_routeContext;
    shared_ptr_a3c46825 _styleManager;
    struct unique_ptr<md::RouteLineSharedResources, std::__1::default_delete<md::RouteLineSharedResources>> _routeSharedResources;
    struct unique_ptr<md::RouteLineArrowSharedResources, std::__1::default_delete<md::RouteLineArrowSharedResources>> _arrowSharedResources;
}

+ (BOOL)reloadOnStylesheetChange;
@property(retain, nonatomic) VKRouteContext *routeContext; // @synthesize routeContext=_routeContext;
@property(readonly, nonatomic) BOOL isShowingOuterHaloOnLabels; // @synthesize isShowingOuterHaloOnLabels=_isShowingOuterHaloOnLabels;
@property(retain, nonatomic) VKSkyModel *skyModel; // @synthesize skyModel=_skyModel;
@property(nonatomic) BOOL shouldOccludeTraffic; // @synthesize shouldOccludeTraffic=_shouldOccludeTraffic;
@property(readonly, nonatomic) NSSet *persistentOverlays; // @synthesize persistentOverlays=_persistentOverlays;
@property(retain, nonatomic) id <VKRouteMatchedAnnotationPresentation> routeLineSplitAnnotation; // @synthesize routeLineSplitAnnotation=_routeLineSplitAnnotation;
@property(nonatomic) BOOL shouldShowTraffic; // @synthesize shouldShowTraffic=_shouldShowTraffic;
@property(nonatomic) BOOL shouldCheckForOcclusion; // @synthesize shouldCheckForOcclusion=_shouldCheckForOcclusion;
@property(nonatomic) id <VKOverlayContainerDelegate> delegate; // @synthesize delegate=_delegate;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)setApplicationState:(unsigned char)arg1;
- (void)reset;
- (void)didReceiveMemoryWarning:(BOOL)arg1;
- (void)stylesheetDidChange;
@property(nonatomic) shared_ptr_a3c46825 styleManager;
- (void)addPainterToRemove:(id)arg1;
- (void)removePersistentOverlay:(id)arg1;
- (void)addPersistentOverlay:(id)arg1;
- (void)layoutScene:(id)arg1 withContext:(struct LayoutContext *)arg2;
- (void)gglLayoutScene:(id)arg1 withContext:(struct LayoutContext *)arg2 renderQueue:(struct RenderQueue *)arg3;
- (void)_updatePainterOrdering;
@property(readonly, nonatomic, getter=isInTransitMode) BOOL inTransitMode;
@property(readonly, nonatomic, getter=isInRealisticMode) BOOL inRealisticMode;
- (unsigned long long)mapLayerPosition;
- (void)annotationPresentationDidChangePresentationCoordinate:(id)arg1;
- (void)routeContextStateDidChange:(id)arg1;
- (BOOL)shouldLayoutWithoutStyleManager;
- (void)dealloc;
- (id)initWithTarget:(id)arg1 sharedResources:(id)arg2;
@property(readonly, nonatomic) const struct RouteLineArrowSharedResources *arrowSharedResources;
@property(readonly, nonatomic) const struct RouteLineSharedResources *routeSharedResources;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

