//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled May 21 2020 17:01:39).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class MPSNNGraph, MPSNNImageNode, TCMPSStyleTransferPreProcessing, TCMPSStyleTransferTransformerNetwork, TCMPSVgg16Network;
@protocol MTLCommandQueue, MTLDevice;

__attribute__((visibility("hidden")))
@interface TCMPSStyleTransfer : NSObject
{
    BOOL _updateAllParams;
    float _contentLossMultiplier;
    float _styleLossMultiplier;
    float _totalLossMultiplier;
    unsigned long long _batchSize;
    unsigned long long _imgWidth;
    unsigned long long _imgHeight;
    TCMPSStyleTransferTransformerNetwork *_model;
    TCMPSStyleTransferPreProcessing *_contentPreProcess;
    TCMPSStyleTransferPreProcessing *_stylePreProcessLoss;
    TCMPSStyleTransferPreProcessing *_contentPreProcessLoss;
    TCMPSVgg16Network *_contentVgg;
    TCMPSVgg16Network *_styleVggLoss;
    TCMPSVgg16Network *_contentVggLoss;
    MPSNNImageNode *_contentNode;
    MPSNNImageNode *_contentScaleNode;
    MPSNNImageNode *_contenMeanNode;
    MPSNNImageNode *_styleNode;
    MPSNNImageNode *_styleScaleNode;
    MPSNNImageNode *_styleMeanNode;
    MPSNNGraph *_trainingGraph;
    MPSNNGraph *_inferenceGraph;
    id <MTLDevice> _dev;
    id <MTLCommandQueue> _commandQueue;
}

+ (void)populateMultiplication:(id)arg1;
+ (void)populateMean:(id)arg1;
+ (id)defineVGG16Descriptor:(unsigned long long)arg1;
+ (id)defineTransformerDescriptor:(unsigned long long)arg1 tuneAllWeights:(BOOL)arg2;
- (void).cxx_destruct;
@property(retain, nonatomic) id <MTLCommandQueue> commandQueue; // @synthesize commandQueue=_commandQueue;
@property(retain, nonatomic) id <MTLDevice> dev; // @synthesize dev=_dev;
@property(retain, nonatomic) MPSNNGraph *inferenceGraph; // @synthesize inferenceGraph=_inferenceGraph;
@property(retain, nonatomic) MPSNNGraph *trainingGraph; // @synthesize trainingGraph=_trainingGraph;
@property(retain, nonatomic) MPSNNImageNode *styleMeanNode; // @synthesize styleMeanNode=_styleMeanNode;
@property(retain, nonatomic) MPSNNImageNode *styleScaleNode; // @synthesize styleScaleNode=_styleScaleNode;
@property(retain, nonatomic) MPSNNImageNode *styleNode; // @synthesize styleNode=_styleNode;
@property(retain, nonatomic) MPSNNImageNode *contenMeanNode; // @synthesize contenMeanNode=_contenMeanNode;
@property(retain, nonatomic) MPSNNImageNode *contentScaleNode; // @synthesize contentScaleNode=_contentScaleNode;
@property(retain, nonatomic) MPSNNImageNode *contentNode; // @synthesize contentNode=_contentNode;
@property(retain, nonatomic) TCMPSVgg16Network *contentVggLoss; // @synthesize contentVggLoss=_contentVggLoss;
@property(retain, nonatomic) TCMPSVgg16Network *styleVggLoss; // @synthesize styleVggLoss=_styleVggLoss;
@property(retain, nonatomic) TCMPSVgg16Network *contentVgg; // @synthesize contentVgg=_contentVgg;
@property(retain, nonatomic) TCMPSStyleTransferPreProcessing *contentPreProcessLoss; // @synthesize contentPreProcessLoss=_contentPreProcessLoss;
@property(retain, nonatomic) TCMPSStyleTransferPreProcessing *stylePreProcessLoss; // @synthesize stylePreProcessLoss=_stylePreProcessLoss;
@property(retain, nonatomic) TCMPSStyleTransferPreProcessing *contentPreProcess; // @synthesize contentPreProcess=_contentPreProcess;
@property(retain, nonatomic) TCMPSStyleTransferTransformerNetwork *model; // @synthesize model=_model;
@property(nonatomic) unsigned long long imgHeight; // @synthesize imgHeight=_imgHeight;
@property(nonatomic) unsigned long long imgWidth; // @synthesize imgWidth=_imgWidth;
@property(nonatomic) BOOL updateAllParams; // @synthesize updateAllParams=_updateAllParams;
@property(nonatomic) float totalLossMultiplier; // @synthesize totalLossMultiplier=_totalLossMultiplier;
@property(nonatomic) float styleLossMultiplier; // @synthesize styleLossMultiplier=_styleLossMultiplier;
@property(nonatomic) float contentLossMultiplier; // @synthesize contentLossMultiplier=_contentLossMultiplier;
@property(nonatomic) unsigned long long batchSize; // @synthesize batchSize=_batchSize;
- (void)checkpoint;
- (id)train:(id)arg1;
- (void)setLearningRate:(float)arg1;
- (id)predict:(id)arg1;
- (id)exportWeights;
- (id)initWithDev:(id)arg1 commandQueue:(id)arg2 weights:(id)arg3 numStyles:(unsigned long long)arg4;

@end

