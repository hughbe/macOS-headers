/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AdPlatformsCommon.framework/AdPlatformsCommon
 */

@interface APRepresentationData : NSObject <NSSecureCoding> {
    NSString * _adTag;
    NSString * _advertiserName;
    NSString * _articleID;
    NSString * _articleTitle;
    double  _bitrate;
    NSString * _campaignData;
    long long  _connectionType;
    NSString * _contentDataIdentifier;
    double  _duration;
    NSError * _error;
    NSUUID * _identifier;
    long long  _placementType;
    unsigned long long  _privacyMarkerPosition;
    unsigned long long  _signalStrength;
    struct { 
        double width; 
        double height; 
    }  _size;
    bool  _skipEnabled;
    double  _skipThreshold;
    APTapAction * _tapAction;
    bool  _unbranded;
    NSURL * _videoURL;
}

@property (retain) NSString *adTag;
@property (retain) NSString *advertiserName;
@property (retain) NSString *articleID;
@property (retain) NSString *articleTitle;
@property double bitrate;
@property (retain) NSString *campaignData;
@property long long connectionType;
@property (retain) NSString *contentDataIdentifier;
@property double duration;
@property (retain) NSError *error;
@property (readonly) NSUUID *identifier;
@property long long placementType;
@property unsigned long long privacyMarkerPosition;
@property unsigned long long signalStrength;
@property struct { double x1; double x2; } size;
@property bool skipEnabled;
@property double skipThreshold;
@property (retain) APTapAction *tapAction;
@property bool unbranded;
@property (retain) NSURL *videoURL;

+ (id)mockRepresentationWithType:(long long)arg1 contentData:(id)arg2;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)adTag;
- (id)advertiserName;
- (id)articleID;
- (id)articleTitle;
- (double)bitrate;
- (id)campaignData;
- (long long)connectionType;
- (id)contentDataIdentifier;
- (double)duration;
- (void)encodeWithCoder:(id)arg1;
- (id)error;
- (id)identifier;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (long long)placementType;
- (unsigned long long)privacyMarkerPosition;
- (void)setAdTag:(id)arg1;
- (void)setAdvertiserName:(id)arg1;
- (void)setArticleID:(id)arg1;
- (void)setArticleTitle:(id)arg1;
- (void)setBitrate:(double)arg1;
- (void)setCampaignData:(id)arg1;
- (void)setConnectionType:(long long)arg1;
- (void)setContentDataIdentifier:(id)arg1;
- (void)setDuration:(double)arg1;
- (void)setError:(id)arg1;
- (void)setPlacementType:(long long)arg1;
- (void)setPrivacyMarkerPosition:(unsigned long long)arg1;
- (void)setSignalStrength:(unsigned long long)arg1;
- (void)setSize:(struct { double x1; double x2; })arg1;
- (void)setSkipEnabled:(bool)arg1;
- (void)setSkipThreshold:(double)arg1;
- (void)setTapAction:(id)arg1;
- (void)setUnbranded:(bool)arg1;
- (void)setVideoURL:(id)arg1;
- (unsigned long long)signalStrength;
- (struct { double x1; double x2; })size;
- (bool)skipEnabled;
- (double)skipThreshold;
- (id)tapAction;
- (bool)unbranded;
- (id)videoURL;

@end
