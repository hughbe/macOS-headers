/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AppleDepth.framework/AppleDepth
 */

@interface ADNetworkProvider : NSObject {
    float  _highConfidenceThresholdSuggestion;
    NSDictionary * _ioBufferMap;
    bool  _isOutputInversed;
    NSDictionary * _landscapeSizeForInput;
    NSDictionary * _landscapeSizeForOutput;
    NSArray * _layoutNames;
    float  _lowConfidenceThresholdSuggestion;
    NSDictionary * _portraitSizeForInput;
    NSDictionary * _portraitSizeForOutput;
    unsigned long long  _rawConfidenceUnits;
    NSURL * _url;
}

@property float highConfidenceThresholdSuggestion;
@property bool isOutputInversed;
@property (retain) NSArray *layoutNames;
@property float lowConfidenceThresholdSuggestion;
@property unsigned long long rawConfidenceUnits;
@property (retain) NSURL *url;

+ (id)getAlternativePathForNetwork:(id)arg1 andPriority:(long long)arg2;
+ (bool)getAndVerifyDimensionsFromConfig:(id)arg1 inDictionary:(id)arg2 forKey:(id)arg3 dimensions:(id)arg4 layout:(unsigned long long*)arg5;
+ (id)getConfigFolderForNetwork:(id)arg1;
+ (id)getDefaultPathForNetwork:(id)arg1 andPriority:(long long)arg2;
+ (id)getEspressoFileNameForNetwork:(id)arg1 andPriority:(long long)arg2;
+ (id)providerForNetwork:(id)arg1 prioritization:(long long)arg2;

- (void).cxx_destruct;
- (id)bufferNameForType:(id)arg1;
- (float)highConfidenceThresholdSuggestion;
- (id)initWithNetwork:(id)arg1 prioritization:(long long)arg2;
- (bool)isOutputInversed;
- (struct CGSize { double x1; double x2; })landscapeSizeForInput:(id)arg1;
- (struct CGSize { double x1; double x2; })landscapeSizeForInputOfType:(id)arg1;
- (struct CGSize { double x1; double x2; })landscapeSizeForOutput:(id)arg1;
- (struct CGSize { double x1; double x2; })landscapeSizeForOutputOfType:(id)arg1;
- (id)layoutNames;
- (float)lowConfidenceThresholdSuggestion;
- (struct CGSize { double x1; double x2; })portraitSizeForInput:(id)arg1;
- (struct CGSize { double x1; double x2; })portraitSizeForInputOfType:(id)arg1;
- (struct CGSize { double x1; double x2; })portraitSizeForOutput:(id)arg1;
- (struct CGSize { double x1; double x2; })portraitSizeForOutputOfType:(id)arg1;
- (unsigned long long)rawConfidenceUnits;
- (void)setHighConfidenceThresholdSuggestion:(float)arg1;
- (void)setIsOutputInversed:(bool)arg1;
- (void)setLayoutNames:(id)arg1;
- (void)setLowConfidenceThresholdSuggestion:(float)arg1;
- (void)setRawConfidenceUnits:(unsigned long long)arg1;
- (void)setUrl:(id)arg1;
- (id)url;

@end
