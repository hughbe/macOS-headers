//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class AVPlayerInternal, NSArray, NSError, NSString;

@interface AVPlayer : NSObject
{
    AVPlayerInternal *_player;
}

+ (BOOL)eligibleForHDRPlayback;
+ (long long)availableHDRModes;
+ (void)registerForScreenConnectionChanges;
+ (void)fireEligibleForHDRPlaybackDidChangeNotification;
+ (void)fireAvailableHDRModesDidChangeNotification;
+ (void)checkForAvailableHDRModesChanges;
+ (BOOL)automaticallyNotifiesObserversOfUsesAudioOnlyModeForExternalPlayback;
+ (BOOL)automaticallyNotifiesObserversOfExternalPlaybackActive;
+ (id)keyPathsForValuesAffectingClosedCaptionDisplayEnabled;
+ (id)keyPathsForValuesAffectingActionAtItemEnd;
+ (id)keyPathsForValuesAffectingMuted;
+ (id)keyPathsForValuesAffectingVolume;
+ (BOOL)automaticallyNotifiesObserversOfUsesLegacyAutomaticWaitingBehavior;
+ (BOOL)automaticallyNotifiesObserversOfRate;
+ (int)_createFigPlayerWithType:(long long)arg1 options:(const struct __CFDictionary *)arg2 player:(struct OpaqueFigPlayer **)arg3;
+ (BOOL)automaticallyNotifiesObserversOfCurrentItem;
+ (id)playerWithFigPlayer:(struct OpaqueFigPlayer *)arg1;
+ (BOOL)worksAroundConcurrentKVOCrash;
+ (id)playerWithPlayerItem:(id)arg1;
+ (id)playerWithURL:(id)arg1;
+ (void)initialize;
+ (BOOL)automaticallyNotifiesObserversOfAutoSwitchStreamVariants;
+ (id)makePlayerLoggingIdentifier;
- (BOOL)_isVideoPlaybackAllowedWhileInBackground;
- (BOOL)_limitsBandwidthForCellularAccess;
- (void)_setLimitsBandwidthForCellularAccess:(BOOL)arg1;
- (BOOL)_dynamicallyChoosesInitialVariant;
- (void)_setDynamicallyChoosesInitialVariant:(BOOL)arg1;
- (void)_logPerformanceDataForCurrentItem;
- (id)_copyPerformanceDataForCurrentItem;
- (void)_logPerformanceDataForPreviousItem;
- (BOOL)_shouldLogPerformanceData;
- (void)_setFigPlaybackItemToMakeCurrent:(struct OpaqueFigPlaybackItem *)arg1;
- (void)_removeFPListeners;
- (void)_addFPListeners;
- (id)_fpNotificationNames;
- (void)_setNeroVideoGravityOnFigPlayer;
- (void)setExternalPlaybackVideoGravity:(id)arg1;
- (id)externalPlaybackVideoGravity;
- (id)_externalPlaybackVideoGravity;
- (void)_playerLayer:(id)arg1 replaceVideoLayer:(id)arg2 with:(id)arg3;
- (id)_performanceDictionary;
- (void)_updatePixelBufferAttributesForLayer:(id)arg1;
- (void)_pixelBufferAttributesDidChangeForLayer:(id)arg1;
- (BOOL)_hasForegroundLayers;
- (void)_addLayer:(id)arg1;
- (void)_removeLayer:(id)arg1 videoLayer:(id)arg2 closedCaptionLayer:(id)arg3 subtitleLayer:(id)arg4;
- (void)_removeLayer:(id)arg1;
- (void)_detachClosedCaptionLayersFromFigPlayer:(struct OpaqueFigPlayer *)arg1;
- (void)_attachClosedCaptionLayersToFigPlayer;
- (void)_detachVideoLayersFromFigPlayer:(struct OpaqueFigPlayer *)arg1;
- (void)_attachVideoLayersToFigPlayer;
- (void)_detachFigPlayerFromSubtitleLayers;
- (void)_attachFigPlayerToSubtitleLayers;
- (void)_evaluateDisplaySizeOfAllAttachedLayers;
- (struct CGSize)_maximumAVPlayerLayerDisplaySize;
- (void)_updateClosedCaptionLayerBounds:(id)arg1;
- (id)_avPlayerLayers;
- (id)_videoLayers;
- (id)_closedCaptionLayers;
- (id)_subtitleLayers;
- (id)_pixelBufferAttributeMediator;
- (void)_removeAllLayers;
- (void)removeTimeObserver:(id)arg1;
- (id)addBoundaryTimeObserverForTimes:(id)arg1 queue:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (id)addPeriodicTimeObserverForInterval:(CDStruct_1b6d18a9)arg1 queue:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)pause;
- (void)play;
- (BOOL)_airPlayVideoActive;
- (void)setOutputContext:(id)arg1;
- (id)outputContext;
- (long long)externalPlaybackType;
- (BOOL)isExternalPlaybackActive;
- (BOOL)_externalPlaybackActive;
- (void)setUsesExternalPlaybackWhileExternalScreenIsActive:(BOOL)arg1;
- (BOOL)usesExternalPlaybackWhileExternalScreenIsActive;
- (void)setAllowsExternalPlayback:(BOOL)arg1;
- (BOOL)allowsExternalPlayback;
- (void)setPlayerRole:(id)arg1;
- (id)playerRole;
- (void)setResourceConservationLevelWhilePaused:(long long)arg1;
- (long long)resourceConservationLevelWhilePaused;
- (void)setShouldReduceResourceUsage:(BOOL)arg1;
- (BOOL)shouldReduceResourceUsage;
- (BOOL)isDisplayingClosedCaptions;
- (BOOL)_isDisplayingClosedCaptions;
- (void)setClosedCaptionDisplayEnabled:(BOOL)arg1;
- (BOOL)isClosedCaptionDisplayEnabled;
- (void)setActionAtItemEnd:(long long)arg1;
- (void)_setActionAtItemEnd:(long long)arg1 allowingAdvance:(BOOL)arg2;
- (struct __CFString *)figPlayerActionForActionAtItemEnd:(long long)arg1;
- (long long)actionAtItemEnd;
- (void)setMuted:(BOOL)arg1;
- (BOOL)isMuted;
- (BOOL)_isMuted;
- (void)setVolume:(float)arg1;
- (float)volume;
- (float)_playerVolume;
- (void)setMasterClock:(struct OpaqueCMClock *)arg1;
- (struct OpaqueCMClock *)masterClock;
- (void)prerollOperationDidComplete:(BOOL)arg1 notificationPayload:(struct __CFDictionary *)arg2;
- (void)cancelPendingPrerolls;
- (void)prerollAtRate:(float)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (CDUnknownBlockType)_unregisterAndReturnRetainedPrerollCompletionHandler;
- (int)_cancelPendingPrerollAndRegisterPrerollCompletionHandler:(CDUnknownBlockType)arg1;
- (int)_createPrerollID;
- (void)setRate:(float)arg1 time:(CDStruct_1b6d18a9)arg2 atHostTime:(CDStruct_1b6d18a9)arg3;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 toleranceBefore:(CDStruct_1b6d18a9)arg2 toleranceAfter:(CDStruct_1b6d18a9)arg3;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1;
- (void)seekToDate:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)seekToDate:(id)arg1;
- (CDStruct_1b6d18a9)currentUnfoldedTime;
- (CDStruct_1b6d18a9)currentTime;
- (BOOL)_usesLegacyAutomaticWaitingBehavior;
- (void)_setUsesLegacyAutomaticWaitingBehavior:(BOOL)arg1;
- (void)setAutomaticallyWaitsToMinimizeStalling:(BOOL)arg1;
- (BOOL)automaticallyWaitsToMinimizeStalling;
- (id)reasonForWaitingToPlay;
- (id)_reasonForWaitingToPlay;
- (long long)timeControlStatus;
- (long long)_timeControlStatus;
- (long long)_timeControlStatusAndWaitingReason:(id *)arg1;
- (long long)_inferredTimeControlStatusAndWaitingReason:(id *)arg1 forRate:(float)arg2;
- (long long)_timeControlStatusAndWaitingReason:(id *)arg1 forPlaybackState:(int)arg2;
- (void)playImmediatelyAtRate:(float)arg1;
- (void)setRate:(float)arg1;
- (void)setRate:(float)arg1 withVolumeRampDuration:(CDStruct_1b6d18a9)arg2;
- (void)setRate:(float)arg1 withVolumeRampDuration:(CDStruct_1b6d18a9)arg2 playImmediately:(BOOL)arg3 rateChangeReason:(int)arg4;
- (float)rate;
- (float)_rate;
- (id)_rateDidChangeNotificationPayloadForFigRateChangeReason:(int)arg1 rateChangeIdentifier:(id)arg2;
- (id)_rateDidChangeNotificationPayloadForAVFRateChangeReason:(id)arg1 rateChangeIdentifier:(id)arg2;
- (void)_removeAllItems;
- (id)_items;
- (id)_items_invokeOnIvarAccessQueue;
- (void)_enumerateItemsUsingBlock:(CDUnknownBlockType)arg1;
- (void)replaceCurrentItemWithPlayerItem:(id)arg1;
- (void)_removeItem:(id)arg1;
- (void)_removeItemFromLinkedList_invokeOnIvarAccessQueue:(id)arg1;
- (void)_enqueuePlayQueueModification_invokeOnIvarAccessQueue:(id)arg1;
- (void)_applyPlayQueueChangesToFigPlayerWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)_applyLinkedListOfItemsToFigPlayerUsingBlock:(CDUnknownBlockType)arg1;
- (void)_addItemToLinkedList_invokeOnIvarAccessQueue:(id)arg1 afterItem:(id)arg2;
- (id)_ancillaryPerformanceInformationForDisplay;
- (void)_setAncillaryPerformanceInformationForDisplay:(id)arg1;
- (void)setExpectedAssetTypes:(id)arg1;
- (id)expectedAssetTypes;
- (void)_createAndConfigureFigPlayerWithType:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_setPendingFigPlayerProperty:(id)arg1 forKey:(id)arg2;
- (id)_pendingFigPlayerPropertyForKey:(id)arg1;
- (id)_pendingFigPlayerProperties;
- (void)_insertItem:(id)arg1 afterItem:(id)arg2;
- (void)prepareItem:(id)arg1 withCompletionHandler:(CDUnknownBlockType)arg2;
- (void)_advanceToNextItem;
- (void)_advanceCurrentItemAccordingToFigPlaybackItem:(struct OpaqueFigPlaybackItem *)arg1;
- (void)_stopObservingPropertiesOfCurrentItem:(id)arg1;
- (void)_startObservingPropertiesOfCurrentItem:(id)arg1;
- (void)_noteNewNonForcedSubtitleDisplayEnabledForPlayerItem:(id)arg1;
- (BOOL)_cachedNonForcedSubtitleDisplayEnabledForCurrentItem;
- (void)_noteNewPresentationSizeForPlayerItem:(id)arg1;
- (struct CGSize)_cachedPresentationSizeOfCurrentItem;
- (BOOL)_runOnIvarAccessQueueOperationThatMayChangeCurrentItemWithPreflightBlock:(CDUnknownBlockType)arg1 modificationBlock:(CDUnknownBlockType)arg2 error:(id *)arg3;
- (void)_updateProxyTimebaseFromNewCurrentItem;
- (id)_synchronizeWithNewCurrentItem;
- (void)_setCurrentItem:(id)arg1;
- (void)_updateCurrentItemPreferredPixelBufferAttributesAndVideoLayerSuppression;
- (id)currentItem;
- (void)_updateDecoderPixelBufferAttributes:(id)arg1 onFigPlayer:(struct OpaqueFigPlayer *)arg2;
- (void)_changeStatusToFailedWithError:(id)arg1;
@property(readonly, nonatomic) NSError *error;
@property(readonly, nonatomic) long long status;
- (void)setValue:(id)arg1 forUndefinedKey:(id)arg2;
- (id)valueForUndefinedKey:(id)arg1;
- (void)addObserver:(id)arg1 forKeyPath:(id)arg2 options:(unsigned long long)arg3 context:(void *)arg4;
- (struct OpaqueFigPlayer *)_copyFigPlayer;
- (id)_stateDispatchQueue;
- (id)dispatchQueue;
- (id)_weakReference;
- (id)_nameForLogging;
- (void)dealloc;
- (id)initWithFigPlayer:(struct OpaqueFigPlayer *)arg1;
- (id)initWithDispatchQueue:(id)arg1;
- (id)init;
- (id)initWithURL:(id)arg1;
- (id)initWithPlayerItem:(id)arg1;
@property(nonatomic) BOOL preventsDisplaySleepDuringVideoPlayback;
- (BOOL)outputObscuredDueToInsufficientExternalProtection;
- (long long)_extractFPExternalProtectionStatus:(id)arg1;
@property(readonly, nonatomic) long long _externalProtectionStatus;
- (long long)_externalProtectionStatusCopiedFromFig;
@property(copy, nonatomic, setter=_setDisplaysUsedForPlayback:) NSArray *_displaysUsedForPlayback;
- (id)_playbackDisplaysForFigPlayer;
@property(readonly, nonatomic, getter=_isPIPModePossible) BOOL PIPModePossible;
@property float maxRateForAudioPlayback;
@property float minRateForAudioPlayback;
@property(readonly, nonatomic, getter=isAudioPlaybackEnabledAtAllRates) BOOL audioPlaybackEnabledAtAllRates;
- (void)removeAudioPlaybackRateLimits;
- (void)_restoreVideoLayersForForeground;
- (void)_willEnterForeground:(id)arg1;
- (void)_detachVideoLayersForSuspension;
- (void)_didFinishSuspension:(id)arg1;
- (void)_didEnterBackground:(id)arg1;
- (void)_layerVisibilityChanged:(id)arg1;
- (BOOL)_shouldDetachVideoLayersFromFigPlayer;
- (long long)_itemOkayToPlayWhileTransitioningToBackground:(id)arg1;
- (void)_setHostApplicationInForeground:(BOOL)arg1;
- (BOOL)_hostApplicationInForeground;
- (BOOL)_carplayIsActive;
- (BOOL)_isIAPDExtendedModeActive;
- (BOOL)_hasAssociatedOnscreenAVPlayerLayer;
- (BOOL)_applicationHasExternallyDisplayedAVPlayerLayerAndIsUnderDeviceLock;
- (BOOL)_hasAssociatedAVPlayerLayerInPIPMode;
- (BOOL)_CALayerDestinationIsTVOut;
@property BOOL allowsPixelBufferPoolSharing;
- (void)setDisallowsHardwareAcceleratedVideoDecoder:(BOOL)arg1;
- (BOOL)disallowsHardwareAcceleratedVideoDecoder;
@property BOOL disallowsAMRAudio;
- (id)mediaSelectionCriteriaForMediaCharacteristic:(id)arg1;
- (void)setMediaSelectionCriteria:(id)arg1 forMediaCharacteristic:(id)arg2;
@property BOOL appliesMediaSelectionCriteriaAutomatically;
- (id)defaultMediaSelectionCriteriaForMediaCharacteristic:(id)arg1;
- (void)setPreparesItemsForPlaybackAsynchronously:(BOOL)arg1;
- (BOOL)preparesItemsForPlaybackAsynchronously;
- (void)setAutoSwitchStreamVariants:(BOOL)arg1;
- (BOOL)autoSwitchStreamVariants;
@property(copy) NSString *audioOutputDeviceUniqueID;
@property BOOL allowsOutOfBandTextTrackRendering;
@property(copy) NSString *multichannelAudioStrategy;
@property(copy, nonatomic) NSString *captionRenderingStrategy;
@property(copy, nonatomic) NSString *captionPipelineStrategy;
- (BOOL)_preservesAudioSessionSampleRate;
- (void)_setPreservesAudioSessionSampleRate:(BOOL)arg1;
- (id)audioSession;
- (void)setAudioSession:(id)arg1;
@property(nonatomic) unsigned long long preferredVideoDecoderGPURegistryID;
@property(retain, nonatomic) id <AVLoggingIdentifier> loggingIdentifier;
@property(nonatomic, getter=_disallowsAutoPauseOnRouteRemovalIfNoAudio, setter=_setDisallowsAutoPauseOnRouteRemovalIfNoAudio:) BOOL disallowsAutoPauseOnRouteRemovalIfNoAudio;

@end

