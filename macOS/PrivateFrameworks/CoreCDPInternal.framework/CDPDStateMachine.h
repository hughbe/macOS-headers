//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "CDPDCircleDelegate.h"
#import "CDPDSecureBackupDelegate.h"

@class CDPContext, CDPDCircleController, CDPDPCSController, CDPDSecureBackupController;

@interface CDPDStateMachine : NSObject <CDPDSecureBackupDelegate, CDPDCircleDelegate>
{
    CDPContext *_context;
    id <CDPStateUIProviderInternal> _uiProvider;
    CDPDPCSController *_pcsController;
    CDPDCircleController *_circleController;
    CDPDSecureBackupController *_secureBackupController;
    BOOL _attemptedCDPEnable;
}

@property(nonatomic) BOOL attemptedCDPEnable; // @synthesize attemptedCDPEnable=_attemptedCDPEnable;
@property(retain, nonatomic) id <CDPStateUIProviderInternal> uiProvider; // @synthesize uiProvider=_uiProvider;
@property(retain, nonatomic) CDPContext *context; // @synthesize context=_context;
@property(retain, nonatomic) CDPDPCSController *pcsController; // @synthesize pcsController=_pcsController;
@property(retain, nonatomic) CDPDCircleController *circleController; // @synthesize circleController=_circleController;
@property(retain, nonatomic) CDPDSecureBackupController *secureBackupController; // @synthesize secureBackupController=_secureBackupController;
- (void).cxx_destruct;
- (id)contextForController:(id)arg1;
- (void)circleController:(id)arg1 secureBackupRecordsArePresentWithCompletion:(CDUnknownBlockType)arg2;
- (void)promotForLocalSecretWithCompletion:(CDUnknownBlockType)arg1;
- (void)promptForAdoptionOfMultipleICSCWithCompletion:(CDUnknownBlockType)arg1;
- (BOOL)synchronizeCircleViewsForSecureBackupController:(id)arg1;
- (id)circlePeerIDForSecureBackupController:(id)arg1;
- (void)_disableCloudDataProtectionWithCompletion:(CDUnknownBlockType)arg1;
- (void)_resetAccountCDPStateWithCompletion:(CDUnknownBlockType)arg1;
- (void)_enableSecureBackupWithCompletion:(CDUnknownBlockType)arg1;
- (void)_attemptBackupRecoveryByPromptingForRemoteSecretWithLocalSecret:(id)arg1 localSecretType:(unsigned long long)arg2 useCachedSecret:(BOOL)arg3 hasPeersForRemoteApproval:(BOOL)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_attemptBackupRecoveryWithLocalSecret:(id)arg1 type:(unsigned long long)arg2 useCachedSecret:(BOOL)arg3 hasPeersForRemoteApproval:(BOOL)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_recoverSecureBackupWithHasPeersForRemoteApproval:(BOOL)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_confirmCDPEligibilityWithCompletion:(CDUnknownBlockType)arg1;
- (void)getStingrayDisableEligibilityWithCompletion:(CDUnknownBlockType)arg1;
- (void)preflightStingrayDisableWithCompletion:(CDUnknownBlockType)arg1;
- (void)_preflightAccountStateWithContext:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (BOOL)shouldAllowCDPEnrollment;
- (void)_authenticatedRepairCloudDataProtectionStateWithCompletion:(CDUnknownBlockType)arg1;
- (void)_refreshWithContext:(id)arg1;
- (void)_performInteractivelyAuthenticatedRepair:(CDUnknownBlockType)arg1;
- (void)repairCloudDataProtectionStateWithCompletion:(CDUnknownBlockType)arg1;
- (id)_predicateForRecordUpgradeCheck;
- (void)_authenticatedShouldPerformRepairWithCompletion:(CDUnknownBlockType)arg1;
- (void)shouldPerformRepairWithCompletion:(CDUnknownBlockType)arg1;
- (void)_recoverSecureBackupWithRemotePeers:(BOOL)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_attemptCDPEnable:(CDUnknownBlockType)arg1;
- (void)_handlePreflightError:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_handleJoinCircleEvent:(CDUnknownBlockType)arg1;
- (void)_requestPostLockoutAccountReset:(CDUnknownBlockType)arg1;
- (void)_handleBackupRecoveryRequest:(CDUnknownBlockType)arg1 hasPeersForRemoteApproval:(BOOL)arg2 circleStatus:(int)arg3;
- (void)_enrollOrDisableCDPAfterEnabledStateVerified:(CDUnknownBlockType)arg1;
- (void)_handleiCDPStatusCheckError:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_handleCloudDataProtectionStateWithCompletion:(CDUnknownBlockType)arg1;
- (void)handleCloudDataProtectionStateWithCompletion:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initWithContext:(id)arg1 uiProvider:(id)arg2;

@end

