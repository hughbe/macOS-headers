//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled May 21 2020 17:01:39).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <KnowledgeMonitor/_DKMonitor.h>

@class NSDate, NSObject, _CDContextualKeyPath;
@protocol OS_dispatch_source, _CDLocalContext;

@interface _DKDeviceActivityLevelMonitor : _DKMonitor
{
    BOOL _enabled;
    BOOL _initialized;
    int _siriToken;
    unsigned long long _lastInUseStatus;
    unsigned long long _currentInUseStatus;
    NSDate *_lastSetActiveDate;
    id <_CDLocalContext> _context;
    _CDContextualKeyPath *_lastUseDate;
    _CDContextualKeyPath *_inUseStatus;
    NSObject<OS_dispatch_source> *_debounceTimer;
    unsigned long long _userActivityNotificationHandle;
}

+ (id)_eventWithState:(unsigned long long)arg1;
+ (BOOL)shouldMergeUnchangedEvents;
+ (id)entitlements;
+ (id)eventStream;
+ (void)initialize;
- (void).cxx_destruct;
@property(nonatomic) int siriToken; // @synthesize siriToken=_siriToken;
@property(nonatomic) unsigned long long userActivityNotificationHandle; // @synthesize userActivityNotificationHandle=_userActivityNotificationHandle;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *debounceTimer; // @synthesize debounceTimer=_debounceTimer;
@property(retain, nonatomic) _CDContextualKeyPath *inUseStatus; // @synthesize inUseStatus=_inUseStatus;
@property(retain, nonatomic) _CDContextualKeyPath *lastUseDate; // @synthesize lastUseDate=_lastUseDate;
@property(retain, nonatomic) id <_CDLocalContext> context; // @synthesize context=_context;
@property(retain, nonatomic) NSDate *lastSetActiveDate; // @synthesize lastSetActiveDate=_lastSetActiveDate;
@property(nonatomic) unsigned long long currentInUseStatus; // @synthesize currentInUseStatus=_currentInUseStatus;
@property(nonatomic) unsigned long long lastInUseStatus; // @synthesize lastInUseStatus=_lastInUseStatus;
@property(nonatomic) BOOL initialized; // @synthesize initialized=_initialized;
@property(nonatomic) BOOL enabled; // @synthesize enabled=_enabled;
- (void)updatePerformanceThrottleStatusWithLevel:(unsigned long long)arg1;
- (void)updateActivityDateAndInUseState:(unsigned long long)arg1;
- (void)updateActivityInUseState:(unsigned long long)arg1;
- (void)handleUserActivity:(int)arg1;
- (void)synchronouslyReflectCurrentValue;
- (void)deactivate;
- (void)stop;
- (void)start;
- (void)setLastActivityDate:(id)arg1;
- (void)dealloc;

@end

