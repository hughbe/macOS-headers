//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSSecureCoding.h"

@class NPTuscanyEdge, NSArray, NSData, NSDictionary, NSMutableDictionary;

@interface NPWaldo : NSObject <NSSecureCoding>
{
    NSDictionary *_currentNetworkCharacteristics;
    BOOL _enableLatencyDerivation;
    BOOL _isEphemeral;
    BOOL _daypassRefreshInProgress;
    BOOL _needsInitialSave;
    unsigned int _timestamp;
    long long _currentEdgeIndex;
    NSDictionary *_nextProbeDates;
    double _probeFrequency;
    id <NPWaldoDelegate> _delegate;
    double _latencyFactorA;
    double _latencyFactorB;
    double _latencyFactorX;
    NSMutableDictionary *_interfaceTypeEdgeLists;
    NSMutableDictionary *_signatureEdgeLists;
    NSArray *_currentEdges;
    NSArray *_edges;
    double _ttl;
    long long _retryPause;
    NSData *_dayPass;
    NPTuscanyEdge *_nextEdge;
    long long _pendingDayPassCount;
    unsigned long long _version;
    NSArray *_daypassSoftExpiry;
}

+ (void)removeFromKeychain;
+ (BOOL)supportsSecureCoding;
@property(readonly) NSArray *daypassSoftExpiry; // @synthesize daypassSoftExpiry=_daypassSoftExpiry;
@property(readonly) unsigned long long version; // @synthesize version=_version;
@property(readonly) long long pendingDayPassCount; // @synthesize pendingDayPassCount=_pendingDayPassCount;
@property(readonly) NPTuscanyEdge *nextEdge; // @synthesize nextEdge=_nextEdge;
@property(retain) NSData *dayPass; // @synthesize dayPass=_dayPass;
@property(readonly) long long retryPause; // @synthesize retryPause=_retryPause;
@property(readonly) double ttl; // @synthesize ttl=_ttl;
@property(readonly) NSArray *edges; // @synthesize edges=_edges;
@property BOOL needsInitialSave; // @synthesize needsInitialSave=_needsInitialSave;
@property(readonly) NSArray *currentEdges; // @synthesize currentEdges=_currentEdges;
@property BOOL daypassRefreshInProgress; // @synthesize daypassRefreshInProgress=_daypassRefreshInProgress;
@property(retain) NSMutableDictionary *signatureEdgeLists; // @synthesize signatureEdgeLists=_signatureEdgeLists;
@property(retain) NSMutableDictionary *interfaceTypeEdgeLists; // @synthesize interfaceTypeEdgeLists=_interfaceTypeEdgeLists;
@property BOOL isEphemeral; // @synthesize isEphemeral=_isEphemeral;
@property(readonly) unsigned int timestamp; // @synthesize timestamp=_timestamp;
@property double latencyFactorX; // @synthesize latencyFactorX=_latencyFactorX;
@property double latencyFactorB; // @synthesize latencyFactorB=_latencyFactorB;
@property double latencyFactorA; // @synthesize latencyFactorA=_latencyFactorA;
@property BOOL enableLatencyDerivation; // @synthesize enableLatencyDerivation=_enableLatencyDerivation;
@property __weak id <NPWaldoDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly) double probeFrequency; // @synthesize probeFrequency=_probeFrequency;
@property(retain) NSDictionary *nextProbeDates; // @synthesize nextProbeDates=_nextProbeDates;
@property long long currentEdgeIndex; // @synthesize currentEdgeIndex=_currentEdgeIndex;
- (void).cxx_destruct;
- (void)logLatencyInfoToStdout:(BOOL)arg1;
- (void)refreshDayPassesWithCompletionHandler:(CDUnknownBlockType)arg1;
@property(readonly) unsigned long long edgeCount;
- (id)edgeAtIndex:(long long)arg1;
- (void)setEdgeListForCurrentNetworkSignature:(id)arg1;
@property(readonly) NSArray *currentEdgeList;
- (void)logEdgeList:(id)arg1 debug:(BOOL)arg2 toStdout:(BOOL)arg3;
- (void)startProbingEdges:(id)arg1 atIndex:(unsigned long long)arg2 withResults:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)reprocessWithNewRTTFromConnection:(id)arg1;
- (void)reprocessWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)cancelProbes;
- (void)setCurrentNetworkCharacteristics:(id)arg1;
- (void)retainValidDayPassesFromWaldInfo:(id)arg1;
- (BOOL)shouldPerformDayPassRefresh;
- (BOOL)moveToNextEdge;
@property(readonly) NPTuscanyEdge *currentEdge;
@property(readonly) long long dayPassFetchCount;
- (long long)getValidDayPassCount:(long long *)arg1;
- (BOOL)selectBestEdge;
- (BOOL)moveToNextOnRamp;
- (void)saveToKeychain;
- (id)initFromKeychain;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithCurrentEdgeOfWaldoInfo:(id)arg1;
- (id)initWithJSONData:(id)arg1 timestamp:(unsigned int)arg2;

@end

