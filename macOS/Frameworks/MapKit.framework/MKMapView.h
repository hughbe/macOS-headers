//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSView.h"

#import "CALayerDelegate.h"
#import "GEOConfigChangeListenerDelegate.h"
#import "GEOLogContextDelegate.h"
#import "GEOResourceManifestTileGroupObserver.h"
#import "MKAnnotationContainerViewDelegate.h"
#import "MKAnnotationManagerDelegate.h"
#import "MKAnnotationMarkerContainer.h"
#import "MKLocationManagerObserver.h"
#import "MKMapGestureControllerDelegate.h"
#import "MKMouseOverLabelRecognizerDelegate.h"
#import "MKMouseOverLabelTarget.h"
#import "MKOverlayContainerViewDelegate.h"
#import "MKRotationFilterDelegate.h"
#import "NSCoding.h"
#import "NSGestureRecognizerDelegate.h"
#import "VKMapViewCameraDelegate.h"
#import "VKMapViewDelegate.h"

@class CALayer, CLLocation, GEOMapRegion, MKAccessibilityItem, MKAnnotationContainerView, MKAnnotationManager, MKAnnotationView, MKAttributionLabel, MKCompassView, MKMapCamera, MKMapCameraBoundary, MKMapCameraZoomRange, MKMapGestureController, MKMapViewInternal, MKOverlayContainerView, MKPointOfInterestFilter, MKRotationFilter, MKScaleView, MKUserLocation, NSAppearance, NSArray, NSClickGestureRecognizer, NSDictionary, NSImageView, NSLayoutConstraint, NSLayoutGuide, NSObject<OS_dispatch_group>, NSObject<OS_dispatch_queue>, NSOrderedSet, NSString, NSTimer, VKLabelMarker, VKMapView, VKNavContext, VKRouteContext, VKVenueBuildingFeatureMarker, VKVenueFeatureMarker, _MKAnnotationDragGestureRecognizer, _MKCustomFeatureStore, _MKEnvironmentLabel;

@interface MKMapView : NSView <MKLocationManagerObserver, MKMapGestureControllerDelegate, NSGestureRecognizerDelegate, MKOverlayContainerViewDelegate, MKMouseOverLabelRecognizerDelegate, MKMouseOverLabelTarget, VKMapViewDelegate, VKMapViewCameraDelegate, MKAnnotationMarkerContainer, MKAnnotationManagerDelegate, GEOLogContextDelegate, MKRotationFilterDelegate, GEOConfigChangeListenerDelegate, CALayerDelegate, GEOResourceManifestTileGroupObserver, MKAnnotationContainerViewDelegate, NSCoding>
{
    NSArray *_mouseOverLabelRecognizers;
    long long _mouseOverFeedbackState;
    NSAppearance *_cachedMapsAppearance;
    MKMapViewInternal *_internal;
    MKAnnotationManager *_annotationManager;
    MKAnnotationContainerView *_annotationContainer;
    MKAttributionLabel *_attributionLabel;
    CDUnknownBlockType _annotationRectTest;
    CDUnknownBlockType _annotationCoordinateTest;
    NSImageView *_attributionBadgeView;
    id <MKMapViewDelegate><MKMapViewDelegatePrivate> _safeDelegate;
    id <MKMapViewDelegate><MKMapViewDelegatePrivate> _unsafeDelegate;
    unsigned long long _suspendedEffectsCount;
    unsigned long long _mapType;
    _MKEnvironmentLabel *_debugCurrentEnvironmentLabel;
    NSClickGestureRecognizer *_selectingClickGestureRecognizer;
    NSClickGestureRecognizer *_nonselectingClickGestureRecognizer;
    _MKAnnotationDragGestureRecognizer *_longClickRecognizer;
    NSClickGestureRecognizer *_compassClickGestureRecognizer;
    MKMapGestureController *_gestureController;
    MKOverlayContainerView *_overlayContainer;
    VKMapView *_mapView;
    MKScaleView *_scaleView;
    MKCompassView *_compassView;
    BOOL _scaleVisible;
    BOOL _compassVisible;
    BOOL _showsScale;
    BOOL _showsCompass;
    BOOL _showsScaleDuringZoom;
    CDUnknownBlockType _regionSetterWhenSized;
    MKUserLocation *_userLocation;
    VKRouteContext *_routeContext;
    VKNavContext *_navContext;
    MKMapCamera *_camera;
    BOOL _isObservingContentLayoutRect;
    CDUnknownBlockType _showCalloutAfterRegionChangeBlock;
    CDUnknownBlockType _selectAnnotationViewAfterRedrawBlock;
    struct NSEdgeInsets _edgeInsets;
    double _verticalYawOverride;
    int _attributionCorner;
    long long _originalLoopRate;
    long long _preGesturingLoopRate;
    struct CGPoint _pointInMapOnMouseDown;
    long long _overlaysWritingDirection;
    BOOL _isInitializing;
    BOOL _canChangeZoomingSpeed;
    BOOL _canShowMouseOverFeedback;
    struct CLLocationCoordinate2D _smartAimingCachedCoordinate;
    NSOrderedSet *_storedAccessibilityItems;
    BOOL _willUpdateAccessibilityItems;
    BOOL _wantsAccessibilityUpdates;
    MKAccessibilityItem *_focusedAccessibilityItem;
    NSView *_settingsView;
    BOOL _showsAboutMapInContextualMenu;
    double _mapModeStartTime;
    BOOL _continueToRenderWhenOccluded;
    VKMapView *_mapLayer;
    BOOL _hidesAllUIOnMap;
    BOOL _showsZoomControls;
    BOOL _zoomVisible;
    NSView *_zoomButtons;
    NSObject<OS_dispatch_queue> *_lastEffectiveAppearanceIsolationQueue;
    NSAppearance *_lastEffectiveAppearance;
    MKRotationFilter *_rotationFilter;
    MKAnnotationView *_longPressedAnnotationView;
    struct {
        unsigned int changingRegion:1;
        unsigned int draggingInterrupted:1;
        unsigned int didStartSmoothScrolling:1;
        unsigned int hasRenderedSomething:1;
        unsigned int hasSignaledWillStartRendering:1;
        unsigned int ignoreLocationUpdates:1;
        unsigned int longPressing:1;
        unsigned int regionChangeIsAnimated:1;
        unsigned int scrollEnabled:1;
        unsigned int scrolling:1;
        unsigned int showsUserLocation:1;
        unsigned int zoomEnabled:1;
        unsigned int zoomIsAnimated:1;
        unsigned int zooming:1;
        unsigned int isChangingViewSize:1;
        unsigned int isChangingEdgeInsets:1;
        unsigned int showsAttribution:1;
        unsigned int canShowAttributionBadge:1;
        unsigned int showsVenues:1;
        unsigned int rotating:1;
        unsigned int pitching:1;
        unsigned int rotateEnabled:1;
        unsigned int pitchEnabled:1;
        unsigned int showsBuildings:1;
        unsigned int showsPointsOfInterest:1;
        unsigned int showsTraffic:1;
        unsigned int hasPendingCameraChange:1;
        unsigned int currentRegionChangeShouldUpdateAnnotationsMidstream:1;
        unsigned int canSelectPOIs:1;
        unsigned int canSelectAllLabels:1;
        unsigned int edgeInsetsAreExplicit:1;
        unsigned int locationPropagationEnabled:1;
        unsigned int userInteractionPausesLocationUpdates:1;
        unsigned int locationPulseEnabled:1;
        unsigned int shouldSplitRouteLine:1;
        unsigned int shouldAnimatePositionWithRouteMatch:1;
        unsigned int clearUserLocationOnLocationReset:1;
        unsigned int showsCurrentEnvironmentName:1;
        unsigned int processingUserLocationUpdate:1;
        unsigned int changingMapType:1;
        unsigned int userRotatedAwayFromVerticalYaw:1;
        unsigned int goingToDefaultLocation:1;
        unsigned int isDraggingAnnotationView:1;
        unsigned int shouldLoadFallbackTiles:1;
        unsigned int iconPixelAlignmentExplicitlyDisabled:1;
        unsigned int userDidRotateDuringCurrentRegionChange:1;
    } _flags;
    BOOL _hasSetLayoutMargins;
    NSLayoutGuide *_edgeInsetsGuide;
    NSLayoutConstraint *_edgeInsetsTopConstraint;
    NSLayoutConstraint *_edgeInsetsLeftConstraint;
    NSLayoutConstraint *_edgeInsetsRightConstraint;
    NSLayoutConstraint *_edgeInsetsBottomConstraint;
    unsigned long long _suspendPropagatingEdgeInsetsCount;
    BOOL _automaticallySnapsToNorth;
    BOOL _forceLayoutOnBoundsChange;
    BOOL _hasPendingEdgeInsetsChange;
    NSObject<OS_dispatch_group> *_calloutShowAnimationGroup;
    id _appearanceNotificationListener;
    _MKCustomFeatureStore *_annotationsCustomFeatureStore;
    double _lastYaw;
    BOOL _lastPossiblyVisible;
    unsigned long long _cachedVenueIDWithFocus;
    short _cachedDisplayedFloorOrdinalForVenueWithFocus;
    struct CLLocationCoordinate2D _oldCenterCoordinate;
    double _oldHeading;
    double _oldPitch;
    double _oldAltitude;
    BOOL _attributionBadgeClickable;
    BOOL willUpdateAccessibilityItems;
    BOOL wantsAccessibilityUpdates;
    BOOL _canRotateForHeading;
    BOOL _suspended;
    MKAccessibilityItem *focusedAccessibilityItem;
    long long _interactionMode;
    unsigned long long _currentFlyoverAnimationID;
    MKMapCameraZoomRange *_cameraZoomRange;
    MKMapCameraBoundary *_cameraBoundary;
    MKPointOfInterestFilter *_pointOfInterestFilter;
    NSTimer *__startEffectsTimer;
    CDUnknownBlockType _labelsDidLayoutCallback;
}

+ (CDStruct_b7cb895d)regionThatFitsMapType:(unsigned long long)arg1 viewSize:(struct CGSize)arg2 region:(CDStruct_b7cb895d)arg3;
+ (CDStruct_b7cb895d)regionThatFitsMapType:(unsigned long long)arg1 viewSize:(struct CGSize)arg2 edgeInsets:(struct NSEdgeInsets)arg3 region:(CDStruct_b7cb895d)arg4;
+ (unsigned long long)minZoomLevelForMapType:(unsigned long long)arg1 viewSize:(struct CGSize)arg2;
+ (CDStruct_02837cd9)_mapRectThatFitsViewBounds:(struct CGRect)arg1 mapRect:(CDStruct_02837cd9)arg2 viewInsets:(struct NSEdgeInsets)arg3 edgePadding:(struct NSEdgeInsets)arg4 minZoomLevel:(double)arg5 maxZoomLevel:(double)arg6 snapToZoomLevel:(BOOL)arg7;
+ (CDStruct_b7cb895d)_regionThatFitsMapType:(unsigned long long)arg1 viewSize:(struct CGSize)arg2 viewInsets:(struct NSEdgeInsets)arg3 edgePadding:(struct NSEdgeInsets)arg4 region:(CDStruct_b7cb895d)arg5 minZoomLevel:(double)arg6 maxZoomLevel:(double)arg7 snapToZoomLevel:(BOOL)arg8;
- (void).cxx_destruct;
@property(copy, nonatomic, getter=_labelsDidLayoutCallback, setter=_setLabelsDidLayoutCallback:) CDUnknownBlockType labelsDidLayoutCallback; // @synthesize labelsDidLayoutCallback=_labelsDidLayoutCallback;
@property(retain, nonatomic) NSTimer *_startEffectsTimer; // @synthesize _startEffectsTimer=__startEffectsTimer;
@property(nonatomic, getter=isSuspended) BOOL suspended; // @synthesize suspended=_suspended;
@property(readonly, nonatomic) BOOL canRotateForHeading; // @synthesize canRotateForHeading=_canRotateForHeading;
@property(copy, nonatomic) MKPointOfInterestFilter *pointOfInterestFilter; // @synthesize pointOfInterestFilter=_pointOfInterestFilter;
@property(copy, nonatomic) MKMapCameraBoundary *cameraBoundary; // @synthesize cameraBoundary=_cameraBoundary;
@property(copy, nonatomic) MKMapCameraZoomRange *cameraZoomRange; // @synthesize cameraZoomRange=_cameraZoomRange;
@property(nonatomic, getter=_currentFlyoverAnimationID, setter=_setCurrentFlyoverAnimationID:) unsigned long long currentFlyoverAnimationID; // @synthesize currentFlyoverAnimationID=_currentFlyoverAnimationID;
@property(nonatomic, getter=_edgeInsets, setter=_setEdgeInsets:) struct NSEdgeInsets edgeInsets; // @synthesize edgeInsets=_edgeInsets;
@property(nonatomic, getter=_interactionMode, setter=_setInteractionMode:) long long interactionMode; // @synthesize interactionMode=_interactionMode;
@property(retain, nonatomic) NSView *zoomButtons; // @synthesize zoomButtons=_zoomButtons;
@property(retain, nonatomic) MKAccessibilityItem *focusedAccessibilityItem; // @synthesize focusedAccessibilityItem;
@property(nonatomic) BOOL wantsAccessibilityUpdates; // @synthesize wantsAccessibilityUpdates;
@property(nonatomic) BOOL willUpdateAccessibilityItems; // @synthesize willUpdateAccessibilityItems;
@property(nonatomic) long long overlaysWritingDirection; // @synthesize overlaysWritingDirection=_overlaysWritingDirection;
@property(nonatomic, getter=_isAttributionBadgeClickable, setter=_setAttributionBadgeClickable:) BOOL attributionBadgeClickable; // @synthesize attributionBadgeClickable=_attributionBadgeClickable;
@property(nonatomic) BOOL showsAboutMapInContextualMenu; // @synthesize showsAboutMapInContextualMenu=_showsAboutMapInContextualMenu;
@property(retain, nonatomic) NSOrderedSet *storedAccessibilityItems; // @synthesize storedAccessibilityItems=_storedAccessibilityItems;
@property(readonly, nonatomic, getter=_calloutShowAnimationGroup) NSObject<OS_dispatch_group> *calloutShowAnimationGroup; // @synthesize calloutShowAnimationGroup=_calloutShowAnimationGroup;
- (void)zoomOut:(id)arg1;
- (void)zoomIn:(id)arg1;
@property(nonatomic) BOOL showsZoomControls;
@property(nonatomic) long long labelTextSize;
@property(retain, nonatomic) NSView *settingsView;
@property(readonly, retain, nonatomic) NSView *calloutView;
@property(readonly, nonatomic, getter=isCalloutVisible) BOOL calloutVisible;
@property(readonly, nonatomic, getter=isCalloutLeftAnchored) BOOL calloutLeftAnchored;
@property(nonatomic) NSView *nextKeyViewAfterSubtree;
@property(nonatomic) BOOL hidesAllUIOnMap;
- (BOOL)restoreViewportFromDictionary:(id)arg1;
- (id)viewportDictionary;
- (void)deselectAllMarkersAndAnnotationViews;
- (void)setCenterCoordinate:(struct CLLocationCoordinate2D)arg1 animated:(BOOL)arg2 completion:(CDUnknownBlockType)arg3;
- (void)setRegion:(CDStruct_b7cb895d)arg1 animated:(BOOL)arg2 completion:(CDUnknownBlockType)arg3;
- (id)compass;
- (struct CGPoint)pointInMapOnMouseDown;
- (id)seamlessOpeningURLForMapItems:(id)arg1 launchOptions:(id)arg2;
- (int)currentMapViewTargetForAnalytics;
- (int)currentUITargetForAnalytics;
- (void)_clearGesturesAndAnimations;
- (void)setVehicleState:(CDStruct_2920cfb7)arg1;
- (void)rotationFilter:(id)arg1 didChangeSnapping:(BOOL)arg2;
- (void)stopZoomingWithInertia;
- (void)startLinearZoomIn:(BOOL)arg1;
- (void)setCameraBoundary:(id)arg1 animated:(BOOL)arg2;
- (void)setCameraZoomRange:(id)arg1 animated:(BOOL)arg2;
- (void)setCamera:(id)arg1 springMass:(float)arg2 springStiffness:(float)arg3 springDamping:(float)arg4 springVelocity:(float)arg5;
- (void)setCamera:(id)arg1 duration:(double)arg2 springMass:(float)arg3 springStiffness:(float)arg4 springDamping:(float)arg5 springVelocity:(float)arg6 completionHandler:(CDUnknownBlockType)arg7;
- (void)setCamera:(id)arg1 duration:(double)arg2 springMass:(float)arg3 springStiffness:(float)arg4 springDamping:(float)arg5 springVelocity:(float)arg6;
- (void)setCamera:(id)arg1 animated:(BOOL)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)setCamera:(id)arg1 animated:(BOOL)arg2;
@property(copy, nonatomic) MKMapCamera *camera;
- (void)annotationManager:(id)arg1 didDeselectAnnotationRepresentation:(id)arg2;
- (void)annotationManager:(id)arg1 willDeselectAnnotationRepresentation:(id)arg2;
- (BOOL)annotationManager:(id)arg1 canSelectAnnotationRepresentation:(id)arg2;
- (BOOL)annotationManager:(id)arg1 shouldAnimateDeselectionOfAnnotation:(id)arg2 forSelectionOfAnnotation:(id)arg3;
- (void)annotationManager:(id)arg1 didSelectAnnotationRepresentation:(id)arg2;
- (id)annotationManager:(id)arg1 representationForAnnotation:(id)arg2;
- (void)annotationManagerDidChangeVisibleAnnotationRepresentations:(id)arg1;
- (void)annotationManager:(id)arg1 didRemoveAnnotationRepresentations:(id)arg2;
- (void)annotationManager:(id)arg1 didAddAnnotationRepresentations:(id)arg2;
- (BOOL)shouldHideOffscreenSelectedAnnotation;
- (CDUnknownBlockType)annotationCoordinateTest;
- (CDUnknownBlockType)annotationRectTest;
- (CDStruct_02837cd9)_mapRectWithFraction:(double)arg1 ofVisible:(CDStruct_02837cd9)arg2;
- (void)moveAnnotationRepresentation:(id)arg1 fromCoordinate:(struct CLLocationCoordinate2D)arg2 animated:(BOOL)arg3 duration:(double)arg4;
- (void)deselectAnnotationRepresentation:(id)arg1 animated:(BOOL)arg2;
- (void)selectAnnotationRepresentation:(id)arg1 animated:(BOOL)arg2;
- (void)removeAnnotationRepresentation:(id)arg1;
- (void)addAnnotationRepresentation:(id)arg1 allowAnimation:(BOOL)arg2;
- (void)_addAnnotationsCustomFeatureStoreIfNeeded;
- (void)mapLayerARSessionInterruptionEnded:(id)arg1;
- (void)mapLayer:(id)arg1 arSessionWasInterrupted:(unsigned long long)arg2;
- (void)mapLayer:(id)arg1 arTrackingStateDidChange:(unsigned long long)arg2 reason:(unsigned long long)arg3;
- (void)mapLayer:(id)arg1 didEncounterARError:(id)arg2;
- (void)mapLayerDidExitAR:(id)arg1;
- (void)mapLayerDidEnterAR:(id)arg1;
- (void)mapLayerWillEnterAR:(id)arg1;
- (void)setFlyoverMode:(int)arg1;
- (void)_resumeFlyoverAnimation;
- (void)_pauseFlyoverAnimation;
- (void)_stopFlyoverAnimation;
- (void)_startFlyoverTourAnimation:(unsigned long long)arg1 duration:(double)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_performFlyoverAnimation:(id)arg1 animateToStart:(BOOL)arg2;
- (void)_performFlyoverAnimation:(id)arg1;
- (void)_prepareFlyoverAnimation:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)deselectVenuePoiFeatureId;
- (void)setSelectedVenuePoiFeatureId:(unsigned long long)arg1;
- (short)defaultFloorForBuildingsInVenue:(id)arg1;
- (BOOL)displayedFloorIsDefaultForBuildingsInVenue:(id)arg1;
- (short)displayedFloorOrdinalForBuildingsInVenue:(id)arg1;
- (void)resetDisplayedFloorOrdinalForAllVenues;
- (void)setDisplayedFloorOrdinal:(short)arg1 forBuildingsInVenue:(id)arg2;
- (double)zoomToFocusVenueBuilding:(id)arg1;
- (double)zoomToFocusVenue:(id)arg1;
@property(nonatomic, getter=_isDimmingOutsideVenueWithFocus) BOOL dimmingOutsideVenueWithFocus;
@property(readonly, nonatomic) VKVenueBuildingFeatureMarker *venueBuildingWithFocus;
- (id)venueWithID:(unsigned long long)arg1;
@property(readonly, nonatomic) VKVenueFeatureMarker *venueWithFocus;
- (void)_setEdgeInsets:(struct NSEdgeInsets)arg1 explicit:(BOOL)arg2;
- (void)_resumePropagatingEdgeInsets;
- (void)_suspendPropagatingEdgeInsets;
@property(readonly, nonatomic, getter=_edgeInsetsLayoutGuide) NSLayoutGuide *edgeInsetsLayoutGuide;
@property(nonatomic, getter=_labelEdgeInsets, setter=_setLabelEdgeInsets:) struct NSEdgeInsets labelEdgeInsets;
- (void)updateLayoutGuides;
- (void)_clearLayoutGuides;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)_updateInsets;
- (void)_updateInsetsWithForce:(BOOL)arg1;
- (void)setCenterCoordinate:(struct CLLocationCoordinate2D)arg1 zoomLevel:(double)arg2 animated:(BOOL)arg3;
- (double)_goToCenterCoordinate:(struct CLLocationCoordinate2D)arg1 zoomLevel:(double)arg2 animated:(BOOL)arg3;
- (double)_zoomScaleForMapRegion:(id)arg1;
- (id)_mapRegionWithCenterCoordinate:(struct CLLocationCoordinate2D)arg1 zoomScale:(double)arg2;
- (double)_zoomLevelForRegion:(CDStruct_b7cb895d)arg1 includeAccessoryPadding:(BOOL)arg2;
- (double)_zoomLevelForMapRect:(CDStruct_02837cd9)arg1 includeAccessoryPadding:(BOOL)arg2;
- (double)_panDurationFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2;
- (double)_defaultAnimationDurationForMapRect:(CDStruct_02837cd9)arg1 edgePadding:(struct NSEdgeInsets)arg2;
- (void)setVisibleMapRect:(CDStruct_02837cd9)arg1 animated:(BOOL)arg2;
@property(nonatomic) CDStruct_02837cd9 visibleMapRect;
- (void)_setVisibleMapRect:(CDStruct_02837cd9)arg1 duration:(double)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_setVisibleMapRect:(CDStruct_02837cd9)arg1 animated:(BOOL)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)setVisibleMapRect:(CDStruct_02837cd9)arg1 edgePadding:(struct NSEdgeInsets)arg2 animated:(BOOL)arg3;
- (void)_goToMapRegion:(id)arg1 duration:(double)arg2 animated:(BOOL)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_goToMapRegion:(id)arg1 duration:(double)arg2 animated:(BOOL)arg3;
- (void)_setZoomScale:(double)arg1 centerCoordinate:(struct CLLocationCoordinate2D)arg2 duration:(double)arg3 animated:(BOOL)arg4;
- (void)_setZoomScale:(double)arg1 centerMapPoint:(CDStruct_c3b9c2ee)arg2 duration:(double)arg3 animated:(BOOL)arg4;
- (CDStruct_02837cd9)mapRectThatFits:(CDStruct_02837cd9)arg1;
- (CDStruct_02837cd9)mapRectThatFits:(CDStruct_02837cd9)arg1 edgePadding:(struct NSEdgeInsets)arg2;
- (CDStruct_b7cb895d)regionThatFits:(CDStruct_b7cb895d)arg1;
- (CDStruct_c0a8b48f)_zoomRegionForMapRect:(CDStruct_02837cd9)arg1 edgePadding:(struct NSEdgeInsets)arg2 maxZoomLevel:(long long)arg3 minZoomLevel:(long long)arg4;
@property(nonatomic) CDStruct_b7cb895d region;
- (void)setRegion:(CDStruct_b7cb895d)arg1 animated:(BOOL)arg2;
@property(readonly, nonatomic) CDStruct_c3b9c2ee _centerMapPoint;
@property(readonly, nonatomic, getter=_mapRegion) GEOMapRegion *mapRegion;
@property(nonatomic) struct CLLocationCoordinate2D centerCoordinate;
- (void)setCenterCoordinate:(struct CLLocationCoordinate2D)arg1 animated:(BOOL)arg2;
- (void)_addSetRegionBlockWhenSized:(CDUnknownBlockType)arg1;
- (BOOL)_mustWaitUntilSized;
- (void)_updateBackgroundStateNow;
- (void)_updateBackgroundStateSoon;
@property(nonatomic) BOOL continueToRenderWhenOccluded;
- (void)containingWindowWillClose:(id)arg1;
- (void)windowDidChangeOcclusionState:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)_removePersistentVectorOverlay:(id)arg1;
- (void)_addPersistentVectorOverlay:(id)arg1;
- (void)_removeVectorOverlay:(id)arg1;
- (void)_addVectorOverlay:(id)arg1;
@property(nonatomic, getter=_displayedSearchResultsType, setter=_setDisplayedSearchResultsType:) long long displayedSearchResultsType;
@property(nonatomic, getter=_applicationState, setter=_setApplicationState:) int applicationState;
@property(nonatomic, getter=_userTrackingZoomStyle, setter=_setUserTrackingZoomStyle:) long long userTrackingZoomStyle;
@property(readonly, nonatomic, getter=_canEnterNightMode) BOOL canEnterNightMode;
@property(readonly, nonatomic, getter=_canEnter3DModeFlyover) BOOL canEnter3DModeFlyover;
@property(readonly, nonatomic, getter=_canEnter3DMode) BOOL canEnter3DMode;
@property(readonly, nonatomic, getter=_isPitched) BOOL pitched;
- (void)_exitARMode;
- (void)_enterARModeWithLocation:(id)arg1;
- (void)_enterARMode;
- (void)_exit3DMode;
- (void)_enter3DMode;
- (struct CGRect)convertMapRect:(CDStruct_02837cd9)arg1 toRectToView:(id)arg2;
- (CDStruct_02837cd9)convertRect:(struct CGRect)arg1 toMapRectFromView:(id)arg2;
- (CDStruct_b7cb895d)convertRect:(struct CGRect)arg1 toRegionFromView:(id)arg2;
- (struct CGRect)convertRegion:(CDStruct_b7cb895d)arg1 toRectToView:(id)arg2;
- (struct CLLocationCoordinate2D)convertPoint:(struct CGPoint)arg1 toCoordinateFromView:(id)arg2;
- (struct CGPoint)convertCoordinate:(struct CLLocationCoordinate2D)arg1 toPointToView:(id)arg2;
@property(nonatomic) BOOL _annotationViewsAreAddedImmediately;
- (id)viewForAnnotation:(id)arg1;
- (void)registerClass:(Class)arg1 forAnnotationViewWithReuseIdentifier:(id)arg2;
- (id)dequeueReusableAnnotationViewWithIdentifier:(id)arg1 forAnnotation:(id)arg2;
- (id)dequeueReusableAnnotationViewWithIdentifier:(id)arg1;
- (void)_addViewsForAnnotations:(id)arg1;
- (void)_replaceAnnotation:(id)arg1 withAnnotation:(id)arg2;
- (void)removeAnnotations:(id)arg1;
- (void)removeAnnotation:(id)arg1;
- (void)_addAnnotations:(id)arg1 allowAnimation:(BOOL)arg2;
- (void)addAnnotations:(id)arg1;
- (void)addAnnotation:(id)arg1;
- (void)_addAnnotation:(id)arg1 allowAnimation:(BOOL)arg2;
- (void)deselectAnnotation:(id)arg1 animated:(BOOL)arg2;
- (void)selectAnnotation:(id)arg1 animated:(BOOL)arg2;
- (void)_selectAnnotation:(id)arg1 animated:(BOOL)arg2;
- (void)navigationCameraReturnToPuck;
- (id)_labelMarkerForCustomFeatureAnnotation:(id)arg1;
- (id)_labelMarkerAtPoint:(struct CGPoint)arg1;
- (void)_selectLabelMarker:(id)arg1 animated:(BOOL)arg2;
- (void)_deselectLabelMarkerAnimated:(BOOL)arg1;
@property(readonly, nonatomic, getter=_selectedLabelMarker) VKLabelMarker *selectedLabelMarker;
@property(nonatomic, getter=_canSelectAllLabels, setter=_setCanSelectAllLabels:) BOOL canSelectAllLabels;
@property(nonatomic, getter=_canSelectPOIs, setter=_setCanSelectPOIs:) BOOL canSelectPOIs;
@property(copy, nonatomic) NSArray *selectedAnnotations;
@property(readonly, nonatomic, getter=_annotationViews) NSArray *annotationViews;
- (id)annotationsInMapRect:(CDStruct_02837cd9)arg1;
@property(readonly, nonatomic) struct CGRect annotationVisibleRect;
@property(readonly, nonatomic) NSArray *annotations;
- (void)goToDefaultLocation;
- (void)_displayWorld;
- (void)calloutDidAppearForAnnotationView:(id)arg1 inContainer:(id)arg2;
- (double)annotationContainerZoomScale:(id)arg1;
- (void)annotationContainer:(id)arg1 calloutPrimaryActionTriggeredForAnnotationView:(id)arg2;
- (void)annotationContainerDidDropPins:(id)arg1;
- (void)annotationContainerWillDropPins:(id)arg1;
- (double)annotationContainer:(id)arg1 pinDropDistanceForCoordinate:(struct CLLocationCoordinate2D)arg2 maxDistance:(double *)arg3;
- (BOOL)annotationContainer:(id)arg1 isAnnotationView:(id)arg2 validForDisplayAtPoint:(struct CGPoint)arg3;
- (struct CGRect)annotationContainerVisibleRect:(id)arg1;
- (void)annotationContainerDidFinishMapsTransitionExpanding:(id)arg1;
- (void)annotationContainerDidAnimateBubble:(id)arg1;
- (void)annotationContainerWillAnimateBubble:(id)arg1;
- (void)annotationContainer:(id)arg1 requestRemovingClusterAnnotationView:(id)arg2 updateVisible:(BOOL)arg3;
- (id)annotationContainer:(id)arg1 requestAddingClusterForAnnotationViews:(id)arg2;
- (void)annotationContainer:(id)arg1 scrollToRevealCalloutWithOffset:(struct CGPoint)arg2 annotationCoordinate:(struct CLLocationCoordinate2D)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (BOOL)annotationContainerShouldAlignToPixels:(id)arg1;
- (BOOL)annotationContainerIsRotated:(id)arg1;
- (struct CGRect)visibleCenteringRectInView:(id)arg1;
- (struct CGRect)visibleRectInView:(id)arg1;
- (void)applicationDidResignActiveOrWillTerminate:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)_issueDatasetCheckinCall;
- (void)mapLayerNavigationCameraDidReturnToDefaultZoom;
- (void)mapLayerNavigationCameraDidLeaveDefaultZoom;
- (void)mapLayerNavigationCameraHasStoppedPanning;
- (void)mapLayerNavigationCameraHasStartedPanning;
- (void)mapLayerCanZoomOutDidChange:(BOOL)arg1;
- (void)mapLayerCanZoomInDidChange:(BOOL)arg1;
- (void)mapLayerCanEnter3DModeDidChange:(BOOL)arg1;
- (void)mapLayerDidBecomePitched:(BOOL)arg1;
- (id)mapLayerPresentationForAnnotation:(id)arg1;
- (void)mapLayerDidChangeRegionAnimated:(BOOL)arg1;
- (void)mapLayerWillChangeRegionAnimated:(BOOL)arg1;
- (void)mapLayerDidChangeVisibleRegion;
- (void)mapLayer:(id)arg1 venueCreated:(id)arg2 venueCreatedBuilding:(id)arg3;
- (void)mapLayer:(id)arg1 venueWithFocusDidChange:(id)arg2 building:(id)arg3;
- (void)mapLayer:(id)arg1 willTransitionTo:(long long)arg2;
- (void)mapLayerDidDraw:(id)arg1;
- (BOOL)_mapViewHasUpdatedCamera;
- (void)mapLayer:(id)arg1 flyoverTourLabelDidChange:(id)arg2;
- (void)mapLayer:(id)arg1 didStopFlyoverTourCompleted:(BOOL)arg2;
- (void)mapLayerWillStartFlyoverTour:(id)arg1;
- (void)mapLayer:(id)arg1 didUpdateVerticalYawTo:(double)arg2;
- (void)mapLayer:(id)arg1 selectedLabelMarkerWillDisappear:(id)arg2;
- (void)mapLayerDidChangeSceneState:(id)arg1 withState:(unsigned long long)arg2;
- (void)mapLayerDidFailLoadingTiles:(id)arg1 withError:(id)arg2;
- (void)mapLayerDidFinishLoadingTiles:(id)arg1;
- (void)mapLayerDidStartLoadingTiles:(id)arg1;
@property(nonatomic, getter=_automaticallySnapsToNorth, setter=_setAutomaticallySnapsToNorth:) BOOL automaticallySnapsToNorth;
- (void)_snapToTrueNorthAndCallBack:(BOOL)arg1;
- (void)snapToNorth:(id)arg1;
- (id)zoomVisibilityAnimation;
- (void)_updateZoomControlsVisiblility:(BOOL)arg1;
- (void)_updateZoomControlsVisiblility;
- (id)compassVisibilityAnimation;
- (BOOL)compassVisible;
- (void)_setCompassVisible:(BOOL)arg1 animated:(BOOL)arg2 force:(BOOL)arg3;
- (void)_handleCompassTap:(id)arg1;
- (void)_updateCompassViewPitch;
- (void)_updateCompassVisibility;
- (id)compassView;
- (BOOL)_roomForCompass;
@property(nonatomic) BOOL showsCompass;
- (double)presentationYaw;
- (void)_showOrHideScaleIfNecessary:(BOOL)arg1;
- (void)_updateScale;
@property(readonly, nonatomic, getter=_canShowControls) BOOL canShowControls;
- (id)scaleView;
@property(nonatomic, getter=_showsScaleDuringZoom, setter=_setShowsScaleDuringZoom:) BOOL showsScaleDuringZoom;
@property(nonatomic) BOOL showsScale;
- (void)_sizeDidChangeWithCenterCoordinate:(struct CLLocationCoordinate2D)arg1;
- (void)_sizeWillChange;
- (void)resumeUserLocationUpdates;
- (void)pauseUserLocationUpdates;
- (void)_updateContentBounds;
- (void)showAnnotations:(id)arg1 animated:(BOOL)arg2;
@property(readonly, nonatomic) BOOL effectsEnabled;
- (void)_updateEffects;
- (void)_updateShouldDisplayEffects;
- (void)_startEffects;
- (id)beginStoppingEffects;
- (void)_stopEffects;
- (void)_updateScrollContainerView:(BOOL)arg1 forReason:(long long)arg2;
- (void)_updateFallbackTileLoading;
- (double)_boundedZoomLevel:(double)arg1;
- (void)_annotationViewDragStateChanged:(id)arg1;
@property(nonatomic, getter=_shouldLoadFallbackTiles, setter=_setShouldLoadFallbackTiles:) BOOL shouldLoadFallbackTiles;
@property(nonatomic, getter=_shouldAnimatePositionWithRouteMatch, setter=_setShouldAnimatePositionWithRouteMatch:) BOOL shouldAnimatePositionWithRouteMatch;
@property(nonatomic, getter=_shouldSplitRouteLine, setter=_setShouldSplitRouteLine:) BOOL shouldSplitRouteLine;
@property(nonatomic, getter=_isLocationPulseEnabled, setter=_setLocationPulseEnabled:) BOOL locationPulseEnabled;
@property(nonatomic, getter=_userInteractionPausesLocationUpdates, setter=_setUserInteractionPausesLocationUpdates:) BOOL userInteractionPausesLocationUpdates;
- (BOOL)_isZooming;
- (void)_didEndZoom;
- (void)_willStartZoom:(BOOL)arg1;
- (void)_didChangeRegionMidstream:(BOOL)arg1;
- (void)_willChangeRegionAnimated:(BOOL)arg1;
- (void)_updateIconsShouldAlignToPixels;
- (BOOL)_iconsShouldAlignToPixels;
@property(readonly, nonatomic, getter=_isAnimating) BOOL animating;
@property(readonly, nonatomic, getter=_currentEnvironmentLabelFrame) struct CGRect currentEnvironmentLabelFrame;
@property(nonatomic, getter=_showsCurrentEnvironmentName, setter=_setShowsCurrentEnvironmentName:) BOOL showsCurrentEnvironmentName;
- (BOOL)_isUsingDevResourceStyleSheet;
- (void)_updateEnvironmentLabelText;
- (void)_handleSelectionAtPoint:(struct CGPoint)arg1;
- (void)_updateScrollingAndGestures;
- (void)_clearGestureRecognizers;
- (void)_dropDraggingAnnotationView:(BOOL)arg1;
- (id)_annotationAtPoint:(struct CGPoint)arg1 avoidCurrent:(BOOL)arg2;
@property(readonly, nonatomic) BOOL hasUserLocation;
@property(readonly, nonatomic) MKUserLocation *userLocation;
@property(readonly, nonatomic) BOOL hasRenderedSomething;
@property(readonly, nonatomic, getter=isUserLocationVisible) BOOL userLocationVisible;
@property(nonatomic) BOOL showsUserLocation;
- (void)_setTracePlaybackSpeedMultiplier:(double)arg1;
@property(nonatomic, getter=isPitchEnabled) BOOL pitchEnabled;
@property(nonatomic, getter=isRotateEnabled) BOOL rotateEnabled;
@property(nonatomic, getter=isZoomEnabled) BOOL zoomEnabled;
@property(nonatomic, getter=isScrollEnabled) BOOL scrollEnabled;
- (void)resizeSubviewsWithOldSize:(struct CGSize)arg1;
- (void)setFrameOrigin:(struct CGPoint)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)disableAndRearmEnableMarkerPixelAlignment;
- (void)disableMarkerPixelAlignment;
- (void)enableMarkerPixelAlignment;
@property(readonly, nonatomic, getter=_maximumZoomLevel) double maximumZoomLevel;
@property(readonly, nonatomic, getter=_minimumZoomLevel) double minimumZoomLevel;
- (double)_vectorKitTileZoomLevelForMapKitZoomLevel:(double)arg1;
- (double)_mapKitZoomLevelForVectorKitTileZoomLevel:(double)arg1;
@property(readonly, nonatomic) double _zoomLevel;
@property(readonly, nonatomic) double _zoomScale;
- (long long)_roundedZoomLevel;
- (BOOL)_isHandlingUserEvent;
- (struct CGPoint)_centerPoint;
@property(readonly, nonatomic, getter=isRegionChanging) BOOL regionChanging;
- (BOOL)userIsGesturing;
- (void)_setMapDisplayStyle:(CDStruct_51745937)arg1;
- (CDStruct_51745937)_mapDisplayStyle;
@property(nonatomic, getter=_showsNightMode, setter=_setShowsNightMode:) BOOL showsNightMode;
- (void)_setMapType:(unsigned long long)arg1 onInit:(BOOL)arg2 animated:(BOOL)arg3 forceSetting:(BOOL)arg4;
- (void)_setMapType:(unsigned long long)arg1 onInit:(BOOL)arg2 animated:(BOOL)arg3;
- (void)_setMapType:(unsigned long long)arg1 animated:(BOOL)arg2;
- (BOOL)_supportsVKMapType:(int)arg1;
@property(nonatomic) unsigned long long mapType;
@property(readonly, nonatomic, getter=_canShowFlyover) BOOL canShowFlyover;
@property(readonly, nonatomic, getter=_isShowingFlyover) BOOL showingFlyover;
@property(readonly, nonatomic, getter=_nonselectingClickGestureRecognizer) NSClickGestureRecognizer *nonselectingClickGestureRecognizer;
@property(readonly, nonatomic, getter=_selectingClickGestureRecognizer) NSClickGestureRecognizer *selectingClickGestureRecognizer;
- (BOOL)isShowingNoDataPlaceholders;
@property(nonatomic, getter=_showsVenues, setter=_setShowsVenues:) BOOL showsVenues;
@property(nonatomic) BOOL showsBuildings;
@property(nonatomic) BOOL showsPointsOfInterest;
@property(nonatomic, getter=_localizeLabels, setter=_setLocalizeLabels:) BOOL localizeLabels;
@property(nonatomic, getter=_showsTrafficIncidents, setter=_setShowsTrafficIncidents:) BOOL showsTrafficIncidents;
- (void)_removeCustomFeatureDataSource:(id)arg1;
- (void)_addCustomFeatureDataSource:(id)arg1;
@property(nonatomic) BOOL showsTraffic;
- (void)valueChangedForGEOConfigKey:(CDStruct_35640fce)arg1;
- (void)resourceManifestManagerDidChangeActiveTileGroup:(id)arg1;
- (void)resourceManifestManagerWillChangeActiveTileGroup:(id)arg1;
- (id)urlForMapAttribution;
- (struct CGRect)attributionFrame;
- (void)_updateAttribution;
@property(nonatomic) int attributionCorner;
- (id)_mapAttribution;
@property(readonly, nonatomic) struct CGRect attributionBadgeBounds;
@property(readonly, nonatomic, getter=_isShowingAttributionBadge) BOOL showingAttributionBadge;
@property(nonatomic) BOOL canShowAttributionBadge;
@property(nonatomic) BOOL showsAttribution;
@property(readonly, nonatomic, getter=_mapLayer) VKMapView *mapLayer;
- (void)_forceManifestUpdateIfNecessary;
@property(nonatomic, getter=_safeDelegate, setter=_setSafeDelegate:) __weak id <MKMapViewDelegate> _safeDelegate;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)_initWithFrame:(struct CGRect)arg1 gestureRecognizerHostView:(id)arg2 showsAttribution:(BOOL)arg3 showsAppleLogo:(BOOL)arg4;
- (id)_commonInitFromIB:(BOOL)arg1 gestureRecognizerHostView:(id)arg2 showsAttribution:(BOOL)arg3 showsAppleLogo:(BOOL)arg4;
- (id)actionForLayer:(id)arg1 forKey:(id)arg2;
@property(nonatomic, getter=_useBalloonCalloutsForLabels, setter=_setUseBalloonCalloutsForLabels:) BOOL useBalloonCalloutsForLabels;
- (void)_snapToNorthIfNecessary;
- (void)_updateCameraState;
- (void)_updateFromCamera:(id)arg1;
- (void)_updateFromCamera:(id)arg1 duration:(double)arg2 timing:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (double)_animationDurationWhenSettingCameraBoundary:(id)arg1;
- (void)_setCameraBoundary:(id)arg1 animated:(BOOL)arg2;
- (void)_setCameraZoomRange:(id)arg1 animated:(BOOL)arg2;
- (void)_setCamera:(id)arg1 duration:(double)arg2 springMass:(float)arg3 springStiffness:(float)arg4 springDamping:(float)arg5 springVelocity:(float)arg6 completionHandler:(CDUnknownBlockType)arg7;
- (void)_setCamera:(id)arg1 springMass:(float)arg2 springStiffness:(float)arg3 springDamping:(float)arg4 springVelocity:(float)arg5;
- (void)_setCamera:(id)arg1 duration:(double)arg2 timing:(CDUnknownBlockType)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)_setCamera:(id)arg1 duration:(double)arg2 timingFunction:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (CDUnknownBlockType)_vkTimingFunctionForCAMediaTimingFunction:(id)arg1;
- (void)_setCamera:(id)arg1 animated:(BOOL)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_setCamera:(id)arg1 animated:(BOOL)arg2;
- (double)_cameraAltitudeClampedToZoomRange:(id)arg1;
- (double)_durationForCamera:(id)arg1;
- (void)_setCamera:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)_setCamera:(id)arg1;
- (id)_camera;
- (id)_flattenedAnnotationsForAnnotationViews:(id)arg1 maxDisplayPriority:(float *)arg2;
@property(nonatomic) __weak id <MKMapViewDelegate> delegate; // @dynamic delegate;
- (void)locationManager:(id)arg1 didUpdateVehicleSpeed:(double)arg2 timestamp:(id)arg3;
- (void)locationManagerDidResumeLocationUpdates:(id)arg1;
- (void)locationManagerDidPauseLocationUpdates:(id)arg1;
- (BOOL)locationManagerShouldPauseLocationUpdates:(id)arg1;
- (void)locationManagerDidReset:(id)arg1;
- (void)locationManagerFailedToUpdateLocation:(id)arg1 withError:(id)arg2;
- (void)locationManagerUpdatedLocation:(id)arg1;
- (void)_updateUserLocationViewWithLocation:(id)arg1 hadUserLocation:(BOOL)arg2;
@property(readonly, retain, nonatomic) MKAnnotationView *userLocationView;
- (void)_updateUserLocation:(id)arg1 routeMatch:(id)arg2;
- (void)_resumeUserLocationUpdates:(BOOL)arg1;
- (void)_pauseUserLocationUpdates;
@property(nonatomic) BOOL ignoreLocationUpdates;
- (void)removeUserLocation;
@property(retain, nonatomic) CLLocation *predictedUserLocation;
- (BOOL)_userLocationWithinVisibleMapBounds;
- (BOOL)_isUserLocationViewCentered:(double)arg1;
- (BOOL)_isUserLocationInView:(BOOL)arg1;
- (void)_setClearUserLocationOnLocationReset:(BOOL)arg1;
- (BOOL)_clearUserLocationOnLocationReset;
- (void)_setLocationPropagationEnabled:(BOOL)arg1;
- (BOOL)_isLocationPropagationEnabled;
- (void)stopUpdatingUserLocation;
- (void)startUpdatingUserLocation;
- (struct CGPoint)gestureController:(id)arg1 focusPointForPoint:(struct CGPoint)arg2 gestureKind:(long long)arg3;
- (BOOL)gestureController:(id)arg1 shouldAttemptToRecognizeWithEvent:(id)arg2;
- (void)gestureControllerDidStopRotatingDecelerating:(id)arg1;
- (void)gestureControllerDidStopTiltingDecelerating:(id)arg1;
- (void)gestureControllerDidStopTilting:(id)arg1 willDecelerate:(BOOL)arg2 tiltDirection:(long long)arg3;
- (void)gestureControllerWillStartTilting:(id)arg1;
- (void)gestureControllerDidStopRotating:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)gestureControllerWillStartRotating:(id)arg1;
- (void)gestureControllerDidStopZoomingDecelerating:(id)arg1 direction:(long long)arg2 type:(long long)arg3;
- (void)gestureControllerDidStopZoomingDecelerating:(id)arg1 direction:(long long)arg2;
- (void)gestureControllerDidStopZooming:(id)arg1 direction:(long long)arg2 type:(long long)arg3 willDecelerate:(BOOL)arg4;
- (void)gestureControllerDidStopZooming:(id)arg1 direction:(long long)arg2 willDecelerate:(BOOL)arg3;
- (void)gestureControllerWillStartZooming:(id)arg1 animated:(BOOL)arg2;
- (void)gestureControllerDidStopPanningDecelerating:(id)arg1;
- (void)gestureControllerDidStopPanning:(id)arg1 willDecelerate:(BOOL)arg2;
- (void)gestureControllerWillStartPanning:(id)arg1;
- (void)gestureControllerDidStopUserInteraction:(id)arg1;
- (void)gestureControllerWillStartUserInteraction:(id)arg1;
@property(readonly, nonatomic, getter=_isChangingRegionForGesture) BOOL changingRegionForGesture;
- (void)_handleSelectGestureToDeselect:(id)arg1;
- (void)_handleSelectGestureToSelect:(id)arg1;
- (void)_handleLongPressGesture:(id)arg1;
- (BOOL)_gestureRecognizer:(id)arg1 shouldAttemptToRecognizeWithEvent:(id)arg2;
- (BOOL)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
- (BOOL)gestureRecognizerShouldBegin:(id)arg1;
- (void)_configureGestureRecognizers:(id)arg1;
@property(nonatomic, getter=_selectedFeatureID, setter=_setSelectedFeatureID:) unsigned long long selectedFeatureID;
- (void)setZoomLevel:(double)arg1 animated:(BOOL)arg2;
- (double)currentZoomLevel;
- (double)maximumZoomLevel;
- (double)minimumZoomLevel;
- (double)zoomLevel;
@property(nonatomic) BOOL trafficEnabled;
- (double)pitch;
- (double)yaw;
- (BOOL)isShowingFlyover;
@property(nonatomic) BOOL markersEnabled;
- (void)setLocalizeLabels:(BOOL)arg1;
- (BOOL)localizeLabels;
@property(nonatomic, getter=_rotationSnappingEnabled, setter=_setRotationSnappingEnabled:) BOOL rotationSnappingEnabled;
- (void)exit3DMode;
- (void)enter3DMode;
@property(readonly, nonatomic) CALayer *annotationsContainerLayer;
- (id)_transitLineMarkersForSelectionAtPoint:(struct CGPoint)arg1;
@property(readonly, nonatomic, getter=_detailedDescriptionDictionaryRepresentation) NSDictionary *detailedDescriptionDictionaryRepresentation;
@property(readonly, nonatomic, getter=_detailedDescription) NSString *detailedDescription;
@property(readonly, nonatomic, getter=_visibleTileSets) NSArray *visibleTileSets;
- (void)_invalidateAllOverlayRendererColors;
- (id)vk_mapLayer;
- (void)overlayContainerAddedDrawables:(id)arg1;
- (id)createDrawableForOverlay:(id)arg1;
- (id)overlayContainer;
- (id)overlaysInLevel:(long long)arg1;
@property(readonly, nonatomic) NSArray *overlays;
- (id)rendererForOverlay:(id)arg1;
- (void)insertOverlay:(id)arg1 belowOverlay:(id)arg2;
- (void)insertOverlay:(id)arg1 aboveOverlay:(id)arg2;
- (void)exchangeOverlay:(id)arg1 withOverlay:(id)arg2;
- (void)exchangeOverlayAtIndex:(unsigned long long)arg1 withOverlayAtIndex:(unsigned long long)arg2;
- (void)insertOverlay:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)removeOverlays:(id)arg1;
- (void)removeOverlay:(id)arg1;
- (void)insertOverlay:(id)arg1 atIndex:(unsigned long long)arg2 level:(long long)arg3;
- (void)addOverlays:(id)arg1 level:(long long)arg2;
- (void)addOverlay:(id)arg1 level:(long long)arg2;
- (void)addOverlays:(id)arg1;
- (void)addOverlay:(id)arg1;
- (void)_focusAccessibilityItemWithDelta:(long long)arg1;
- (void)focusPreviousAccessibilityItem;
- (void)focusNextAccessibilityItem;
- (id)accessibilityChildren;
- (id)accessibilityVisibleChildren;
@property(readonly, retain) NSOrderedSet *accessibilityItems; // @dynamic accessibilityItems;
- (void)_checkIfNeedToUpdateAccessibilityItems;
- (void)setNeedsUpdateAccessibilityItems:(BOOL)arg1;
- (void)_updateAccessibilityItemsNow;
- (id)accessibilityItemAtPoint:(struct CGPoint)arg1;
- (id)accessibilityFocusedUIElement;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (BOOL)accessibilityIsAttributeSettable:(id)arg1;
- (BOOL)accessibilityIsIgnored;
- (id)accessibilityAttributeValue:(id)arg1;
- (id)accessibilityAttributeNames;
- (id)_preferredAppearance;
- (void)_updateCachedMapsAppearance;
- (void)_withEffectiveAppearance:(CDUnknownBlockType)arg1;
- (void)_updateSkyglowAppearance;
- (BOOL)layer:(id)arg1 shouldInheritContentsScale:(double)arg2 fromWindow:(id)arg3;
- (void)_contextualMenuAboutMaps;
- (void)prepareMenu:(id)arg1 withEvent:(id)arg2;
- (id)menuForEvent:(id)arg1;
- (BOOL)performKeyEquivalent:(id)arg1;
- (void)flagsChanged:(id)arg1;
- (void)keyUp:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)cancelOperation:(id)arg1;
- (void)startLinearZoomIn:(BOOL)arg1 withSpeed:(double)arg2;
- (void)startLinearZoomIn:(BOOL)arg1 withEvent:(id)arg2;
- (void)updateTrackingAreas;
- (BOOL)shouldRecognizeMouseOverSelectablePartsOnly;
- (void)_clearMouseOverLabelRecognizers;
- (void)_updateMouseOverLabelRecognizers;
- (id)_labelMarkersInViewport;
- (void)mouseOverLabelRecognizer:(id)arg1 stateChangedWithEvent:(id)arg2;
- (void)setMouseOverFeedbackState:(long long)arg1;
@property(nonatomic) BOOL canShowMouseOverFeedback;
- (void)mapLayerLabelsDidLayout:(id)arg1;
- (void)_updateAllUIOnMapVisibility;
- (void)_layoutBottomViews;
- (void)_insertKeyView:(id)arg1 afterKeyView:(id)arg2;
- (id)_lastKeyViewInSubtree;
- (BOOL)showsSettingsView;
- (void)_setSettingsView:(id)arg1;
- (void)zoomControlSegmentPressed:(id)arg1;
- (void)makeZoomButtonsIfNeeded;
- (void)viewDidChangeEffectiveAppearance;
- (void)rotateWithEvent:(id)arg1;
- (void)magnifyWithEvent:(id)arg1;
- (void)smartMagnifyWithEvent:(id)arg1;
- (void)scrollWheel:(id)arg1;
- (struct CGPoint)zoomPointInMapViewFromPoint:(struct CGPoint)arg1 smartAiming:(BOOL)arg2 lockOnPreviousTarget:(BOOL)arg3;
- (struct CGPoint)zoomPointInMapViewFromEvent:(id)arg1 smartAiming:(BOOL)arg2 lockOnPreviousTarget:(BOOL)arg3;
- (struct CGPoint)pointInMapViewFromEvent:(id)arg1;
- (BOOL)_gesturesShouldAttemptToRecognizeWithEvent:(id)arg1;
- (id)_viewsToIgnoreForGestures;
- (void)_logTimeSpentInCurrentMapMode;
- (void)cursorUpdate:(id)arg1;
- (BOOL)acceptsFirstMouse:(id)arg1;
- (BOOL)mouseDownCanMoveWindow;
- (BOOL)isFlipped;
- (BOOL)allowsVibrancy;
- (void)setGestureRecognizers:(id)arg1;
- (void)_forceMapViewLayout;
- (BOOL)isOpaque;
- (void)_addOverlayButtonWithTitle:(id)arg1 target:(id)arg2 action:(SEL)arg3;
- (double)_distanceFromPoint:(struct CGPoint)arg1 toPoint:(struct CGPoint)arg2 fromView:(id)arg3 withPrecision:(long long)arg4;
- (struct CGRect)_convertMapRect:(CDStruct_02837cd9)arg1 toRectToView:(id)arg2;
- (CDStruct_02837cd9)_convertRect:(struct CGRect)arg1 toMapRectFromView:(id)arg2;
- (CDStruct_b7cb895d)_convertRect:(struct CGRect)arg1 toRegionFromView:(id)arg2;
- (struct CGRect)_convertRegion:(CDStruct_b7cb895d)arg1 toRectToView:(id)arg2;
- (CDStruct_c3b9c2ee)_convertPoint:(struct CGPoint)arg1 toMapPointFromView:(id)arg2;
- (struct CGPoint)_convertMapPoint:(CDStruct_c3b9c2ee)arg1 toPointToView:(id)arg2;
- (struct CLLocationCoordinate2D)_convertPoint:(struct CGPoint)arg1 toCoordinateFromView:(id)arg2;
- (struct CGPoint)_convertCoordinate:(struct CLLocationCoordinate2D)arg1 toPointToView:(id)arg2;
- (void)_setAlternateRouteContextAnnotationETAComparison:(unsigned char)arg1 forRoute:(id)arg2;
- (void)_setRouteContextAnnotationFocus:(BOOL)arg1 forRoute:(id)arg2;
- (void)_setRouteContextAnnotationText:(id)arg1 tollCurrency:(unsigned char)arg2 forRoute:(id)arg3;
- (id)_routeInfoForRoute:(id)arg1;
- (void)_clearRouteContext;
- (void)_setRouteContextInspectedLegIndex:(unsigned long long)arg1 inspectedStepIndex:(unsigned long long)arg2;
- (void)_setRouteContextForRoutes:(id)arg1 selectedRouteIndex:(unsigned long long)arg2;
- (void)_setRouteContextForRoute:(id)arg1;
- (id)_selectedTransitLineIDs;
- (BOOL)_hasSelectedTransitLines;
- (void)_deselectTransitLineMarker;
- (void)_selectTransitLineMarkerWithIdentifier:(id)arg1;
- (void)_selectTransitLineMarker:(id)arg1;
- (id)_transitLineMarkerForIdentifier:(id)arg1;
@property(readonly, nonatomic, getter=_transitLineMarkersInCurrentViewport) NSArray *transitLineMarkersInCurrentViewport;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

