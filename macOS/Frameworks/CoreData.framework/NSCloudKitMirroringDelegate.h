//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSPersistentStoreMirroringDelegate.h"
#import "PFCloudKitExporterDelegate.h"

@class CDDCloudKitClient, CKContainer, CKDatabase, CKDatabaseSubscription, CKNotificationListener, CKRecordZone, CKScheduler, NSCloudKitMirroringDelegateOptions, NSCloudKitMirroringRequestManager, NSError, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_semaphore>, NSPersistentStore, NSPersistentStoreCoordinator, NSSQLCore, NSString, PFCloudKitExporterOptions, PFCloudKitThrottledNotificationObserver;

@interface NSCloudKitMirroringDelegate : NSObject <PFCloudKitExporterDelegate, NSPersistentStoreMirroringDelegate>
{
    NSCloudKitMirroringDelegateOptions *_options;
    NSString *_ckDatabaseName;
    NSObject<OS_dispatch_semaphore> *_cloudKitQueueSemaphore;
    NSObject<OS_dispatch_queue> *_cloudKitQueue;
    CKRecordZone *_recordZone;
    CKDatabaseSubscription *_databaseSubscription;
    CKContainer *_container;
    CKDatabase *_database;
    CKScheduler *_scheduler;
    CKNotificationListener *_notificationListener;
    NSError *_lastInitializationError;
    BOOL _hadObservedStore;
    BOOL _successfullyInitialized;
    PFCloudKitExporterOptions *_exporterOptions;
    CDDCloudKitClient *_coredatadClient;
    NSSQLCore *_observedStore;
    NSPersistentStoreCoordinator *_observedCoordinator;
    PFCloudKitThrottledNotificationObserver *_accountChangeObserver;
    PFCloudKitThrottledNotificationObserver *_appActivateLifecycleObserver;
    PFCloudKitThrottledNotificationObserver *_appDeactivateLifecycleObserver;
    NSCloudKitMirroringRequestManager *_requestManager;
}

+ (BOOL)isFirstPartyContainerIdentifier:(id)arg1;
+ (id)stringForResetReason:(unsigned long long)arg1;
+ (void)initialize;
+ (id)createCloudKitServerWithMachServiceName:(id)arg1 andStorageDirectoryPath:(id)arg2;
+ (id)cloudKitMachServiceName;
+ (id)cloudKitMetadataTransformerName;
+ (BOOL)checkIfContentsOfStore:(id)arg1 matchContentsOfStore:(id)arg2 error:(id *)arg3;
+ (BOOL)checkForCloudKitTablesInStoreAtURL:(id)arg1 withPersistentStoreCoordinator:(id)arg2 withConfiguration:(id)arg3;
+ (BOOL)checkAndCreateDirectoryAtURL:(id)arg1 wipeIfExists:(BOOL)arg2 error:(id *)arg3;
+ (id)makeACopyOfTheStoreAtURL:(id)arg1 withCoordinator:(id)arg2 error:(id *)arg3;
+ (void)printRepresentativeSchemaForModelAtURL:(id)arg1 orStoreAtURL:(id)arg2 withConfiguration:(id)arg3;
+ (void)printMetadataForStoreAtURL:(id)arg1 withConfiguration:(id)arg2 operateOnACopy:(BOOL)arg3;
- (void).cxx_destruct;
@property(readonly, retain, nonatomic) NSCloudKitMirroringRequestManager *requestManager; // @synthesize requestManager=_requestManager;
@property(readonly, nonatomic) BOOL hadObservedStore; // @synthesize hadObservedStore=_hadObservedStore;
@property(readonly, nonatomic) PFCloudKitExporterOptions *exporterOptions; // @synthesize exporterOptions=_exporterOptions;
@property(readonly, nonatomic) BOOL successfullyInitialized; // @synthesize successfullyInitialized=_successfullyInitialized;
@property(readonly, nonatomic) __weak NSPersistentStoreCoordinator *observedCoordinator; // @synthesize observedCoordinator=_observedCoordinator;
@property(readonly, nonatomic) __weak NSPersistentStore *observedStore; // @synthesize observedStore=_observedStore;
@property(readonly, nonatomic) NSError *lastInitializationError; // @synthesize lastInitializationError=_lastInitializationError;
@property(readonly, nonatomic) CKNotificationListener *notificationListener; // @synthesize notificationListener=_notificationListener;
@property(readonly, nonatomic) CKScheduler *scheduler; // @synthesize scheduler=_scheduler;
@property(readonly, nonatomic) CKDatabase *database; // @synthesize database=_database;
@property(readonly, nonatomic) CKContainer *container; // @synthesize container=_container;
@property(readonly, nonatomic) CKDatabaseSubscription *databaseSubscription; // @synthesize databaseSubscription=_databaseSubscription;
@property(readonly, nonatomic) CKRecordZone *recordZone; // @synthesize recordZone=_recordZone;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *cloudKitQueue; // @synthesize cloudKitQueue=_cloudKitQueue;
@property(readonly, nonatomic) NSObject<OS_dispatch_semaphore> *cloudKitQueueSemaphore; // @synthesize cloudKitQueueSemaphore=_cloudKitQueueSemaphore;
@property(readonly, nonatomic) NSString *ckDatabaseName; // @synthesize ckDatabaseName=_ckDatabaseName;
@property(readonly, copy, nonatomic) NSCloudKitMirroringDelegateOptions *options; // @synthesize options=_options;
- (void)fetchChangesAndUpdateObservedStore;
- (void)checkForNewChanges;
- (void)_setAppDeactivateObserver:(id)arg1;
- (void)_setAppActivateObserver:(id)arg1;
- (void)_setRequestManager:(id)arg1;
- (void)_setAccountNotificationBackoffInterval:(long long)arg1;
- (void)_setZone:(id)arg1;
- (void)_setContainer:(id)arg1;
- (void)_setDatabase:(id)arg1;
- (void)_setObservedStore:(id)arg1 observedCoordinator:(id)arg2;
- (BOOL)_createSchemaWithMonitor:(id)arg1 options:(unsigned long long)arg2 error:(id *)arg3;
- (void)_performSchemaInitializationRequest:(id)arg1;
- (void)_scheduleAutomatedExportWithLabel:(id)arg1 activity:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_scheduleAutomatedImportWithLabel:(id)arg1 activity:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)finishedAutomatedRequestWithResult:(id)arg1;
- (void)_finishedRequest:(id)arg1 withResult:(id)arg2;
- (void)checkAndExecuteNextRequest;
- (id)newActivityWithIdentifier:(id)arg1;
- (BOOL)_dateExceedsSchedulingThreshold:(id)arg1;
- (void)checkAndScheduleImportIfNecessary:(BOOL)arg1;
- (void)scheduleExportWithMonitor:(id)arg1;
- (void)_respondToApplicationActivationNotification:(id)arg1;
- (void)applicationDidActivate:(id)arg1;
- (void)_respondToApplicationDeactivationNotification:(id)arg1;
- (void)applicationWillDeactivate:(id)arg1;
- (void)remoteStoreDidChange:(id)arg1;
- (void)managedObjectContextSaved:(id)arg1;
- (void)exporter:(id)arg1 willScheduleOperations:(id)arg2;
- (id)resetNotificationUserInfoForError:(id)arg1;
- (void)logResetSyncNotification:(id)arg1;
- (void)_postResetSyncNotificationWithName:(id)arg1 forError:(id)arg2;
- (void)postDidResetNotificationForError:(id)arg1;
- (void)postWillResetNotificationForError:(id)arg1;
- (BOOL)_recoverFromPartialError:(id)arg1 withMonitor:(id)arg2;
- (BOOL)_recoverFromError:(id)arg1 withMonitor:(id)arg2;
- (BOOL)recoverFromError:(id)arg1;
- (void)handleErrorInResult:(id)arg1;
- (void)_requestEncounteredRecoverableError:(id)arg1 withResult:(id)arg2;
- (void)_requestEncounteredUnrecoverableError:(id)arg1 withResult:(id)arg2;
- (void)_requestAbortedNotInitialized:(id)arg1;
- (void)_performExportProgressRequest:(id)arg1;
- (void)_performSerializationRequest:(id)arg1;
- (void)_performMetadataResetRequest:(id)arg1;
- (void)_performFetchRecordsRequest:(id)arg1;
- (void)_performResetZoneRequest:(id)arg1;
- (void)_performExportWithRequest:(id)arg1;
- (void)_performImportWithRequest:(id)arg1;
- (void)_performSetupRequest:(id)arg1;
- (void)_performDelegateResetRequest:(id)arg1;
- (void)_executeRequest:(id)arg1;
- (void)_enqueueRequest:(id)arg1;
- (id)executeMirroringRequest:(id)arg1 error:(id *)arg2;
- (void)_openTransactionWithLabel:(id)arg1 andExecuteWorkBlock:(CDUnknownBlockType)arg2;
- (void)_respondToAccountOrIdentityChangeNotification:(id)arg1;
- (void)ckAccountOrIdentityChangedHandler:(id)arg1;
- (void)storesDidChange:(id)arg1;
- (void)coordinatorWillRemoveStore:(id)arg1;
- (void)tearDown;
- (void)_beginWatchingForChanges;
- (void)resetAfterError:(id)arg1 andKeepContainer:(BOOL)arg2;
- (void)resetAfterError:(id)arg1;
- (void)_setUpCloudKitIntegration;
- (void)observeChangesForStore:(id)arg1 inPersistentStoreCoordinator:(id)arg2;
- (void)persistentStoreCoordinator:(id)arg1 didSuccessfullyAddPersistentStore:(id)arg2 withDescription:(id)arg3;
- (BOOL)validateManagedObjectModel:(id)arg1 forUseWithStoreWithDescription:(id)arg2 error:(id *)arg3;
- (void)dealloc;
- (void)removeNotificationRegistrations;
- (id)initWithCloudKitContainerOptions:(id)arg1;
- (id)initWithOptions:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

