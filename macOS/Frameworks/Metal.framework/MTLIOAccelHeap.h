//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <Metal/_MTLHeap.h>

@class MTLIOAccelDevice<MTLDevice>, MTLIOAccelResource, NSString;

@interface MTLIOAccelHeap : _MTLHeap
{
    MTLIOAccelResource *_resource;
    MTLIOAccelDevice<MTLDevice> *_device;
    struct MTLRangeAllocator _allocator;
    struct _opaque_pthread_mutex_t _mutex;
    unsigned long long _size;
}

- (id)newSubResourceAtOffset:(unsigned long long)arg1 withLength:(unsigned long long)arg2 alignment:(unsigned long long)arg3 options:(unsigned long long)arg4;
@property(readonly) unsigned long long currentAllocatedSize;
- (unsigned long long)setPurgeableState:(unsigned long long)arg1;
- (void)deallocHeapSubResource;
- (void)unpinMemoryAtOffset:(unsigned long long)arg1 withLength:(unsigned long long)arg2;
- (id)newSubResourceWithLength:(unsigned long long)arg1 alignment:(unsigned long long)arg2 options:(unsigned long long)arg3 offset:(unsigned long long *)arg4;
- (void)dealloc;
- (id)initWithDevice:(id)arg1 size:(unsigned long long)arg2 options:(unsigned long long)arg3 args:(struct IOAccelNewResourceArgs *)arg4 argsSize:(unsigned int)arg5 desc:(id)arg6;
- (id)initWithDevice:(id)arg1 size:(unsigned long long)arg2 options:(unsigned long long)arg3 args:(struct IOAccelNewResourceArgs *)arg4 argsSize:(unsigned int)arg5;
- (unsigned long long)maxAvailableSizeWithAlignment:(unsigned long long)arg1;
@property(readonly) unsigned long long usedSize;
@property(readonly) unsigned long long size;
@property(readonly) id <MTLDevice> device;

// Remaining properties
@property(readonly) unsigned long long cpuCacheMode; // @dynamic cpuCacheMode;
@property(readonly) unsigned long long hazardTrackingMode; // @dynamic hazardTrackingMode;
@property(copy) NSString *label; // @dynamic label;
@property(readonly) unsigned long long resourceOptions; // @dynamic resourceOptions;
@property(readonly) unsigned long long storageMode; // @dynamic storageMode;
@property(readonly) long long type; // @dynamic type;
@property(readonly) unsigned long long unfilteredResourceOptions; // @dynamic unfilteredResourceOptions;

@end

