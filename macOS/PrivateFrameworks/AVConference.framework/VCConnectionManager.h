//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSObject<OS_dispatch_queue>;

__attribute__((visibility("hidden")))
@interface VCConnectionManager : NSObject
{
    unsigned int _callID;
    NSObject<OS_dispatch_queue> *_stateQueue;
    id <VCConnectionProtocol> _primaryConnection;
    id <VCConnectionProtocol> _secondaryConnection;
    id <VCConnectionProtocol> _connectionForDuplication;
    struct opaqueRTCReporting *_reportingAgent;
    BOOL _enableDuplication;
    int _preferredLocalInterfaceForDuplication;
    int _preferredRemoteInterfaceForDuplication;
    BOOL _isInitialConnectionEstablished;
    int _mediaExcessiveCellularTxBytes;
    int _mediaExcessiveCellularRxBytes;
    int _signalingExcessiveCellularTxBytes;
    int _signalingExcessiveCellularRxBytes;
    id <VCConnectionManagerDelegate> _delegate;
    NSObject<OS_dispatch_queue> *_delegateQueue;
}

@property(readonly) int signalingExcessiveCellularRxBytes; // @synthesize signalingExcessiveCellularRxBytes=_signalingExcessiveCellularRxBytes;
@property(readonly) int signalingExcessiveCellularTxBytes; // @synthesize signalingExcessiveCellularTxBytes=_signalingExcessiveCellularTxBytes;
@property(readonly) int mediaExcessiveCellularRxBytes; // @synthesize mediaExcessiveCellularRxBytes=_mediaExcessiveCellularRxBytes;
@property(readonly) int mediaExcessiveCellularTxBytes; // @synthesize mediaExcessiveCellularTxBytes=_mediaExcessiveCellularTxBytes;
@property(retain, nonatomic) id <VCConnectionProtocol> secondaryConnection; // @synthesize secondaryConnection=_secondaryConnection;
@property(retain, nonatomic) id <VCConnectionProtocol> primaryConnection; // @synthesize primaryConnection=_primaryConnection;
@property id <VCConnectionManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property int preferredLocalInterfaceForDuplication; // @synthesize preferredLocalInterfaceForDuplication=_preferredLocalInterfaceForDuplication;
@property BOOL enableDuplication; // @synthesize enableDuplication=_enableDuplication;
@property unsigned int callID; // @synthesize callID=_callID;
- (BOOL)hasConnectionWithSourceDestinationInfo:(struct tagVCSourceDestinationInfo *)arg1 isPrimary:(char *)arg2;
- (void)sourceDestinationInfo:(struct tagVCSourceDestinationInfo *)arg1 isSourceOnCellular:(char *)arg2 isSourceIPv6:(char *)arg3;
- (void)updateCellularTech:(int)arg1 forLocalInterface:(BOOL)arg2;
- (void)updateCellularMTU:(int)arg1;
- (int)removeConnection:(id)arg1;
- (int)addConnection:(id)arg1;
- (void)reportConnection:(id)arg1 isInitialConnection:(BOOL)arg2;
- (void)updateTransmittedBytesForSourceDestinationInfo:(struct tagVCSourceDestinationInfo *)arg1 bytesSent:(int)arg2 isMediaData:(BOOL)arg3;
@property(readonly) BOOL isLocalCellularInterfaceUsed;
- (int)getConnectionStatusOnConnection:(BOOL)arg1 isLocalOnCellular:(char *)arg2 isIPv6:(char *)arg3 isRelay:(char *)arg4;
- (struct tagVCSourceDestinationInfo *)createSourceDestinationInfoListWithFlag:(BOOL)arg1;
- (id)connectionForQuality:(int)arg1;
- (BOOL)isOptimalConnection:(id)arg1 asPrimary:(BOOL)arg2 interfaceMask:(int)arg3;
- (BOOL)isBetterConnection:(id)arg1 asPrimary:(BOOL)arg2;
- (void)promoteSecondaryConnectionToPrimary:(id)arg1;
- (void)primaryConnectionChanged:(id)arg1 oldPrimaryConnection:(id)arg2;
- (BOOL)isConnectedOnRelayForActiveConnectionWithQuality:(int)arg1;
- (BOOL)isConnectedOnIPv6ForActiveConnectionWithQuality:(int)arg1;
- (int)getCellularMTUForActiveConnectionWithQuality:(int)arg1;
- (int)getCellularTechForActiveConnectionWithQuality:(int)arg1 forLocalInterface:(BOOL)arg2;
- (int)getConnectionTypeForActiveConnectionWithQuality:(int)arg1 forLocalInterface:(BOOL)arg2;
- (BOOL)isInterfaceOnCellularForActiveConnectionWithQuality:(int)arg1 forLocalInterface:(BOOL)arg2;
- (int)getNumberOfConnectionsInternal;
@property(readonly) int connectionCount;
- (void)setReportingAgent:(struct opaqueRTCReporting *)arg1;
- (void)dealloc;
- (id)init;

@end

