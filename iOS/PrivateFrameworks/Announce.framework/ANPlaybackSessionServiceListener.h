/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Announce.framework/Announce
 */

@interface ANPlaybackSessionServiceListener : NSObject <ANAnnouncementCoordinationServiceDelegate, ANAnnouncementManagerDelegte, ANLocalPlaybackSessionServiceInterface, ANRemotePlaybackSessionServiceInterface, ANTrackPlayerDelegate, NSXPCListenerDelegate> {
    NSMutableOrderedSet * _announcementsToPlay;
    ANTrackPlayer * _audioPlayer;
    ANAnnouncementCoordinationService * _coordinationService;
    long long  _lastAnnoucementIndex;
    NSMutableSet * _localPlaybackClients;
    id /* block */  _localPlaybackCompletionHandler;
    NSXPCListener * _localPlaybackSessionListener;
    unsigned long long  _playbackOptions;
    NSObject<OS_dispatch_queue> * _playbackQueue;
    ANAnnouncementStatePublisher * _playbackStatePublisher;
    NSMutableDictionary * _recentPlaybackInfo;
    NSMutableSet * _remotePlaybackClients;
    NSXPCListener * _remotePlaybackSessionListener;
    ANVolumeController * _volumeController;
}

@property (nonatomic, retain) NSMutableOrderedSet *announcementsToPlay;
@property (nonatomic, retain) ANTrackPlayer *audioPlayer;
@property (nonatomic, retain) ANAnnouncementCoordinationService *coordinationService;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isLocalPlaybackSessionActive;
@property (nonatomic) long long lastAnnoucementIndex;
@property (retain) NSMutableSet *localPlaybackClients;
@property (nonatomic, copy) id /* block */ localPlaybackCompletionHandler;
@property (nonatomic, readonly) NSXPCListener *localPlaybackSessionListener;
@property (nonatomic, readonly) unsigned long long playbackOptions;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *playbackQueue;
@property (nonatomic, retain) ANAnnouncementStatePublisher *playbackStatePublisher;
@property (nonatomic, retain) NSMutableDictionary *recentPlaybackInfo;
@property (retain) NSMutableSet *remotePlaybackClients;
@property (nonatomic, readonly) NSXPCListener *remotePlaybackSessionListener;
@property (nonatomic, readonly) bool remoteSessionsActive;
@property (readonly) Class superclass;
@property (nonatomic, retain) ANVolumeController *volumeController;

- (void).cxx_destruct;
- (id)_announcementsForPlaybackOptions:(unsigned long long)arg1 fromAnnouncements:(id)arg2;
- (id)_clientForConnection:(id)arg1;
- (id)_createTrackPlayerWithPlaybackDeadline:(id)arg1 options:(unsigned long long)arg2 adjustedAnchorPoint:(double*)arg3;
- (bool)_endSessionForConnection:(id)arg1;
- (void)_handlePlaybackEndedWithError:(id)arg1;
- (id)_nextAnnouncementToPlay;
- (void)_playAnnouncementsWithIDs:(id)arg1 announceIDToStart:(id)arg2 options:(unsigned long long)arg3 completionHandler:(id /* block */)arg4;
- (void)_removeConnection:(id)arg1;
- (void)_setTimersActive:(bool)arg1;
- (void)_setVolume:(unsigned long long)arg1;
- (void)_startPlayingAnnouncementsWithOptions:(unsigned long long)arg1 fromSource:(id)arg2;
- (void)_stopAudioPlayer;
- (void)_updatePlaybackInfoForAnnouncementID:(id)arg1 options:(unsigned long long)arg2;
- (void)_updatePlayerState;
- (void)announcementsDidChangeForGroupID:(id)arg1;
- (id)announcementsToPlay;
- (id)audioPlayer;
- (void)audioSessionInterruptionActive:(bool)arg1;
- (void)cleanForExit;
- (id)coordinationService;
- (void)dealloc;
- (void)didPlayAnnouncement:(id)arg1;
- (void)endSessionWithReply:(id /* block */)arg1;
- (id)init;
- (bool)isLocalPlaybackSessionActive;
- (long long)lastAnnoucementIndex;
- (void)lastPlayedAnnouncementInfo:(id /* block */)arg1;
- (bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;
- (id)localPlaybackClients;
- (id /* block */)localPlaybackCompletionHandler;
- (id)localPlaybackSessionListener;
- (void)nextAnnouncementWithCompletionHandler:(id /* block */)arg1;
- (void)playAnnouncementsWithIDs:(id)arg1 announceIDToStart:(id)arg2 options:(unsigned long long)arg3 completionHandler:(id /* block */)arg4;
- (void)playAnnouncementsWithIDs:(id)arg1 options:(unsigned long long)arg2 completionHandler:(id /* block */)arg3;
- (void)playAnnouncementsWithOptions:(unsigned long long)arg1 completionHandler:(id /* block */)arg2;
- (void)playAnnouncementsWithOptions:(unsigned long long)arg1 startingAt:(id)arg2 completionHandler:(id /* block */)arg3;
- (unsigned long long)playbackOptions;
- (id)playbackQueue;
- (void)playbackState:(id /* block */)arg1;
- (id)playbackStatePublisher;
- (void)previousAnnouncementWithCompletionHandler:(id /* block */)arg1;
- (id)recentPlaybackInfo;
- (id)remotePlaybackClients;
- (id)remotePlaybackSessionListener;
- (bool)remoteSessionsActive;
- (void)setAnnouncementsToPlay:(id)arg1;
- (void)setAudioPlayer:(id)arg1;
- (void)setCoordinationService:(id)arg1;
- (void)setLastAnnoucementIndex:(long long)arg1;
- (void)setLocalPlaybackClients:(id)arg1;
- (void)setLocalPlaybackCompletionHandler:(id /* block */)arg1;
- (void)setPlaybackQueue:(id)arg1;
- (void)setPlaybackStartedForAnnouncement:(id)arg1;
- (void)setPlaybackStatePublisher:(id)arg1;
- (void)setPlaybackStoppedForAnnouncement:(id)arg1;
- (void)setRecentPlaybackInfo:(id)arg1;
- (void)setRemotePlaybackClients:(id)arg1;
- (void)setVolumeController:(id)arg1;
- (void)startSessionForGroupID:(id)arg1 reply:(id /* block */)arg2;
- (void)stopPlayingAnnouncementsWithCompletionHandler:(id /* block */)arg1;
- (void)trackDidFinishPlaying:(id)arg1 trackType:(long long)arg2 withError:(id)arg3;
- (id)volumeController;

@end
