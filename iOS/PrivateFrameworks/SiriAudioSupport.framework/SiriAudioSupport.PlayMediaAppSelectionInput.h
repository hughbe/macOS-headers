/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SiriAudioSupport.framework/SiriAudioSupport
 */

@interface SiriAudioSupport.PlayMediaAppSelectionInput : _TtCs12_SwiftObject <MLFeatureProvider> {
    void n_candidates;
    void result_appUsageScore1Day;
    void result_appUsageScore7Days;
    void result_asrConfidenceLevel;
    void result_asrConfidenceScore;
    void result_clientCarConnected;
    void result_clientCarplay;
    void result_clientDaylight;
    void result_clientDevice;
    void result_clientHourOfDay;
    void result_clientIsActiveForegroundApp;
    void result_clientLocaleIdentifier;
    void result_clientLocaleLanguage;
    void result_clientLocked;
    void result_clientMotion;
    void result_clientNavigating;
    void result_clientWorkout;
    void result_entitySearchDirichletScore;
    void result_entitySearchSecondsSinceLastInteraction;
    void result_foregroundAppDuetElapsedSeconds;
    void result_foregroundAppIsLastUsed;
    void result_isNowPlayingApp;
    void result_isNowPlayingDuetApp;
    void result_libraryItems;
    void result_mediaAlbumPresent;
    void result_mediaArtistPresent;
    void result_mediaGenrePresent;
    void result_mediaMoodPresent;
    void result_mediaNamePresent;
    void result_mediaParsecCategory;
    void result_mediaPlaybackLocation;
    void result_mediaReleaseDatePresent;
    void result_mediaType;
    void result_nlConfidenceLevel;
    void result_nlConfidenceScore;
    void result_nowPlayingDuetElapsedSeconds;
    void result_nowPlayingState;
    void result_nowPlayingUsage14Days;
    void result_nowPlayingUsage1Day;
    void result_nowPlayingUsage7Days;
    void result_serverSearchResultsAmpConfidenceLevel;
    void result_serverSearchResultsAmpConfidenceScore;
    void result_serverSearchResultsMediaType;
    void result_serverSearchResultsPresent;
    void result_serverSearchResultsSelected;
    void result_serverSignals;
    void result_spotlightMatches;
    void result_subscriptionStatus;
    void result_supportedMediaCategories;
    void result_unionOfMediaCategories;
}

@property (nonatomic, readonly) NSSet *featureNames;

- (id)featureNames;
- (id)featureValueForName:(id)arg1;

@end
