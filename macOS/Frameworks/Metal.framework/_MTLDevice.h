//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class MTLCompiler, MTLDeviceFeatureQueries, NSArray, NSObject<OS_dispatch_queue>, NSString;

@interface _MTLDevice : NSObject
{
    CDStruct_210bae5a _limits;
    void *_supportedGPUFamilies;
    MTLCompiler *_compiler;
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSObject<OS_dispatch_queue> *_pipelineSerializationQueue;
    NSObject<OS_dispatch_queue> *_concurrentQueue;
    BOOL _hasInitSerializationPaths;
    MTLDeviceFeatureQueries *_featureQueries;
    unsigned long long _globalTraceObjectID;
    int _commandQueueCount;
    struct MTLLibraryBuilder *_libraryBuilder;
    struct MTLPipelineLibraryBuilder *_pipelineLibraryBuilder;
    struct MTLPipelineCollection *_pipelineCollection;
    NSString *_pipelineDescriptorsOutputFile;
    NSString *_librariesOutputDirectory;
    BOOL _collectAllLibraries;
    BOOL _gpuAssertionsEnabled;
    BOOL _resourceIndirectionEnabled;
    BOOL _utilityBufferRequired;
    NSArray *_utilityBuffers;
    unsigned long long _currentUtilityBufferIndex;
    struct MTLTargetDeviceArch _defaultArchitecture;
}

+ (BOOL)featureProfile:(unsigned long long)arg1 supportsFeatureSet:(unsigned long long)arg2;
+ (BOOL)useNewMaxThreadsPerThreadgroupBehavior;
+ (BOOL)useNewPreciseFunctionBehavior;
+ (BOOL)useNewPrimitiveRestartBehavior;
@property(readonly) NSObject<OS_dispatch_queue> *concurrentQueue; // @synthesize concurrentQueue=_concurrentQueue;
@property(readonly) NSObject<OS_dispatch_queue> *serialQueue; // @synthesize serialQueue=_serialQueue;
@property(readonly) unsigned long long globalTraceObjectID; // @synthesize globalTraceObjectID=_globalTraceObjectID;
@property(readonly, getter=isPlacementHeapSupported) BOOL placementHeapSupported; // @dynamic placementHeapSupported;
- (void)sampleTimestamps:(unsigned long long *)arg1 gpuTimestamp:(unsigned long long *)arg2;
- (id)resolveCounters:(id)arg1 withRange:(struct _NSRange)arg2;
- (id)newCounterSampleBufferWithDescriptor:(id)arg1 error:(id *)arg2;
@property(readonly) NSArray *counterSets; // @dynamic counterSets;
- (BOOL)supportsRasterizationRateMapWithLayerCount:(unsigned long long)arg1;
- (id)newRasterizationRateMapWithDescriptor:(id)arg1;
- (id)newRasterizationRateMapWithScreenSize:(CDStruct_da2e99ad)arg1 layerCount:(unsigned long long)arg2 layers:(const id *)arg3;
@property(readonly) unsigned long long maxRasterizationRateLayerCount; // @dynamic maxRasterizationRateLayerCount;
- (unsigned long long)offsetFromIndirectBufferAddress:(unsigned long long)arg1;
- (unsigned long long)resourceIndexFromIndirectBufferAddress:(unsigned long long)arg1;
- (unsigned long long)indirectBufferAddressForResourceIndex:(unsigned long long)arg1 offset:(unsigned long long)arg2;
- (void)removeResourceFromGlobalResourceTable:(unsigned long long)arg1 resourceType:(unsigned long long)arg2;
- (void)addIndirectCommandBufferToGlobalResourceTable:(id)arg1;
- (void)addRenderPipelineStateToGlobalResourceTable:(id)arg1;
- (void)addComputePipelineStateToGlobalResourceTable:(id)arg1;
- (void)addSamplerStateToGlobalResourceTable:(id)arg1;
- (void)addTextureToGlobalResourceTable:(id)arg1;
- (void)addBufferToGlobalResourceTable:(id)arg1;
- (void)reserveResourceIndicesForResourceType:(unsigned long long)arg1 indices:(unsigned long long *)arg2 indexCount:(unsigned long long)arg3;
- (BOOL)requiresIndirectionForAllResourceTypes;
- (id)newBufferWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3 atResourceIndex:(unsigned long long)arg4 deallocator:(CDUnknownBlockType)arg5;
- (id)newBufferWithBytes:(const void *)arg1 length:(unsigned long long)arg2 options:(unsigned long long)arg3 atResourceIndex:(unsigned long long)arg4;
- (id)newBufferWithLength:(unsigned long long)arg1 options:(unsigned long long)arg2 atResourceIndex:(unsigned long long)arg3;
- (BOOL)useDeviceResourceTableForType:(unsigned long long)arg1;
- (id)utilityBufferForRenderCommandEncoder:(id)arg1;
- (id)utilityBufferForComputeCommandEncoder:(id)arg1;
- (unsigned long long)createNewUtilityBuffer;
@property unsigned long long currentUtilityBufferIndex;
- (void)setUtilityBuffers:(id)arg1;
@property(readonly, nonatomic) NSArray *utilityBuffers;
@property(getter=isUtilityBufferRequired) BOOL utilityBufferRequired;
@property(getter=isResourceIndirectionEnabled) BOOL resourceIndirectionEnabled;
@property(getter=areGPUAssertionsEnabled, setter=setGPUAssertionsEnabled:) BOOL gpuAssertionsEnabled;
@property(readonly) unsigned long long samplerReductionModeSupport; // @dynamic samplerReductionModeSupport;
- (id)newSharedEventWithMachPort:(unsigned int)arg1;
- (id)newSharedEventWithHandle:(id)arg1;
- (id)newSharedEvent;
- (id)newEvent;
- (id)motionEstimatorCapabilities;
- (id)newArgumentEncoderWithLayout:(id)arg1;
- (id)newArgumentEncoderWithArguments:(id)arg1;
- (id)newArgumentEncoderWithArguments:(id)arg1 structType:(id *)arg2;
@property(readonly) struct IndirectArgumentBufferCapabilities indirectArgumentBufferCapabilities; // @dynamic indirectArgumentBufferCapabilities;
@property(readonly) BOOL requiresIABEmulation;
- (void)getDefaultSamplePositions:(CDStruct_6e3f967a *)arg1 count:(unsigned long long)arg2;
- (void)_purgeDevice;
- (id)newCommandQueueWithDescriptor:(id)arg1;
- (id)newCommandQueueWithMaxCommandBufferCount:(unsigned long long)arg1;
- (id)newCommandQueue;
- (void)_decrementCommandQueueCount;
- (void)_incrementCommandQueueCount;
@property(readonly) unsigned long long maxArgumentBufferSamplerCount;
- (unsigned long long)requiredLinearTextureBytesPerRowForDescriptor:(id)arg1;
- (unsigned long long)minLinearTexturePitchAlignmentForDescriptor:(id)arg1 mustMatchExactly:(unsigned long long *)arg2;
- (unsigned long long)minLinearTextureBaseAddressAlignmentForDescriptor:(id)arg1;
- (unsigned long long)minLinearTextureAlignmentForPixelFormat:(unsigned long long)arg1;
- (unsigned long long)minimumLinearTextureAlignmentForPixelFormat:(unsigned long long)arg1;
- (BOOL)supportsTextureSampleCount:(unsigned long long)arg1;
- (id)computeResourceBindingIndexRemappingTableWithVariant:(id)arg1;
- (id)fragmentResourceBindingIndexRemappingTableWithVariant:(id)arg1;
- (id)vertexResourceBindingIndexRemappingTableWithVariant:(id)arg1;
- (void)getConstantSamplersBitmasks:(unsigned long long **)arg1 uniqueIdentifiers:(unsigned long long **)arg2 constantSamplerCount:(unsigned long long *)arg3 forComputeVariant:(id)arg4;
- (void)getConstantSamplersBitmasks:(unsigned long long **)arg1 uniqueIdentifiers:(unsigned long long **)arg2 constantSamplerCount:(unsigned long long *)arg3 forVertexVariant:(id)arg4 fragmentVariant:(id)arg5;
- (id)pipelinePerformanceStatisticsWithComputeVariant:(id)arg1 compileTimeOutput:(id)arg2;
- (id)pipelinePerformanceStatisticsWithVertexVariant:(id)arg1 fragmentVariant:(id)arg2 vertexCompileTimeOutput:(id)arg3 fragmentCompileTimeOutput:(id)arg4;
- (id)pipelinePerformanceStatisticsWithComputeVariant:(id)arg1;
- (id)pipelinePerformanceStatisticsWithVertexVariant:(id)arg1 fragmentVariant:(id)arg2;
- (CDStruct_596dc0d1)pipelineFlagsWithComputeVariant:(id)arg1;
- (CDStruct_6b0207e2)pipelineFlagsWithVertexVariant:(id)arg1 fragmentVariant:(id)arg2;
- (id)newComputePipelineWithDescriptor:(id)arg1 variant:(id)arg2 errorMessage:(id *)arg3;
- (id)newComputePipelineWithDescriptor:(id)arg1 variant:(id)arg2;
- (id)newRenderPipelineWithDescriptor:(id)arg1 vertexVariant:(id)arg2 fragmentVariant:(id)arg3 errorMessage:(id *)arg4;
- (id)newRenderPipelineWithDescriptor:(id)arg1 vertexVariant:(id)arg2 fragmentVariant:(id)arg3;
- (id)newVertexVariantWithCompilerOutput:(id)arg1 pipelineStatisticsOutput:(id)arg2;
- (id)newFragmentVariantWithCompilerOutput:(id)arg1 pipelineStatisticsOutput:(id)arg2;
- (id)newComputeVariantWithCompilerOutput:(id)arg1 pipelineStatisticsOutput:(id)arg2;
- (id)vertexVariantWithCompilerOutput:(id)arg1 pipelineStatisticsOutput:(id)arg2;
- (id)fragmentVariantWithCompilerOutput:(id)arg1 pipelineStatisticsOutput:(id)arg2;
- (id)computeVariantWithCompilerOutput:(id)arg1 pipelineStatisticsOutput:(id)arg2;
- (void)freeComputeFunctionKey:(void *)arg1 keySize:(unsigned long long)arg2;
- (void)freeComputeLibraryKey:(void *)arg1 libraryKeySize:(unsigned long long)arg2;
- (void *)libraryKeyWithComputePipelineDescriptor:(id)arg1 options:(unsigned long long)arg2 keySize:(unsigned long long *)arg3;
- (void *)computeFunctionKeyWithComputePipelineDescriptor:(id)arg1 options:(unsigned long long)arg2 keySize:(unsigned long long *)arg3;
- (void *)computeFunctionKeyWithComputePipelineDescriptor:(id)arg1 keySize:(unsigned long long *)arg2;
- (void)freeVertexFunctionKey:(void *)arg1 vertexKeySize:(unsigned long long)arg2;
- (void)freeFragmentFunctionKey:(void *)arg1 fragmentKeySize:(unsigned long long)arg2;
- (void *)vertexFunctionKeyWithRenderPipelineDescriptor:(id)arg1 options:(unsigned long long)arg2 nextStageVariant:(id)arg3 vertexKeySize:(unsigned long long *)arg4;
- (void *)vertexFunctionKeyWithRenderPipelineDescriptor:(id)arg1 vertexKeySize:(unsigned long long *)arg2 nextStageVariant:(id)arg3;
- (void *)fragmentFunctionKeyWithRenderPipelineDescriptor:(id)arg1 options:(unsigned long long)arg2 previousStateVariant:(id)arg3 fragmentKeySize:(unsigned long long *)arg4;
- (void *)fragmentFunctionKeyWithRenderPipelineDescriptor:(id)arg1 fragmentKeySize:(unsigned long long *)arg2 previousStateVariant:(id)arg3;
@property(readonly) MTLCompiler *compiler; // @synthesize compiler=_compiler;
@property(readonly) int llvmVersion;
- (void)newComputePipelineStateWithDescriptor:(id)arg1 options:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)newComputePipelineStateWithDescriptor:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)newComputePipelineStateWithDescriptor:(id)arg1 options:(unsigned long long)arg2 reflection:(id *)arg3 error:(id *)arg4;
- (id)newComputePipelineStateWithDescriptor:(id)arg1 error:(id *)arg2;
- (void)newRenderPipelineStateWithDescriptor:(id)arg1 options:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)newRenderPipelineStateWithDescriptor:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)newRenderPipelineStateWithDescriptor:(id)arg1 options:(unsigned long long)arg2 reflection:(id *)arg3 error:(id *)arg4;
- (id)newRenderPipelineStateWithDescriptor:(id)arg1 error:(id *)arg2;
- (void)newPrecompiledComputePipelineStateWithDescriptor:(id)arg1 options:(unsigned long long)arg2 pipelineCache:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
@property(readonly) unsigned int acceleratorPort;
@property(readonly) unsigned long long maxComputeAttributes;
@property(readonly) unsigned long long maxTextureBufferWidth;
@property(readonly) unsigned long long maxVertexAmplificationCount;
@property(readonly) unsigned long long maxVertexAmplificationFactor;
@property(readonly) unsigned long long maxCustomSamplePositions;
@property(readonly) unsigned long long maxViewportCount;
@property(readonly) unsigned long long maxIndirectSamplersPerDevice;
@property(readonly) unsigned long long maxIndirectSamplers;
@property(readonly) unsigned long long maxIndirectTextures;
@property(readonly) unsigned long long maxIndirectBuffers;
@property(readonly) unsigned long long maxTessellationFactor;
@property(readonly) unsigned long long maxInterpolatedComponents;
@property(readonly) unsigned long long maxComputeThreadgroupMemoryAlignmentBytes;
@property(readonly) unsigned long long maxFunctionConstantIndices;
@property(readonly) unsigned long long deviceLinearReadOnlyTextureAlignmentBytes;
@property(readonly) unsigned long long deviceLinearTextureAlignmentBytes;
@property(readonly) unsigned long long iosurfaceReadOnlyTextureAlignmentBytes;
@property(readonly) unsigned long long iosurfaceTextureAlignmentBytes;
@property(readonly) unsigned long long linearTextureAlignmentBytes;
@property(readonly) unsigned long long maxTextureLayers;
@property(readonly) unsigned long long maxTextureDimensionCube;
@property(readonly) unsigned long long maxTextureDepth3D;
@property(readonly) unsigned long long maxTextureHeight3D;
@property(readonly) unsigned long long maxTextureWidth3D;
@property(readonly) unsigned long long maxTextureHeight2D;
@property(readonly) unsigned long long maxTextureWidth2D;
@property(readonly) unsigned long long maxTextureWidth1D;
@property(readonly) unsigned long long minBufferNoCopyAlignmentBytes;
@property(readonly) unsigned long long minConstantBufferAlignmentBytes;
@property(readonly) unsigned long long maxVisibilityQueryOffset;
@property(readonly) float maxPointSize;
@property(readonly) float maxLineWidth;
@property(readonly) unsigned long long maxComputeThreadgroupMemory;
@property(readonly) unsigned long long maxTotalComputeThreadsPerThreadgroup;
@property(readonly) unsigned long long maxComputeLocalMemorySizes;
@property(readonly) unsigned long long maxComputeInlineDataSize;
@property(readonly) unsigned long long maxComputeSamplers;
@property(readonly) unsigned long long maxComputeTextures;
@property(readonly) unsigned long long maxComputeBuffers;
@property(readonly) unsigned long long maxFragmentInlineDataSize;
@property(readonly) unsigned long long maxFragmentSamplers;
@property(readonly) unsigned long long maxFragmentTextures;
@property(readonly) unsigned long long maxFragmentBuffers;
@property(readonly) unsigned long long maxInterpolants;
@property(readonly) unsigned long long maxVertexInlineDataSize;
@property(readonly) unsigned long long maxVertexSamplers;
@property(readonly) unsigned long long maxVertexTextures;
@property(readonly) unsigned long long maxVertexBuffers;
@property(readonly) unsigned long long maxVertexAttributes;
@property(readonly) unsigned long long maxColorAttachments;
@property(readonly) const CDStruct_210bae5a *limits;
- (void)initLimits;
- (BOOL)deviceOrFeatureProfileSupportsFeatureSet:(unsigned long long)arg1;
- (BOOL)supportsFeatureSet:(unsigned long long)arg1;
- (BOOL)deviceSupportsFeatureSet:(unsigned long long)arg1;
- (id)newTextureWithSurface:(unsigned long long)arg1 buffer:(unsigned long long)arg2;
- (id)newLibraryWithImageFilterFunctionsSPI:(id)arg1 imageFilterFunctionInfo:(const CDStruct_dbc1e4aa *)arg2 error:(id *)arg3;
- (id)newComputePipelineStateWithImageFilterFunctionsSPI:(id)arg1 imageFilterFunctionInfo:(const CDStruct_dbc1e4aa *)arg2 error:(id *)arg3;
- (void)newComputePipelineStateWithFunction:(id)arg1 options:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)newComputePipelineStateWithFunction:(id)arg1 options:(unsigned long long)arg2 reflection:(id *)arg3 error:(id *)arg4;
- (void)newComputePipelineStateWithFunction:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)newComputePipelineStateWithFunction:(id)arg1 error:(id *)arg2;
@property(readonly, getter=areBarycentricCoordsSupported) BOOL barycentricCoordsSupported;
- (void)dumpPipelineDescriptorsIfRequested;
- (id)endCollectingPipelineDescriptors;
- (void)startCollectingPipelineDescriptorsFromLibrary:(id)arg1 filePath:(id)arg2;
- (void)startCollectingPipelineDescriptorsUsingPrefixForNames:(id)arg1;
- (void)startCollectingPipelineDescriptors;
- (unsigned long long)optionsForPipelineLibrarySerialization;
- (void)registerComputePipelineDescriptor:(id)arg1;
- (void)registerRenderPipelineDescriptor:(id)arg1;
- (id)newPipelineLibraryWithFilePath:(id)arg1 error:(id *)arg2;
- (id)newBinaryLibraryWithOptions:(unsigned long long)arg1 url:(id)arg2 error:(id *)arg3;
- (id)newDynamicLibraryFromURL:(id)arg1 error:(id *)arg2;
- (id)newDynamicLibrary:(id)arg1 computeDescriptor:(id)arg2 error:(id *)arg3;
- (id)newDynamicLibrary:(id)arg1 error:(id *)arg2;
- (BOOL)validateDynamicLibrary:(id)arg1 computeDescriptor:(id)arg2 error:(id *)arg3;
- (id)newBinaryLibraryError:(unsigned long long)arg1 message:(id)arg2;
- (id)newBinaryArchiveWithDescriptor:(id)arg1 error:(id *)arg2;
- (id)newLibraryWithCIFilters:(id)arg1 imageFilterFunctionInfo:(const CDStruct_dbc1e4aa *)arg2 error:(id *)arg3;
- (void)newLibraryWithSource:(id)arg1 options:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (id)newLibraryWithSource:(id)arg1 options:(id)arg2 error:(id *)arg3;
- (id)newLibraryWithData:(id)arg1 error:(id *)arg2;
- (id)newDefaultLibraryWithBundle:(id)arg1 error:(id *)arg2;
- (id)newDefaultLibrary;
- (CDStruct_c0454aff)pipelineCacheStats;
- (CDStruct_c0454aff)libraryCacheStats;
- (void)unloadShaderCaches;
- (id)productName;
- (id)familyName;
- (id)vendorName;
- (void)compilerPropagatesThreadPriority:(_Bool)arg1;
- (id)newStructTypeWithSerializedData:(id)arg1;
- (id)serializeStructType:(id)arg1;
- (id)serializeStructType:(id)arg1 version:(unsigned int)arg2;
- (id)newComputePipelineDescriptorWithSerializedData:(id)arg1 deserializationContext:(id)arg2;
- (id)serializeComputePipelineDescriptor:(id)arg1;
- (id)newRenderPipelineDescriptorWithSerializedData:(id)arg1 deserializationContext:(id)arg2;
- (id)serializeRenderPipelineDescriptor:(id)arg1;
- (BOOL)_registerInterestNotification;
- (void)_wasRemoved;
- (void)_removeRequested;
- (id)_deviceWrapper;
- (void)_setDeviceWrapper:(id)arg1;
@property(readonly) NSString *name;
- (BOOL)isFramebufferReadSupported;
- (BOOL)isASTCPixelFormatsSupported;
- (BOOL)isQuadDataSharingSupported;
@property(readonly, getter=areRasterOrderGroupsSupported) BOOL rasterOrderGroupsSupported;
@property(readonly) unsigned long long argumentBuffersSupport;
@property(readonly) unsigned long long readWriteTextureSupport;
- (id)newSharedTextureWithHandle:(id)arg1;
- (id)newSharedTextureWithDescriptor:(id)arg1;
- (id)newLibraryWithURL:(id)arg1 error:(id *)arg2;
- (void)releaseCacheEntry:(struct MTLLibraryContainer *)arg1;
- (id)newLibraryWithFile:(id)arg1 error:(id *)arg2;
- (void)allowLibrariesFromOtherPlatforms;
- (BOOL)isCollectingPipelines;
- (BOOL)isCollectingLibraries;
- (void)initSerializationPaths;
- (void *)getShaderCacheKeys;
- (id)newFunctionWithGLIR:(void *)arg1 inputsDescription:(id)arg2 functionType:(unsigned long long)arg3;
- (id)newFunctionWithGLIR:(void *)arg1 functionType:(unsigned long long)arg2;
- (id)description;
- (id)formattedDescription:(unsigned long long)arg1;
- (BOOL)areProgrammableSamplePositionsSupported;
- (const struct MTLTargetDeviceArch *)targetDeviceInfo;
- (BOOL)supportsFamily:(long long)arg1;
- (void)initGPUFamilySupport;
- (void)initFeatureQueries;
- (Class)featureQueryClass;
- (void)dealloc;
- (id)init;
@property(readonly, nonatomic) BOOL supportsFloat16BCubicFiltering;
@property(readonly, nonatomic) BOOL supportsForceSeamsOnCubemaps;
@property(readonly, nonatomic) BOOL supportsTexture2DMultisampleArray;
@property(readonly, nonatomic) BOOL supportsDepthClipModeClampExtended;
@property(readonly, nonatomic) BOOL supportsSIMDReduction;
@property(readonly, nonatomic) BOOL supportsMirrorClampToEdgeSamplerMode;
@property(readonly, nonatomic) BOOL supportsBlackOrWhiteSamplerBorderColors;
@property(readonly, nonatomic) BOOL supportsShaderBarycentricCoordinates;
@property(readonly, nonatomic) BOOL supportsVariableRateRasterization;
@property(readonly, nonatomic) BOOL supportsSIMDShufflesAndBroadcast;
@property(readonly, nonatomic) BOOL supportsShaderMinLODClamp;
@property(readonly, nonatomic) BOOL supportsSIMDGroup;
@property(readonly, nonatomic) BOOL supportsFP32TessFactors;
@property(readonly, nonatomic) BOOL supportsStencilFeedback;
@property(readonly, nonatomic) BOOL supportsMSAAStencilResolveFilter;
@property(readonly, nonatomic) BOOL supportsIndirectTessellation;
@property(readonly, nonatomic) BOOL supportsViewportAndScissorArray;
@property(readonly, nonatomic) BOOL supportsLayeredRendering;
@property(readonly, nonatomic) BOOL supports2DLinearTexArraySPI;
@property(readonly, nonatomic) BOOL supportsSeparateVisibilityAndShadingRate;
@property(readonly, nonatomic) BOOL supportsNonSquareTileShaders;
@property(readonly, nonatomic) BOOL supportsLinearTexture2DArray;
@property(readonly, nonatomic) BOOL supportsRasterOrderGroups;
@property(readonly, nonatomic) BOOL supportsRenderPassWithoutRenderTarget;
@property(readonly, nonatomic) BOOL supportsConcurrentComputeDispatch;
@property(readonly, nonatomic) BOOL supportsQuadShufflesAndBroadcast;
@property(readonly, nonatomic) BOOL supportsTextureCubeArray;
@property(readonly, nonatomic) BOOL supportsReadWriteTextureCubeArguments;
@property(readonly, nonatomic) BOOL supportsReadWriteTextureArguments;
@property(readonly, nonatomic) BOOL supportsNonUniformThreadgroupSize;
@property(readonly, nonatomic) BOOL supportsMipLevelsSmallerThanBlockSize;
@property(readonly, nonatomic) BOOL supportsPostDepthCoverage;
@property(readonly, nonatomic) BOOL supportsNativeHardwareFP16;
@property(readonly, nonatomic) BOOL supportsImageBlockSampleCoverageControl;
@property(readonly, nonatomic) BOOL supportsTileShaders;
@property(readonly, nonatomic) BOOL supportsImageBlocks;
@property(readonly, nonatomic) BOOL supportsRenderTextureWrites;
@property(readonly, nonatomic) BOOL supportsQuadGroup;
@property(readonly, nonatomic) BOOL supportsMemoryOrderAtomics;
@property(readonly, nonatomic) BOOL supportsAlphaYUVFormats;
@property(readonly, nonatomic) BOOL supportsTextureSwizzle;
@property(readonly, nonatomic) BOOL supportsTextureOutOfBoundsReads;
@property(readonly, nonatomic) BOOL supportsNorm16BCubicFiltering;
@property(readonly, nonatomic) BOOL supportsIndirectTextures;
@property(readonly, nonatomic) BOOL supportsIndirectStageInRegion;
@property(readonly, nonatomic) BOOL supportsCMPIndirectCommandBuffers;
@property(readonly, nonatomic) BOOL supportsGFXIndirectCommandBuffers;
@property(readonly, nonatomic) BOOL supportsMSAADepthResolveFilter;
@property(readonly, nonatomic) BOOL supportsMSAAStencilResolve;
@property(readonly, nonatomic) BOOL supportsMSAADepthResolve;
@property(readonly, nonatomic) BOOL supportsSamplerCompareFunction;
@property(readonly, nonatomic) BOOL supportsMutableTier1ArgumentBuffers;
@property(readonly, nonatomic) BOOL supportsCombinedMSAAStoreAndResolveAction;
@property(readonly, nonatomic) BOOL supportsArrayOfSamplers;
@property(readonly, nonatomic) BOOL supportsArrayOfTextures;
@property(readonly, nonatomic) BOOL supportsReadWriteBufferArguments;
@property(readonly, nonatomic) BOOL supportsTessellation;
@property(readonly, nonatomic) BOOL supportsIndirectDrawAndDispatch;
@property(readonly, nonatomic) BOOL supportsBaseVertexInstanceDrawing;
@property(readonly, nonatomic) BOOL supportsCountingOcclusionQuery;
@property(readonly, nonatomic) BOOL supportsFragmentBufferWrites;
@property(readonly, nonatomic) BOOL supports3DASTCTextures;
@property(readonly, nonatomic) BOOL supportsPacked32TextureBufferWrites;
@property(readonly, nonatomic) BOOL supportsDepthClipMode;
@property(readonly, nonatomic) BOOL supportsSRGBwrites;
@property(readonly, nonatomic) BOOL supportsPublicXR10Formats;
@property(readonly, nonatomic) BOOL supportsASTCTextureCompression;
@property(readonly, nonatomic) BOOL supportsBinaryLibraries;
@property(readonly, nonatomic) BOOL supportsDynamicLibraries;
@property(readonly, nonatomic) BOOL supportsBinaryArchives;
@property(readonly, nonatomic) BOOL supportsGPUStatistics;
@property(readonly, nonatomic) BOOL supportsSeparateDepthStencil;
@property(readonly, nonatomic) BOOL supportsRelaxedTextureViewRequirements;
@property(readonly, nonatomic) BOOL supportsShaderLODAverage;
@property(readonly, nonatomic) BOOL supportsInvariantVertexPosition;
@property(readonly, nonatomic) BOOL supportsFastMathInfNaNPropagation;
@property(readonly, nonatomic) BOOL supportsMemorylessRenderTargets;
@property(readonly, nonatomic) BOOL supportsRenderToLinearTextures;
@property(readonly, nonatomic) BOOL supportsProgrammableBlending;
@property(readonly, nonatomic) BOOL supportsBufferWithIOSurface;
@property(readonly, nonatomic) BOOL supportsFragmentOnlyEncoders;
@property(readonly, nonatomic) BOOL supportsPipelineLibraries;
@property(readonly, nonatomic) BOOL supportsLinearTextureFromSharedBuffer;
@property(readonly, nonatomic) BOOL supportsNonPrivateMSAATextures;
@property(readonly, nonatomic) BOOL supportsNonPrivateDepthStencilTextures;
@property(readonly, nonatomic) BOOL supportsOpenCLTextureWriteSwizzles;
@property(readonly, nonatomic) BOOL supportsPlacementHeaps;
@property(readonly, nonatomic) BOOL supportsSamplerReductionMode;
@property(readonly, nonatomic) BOOL supportsVertexAmplification;
@property(readonly, nonatomic) BOOL supportsQueryTextureLOD;
@property(readonly, nonatomic) BOOL supports32bpcMSAATextures;
@property(readonly, nonatomic) BOOL supportsSamplerAddressModeClampToHalfBorder;
@property(readonly, nonatomic) BOOL supportsCustomBorderColor;
@property(readonly, nonatomic) BOOL supportsLargeFramebufferConfigs;
@property(readonly, nonatomic) BOOL supports3DBCTextures;
@property(readonly, nonatomic) BOOL supportsBCTextureCompression;
@property(readonly, nonatomic) BOOL supportsProgrammableSamplePositions;
@property(readonly, nonatomic) BOOL supportsReadWriteTextureArgumentsTier2;
@property(readonly, nonatomic) BOOL supportsArgumentBuffersTier2;
@property(readonly, nonatomic) BOOL supportsBufferlessClientStorageTexture;
@property(readonly, nonatomic) BOOL supportsQuadReduction;

// Remaining properties
@property(readonly) unsigned long long maxBufferLength; // @dynamic maxBufferLength;

@end

