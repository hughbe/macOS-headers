//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled May 21 2020 17:01:39).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import <AXMediaUtilities/NSSecureCoding-Protocol.h>

@class AXMLanguage, NSSet;

@interface AXMTextDetectionOptions : NSObject <NSSecureCoding>
{
    BOOL _correctSpelling;
    BOOL _detectDiacritics;
    BOOL _returnSubFeatures;
    BOOL _minimizeFalsePositives;
    BOOL _usesLanguageCorrection;
    unsigned long long _detectionFlavor;
    AXMLanguage *_textDetectionLanguage;
    NSSet *_spellCheckingLanguages;
    double _minimumCharacterHeight;
    unsigned long long _recognitionLevel;
    double _normalizedMinimumTextHeightRatio;
}

+ (BOOL)supportsSecureCoding;
+ (id)defaultRecognizeTextOptions;
+ (id)defaultDetectTextRectanglesOptions;
- (void).cxx_destruct;
@property(nonatomic) BOOL usesLanguageCorrection; // @synthesize usesLanguageCorrection=_usesLanguageCorrection;
@property(nonatomic) double normalizedMinimumTextHeightRatio; // @synthesize normalizedMinimumTextHeightRatio=_normalizedMinimumTextHeightRatio;
@property(nonatomic) unsigned long long recognitionLevel; // @synthesize recognitionLevel=_recognitionLevel;
@property(nonatomic) BOOL minimizeFalsePositives; // @synthesize minimizeFalsePositives=_minimizeFalsePositives;
@property(nonatomic) BOOL returnSubFeatures; // @synthesize returnSubFeatures=_returnSubFeatures;
@property(nonatomic) BOOL detectDiacritics; // @synthesize detectDiacritics=_detectDiacritics;
@property(nonatomic) double minimumCharacterHeight; // @synthesize minimumCharacterHeight=_minimumCharacterHeight;
@property(retain, nonatomic) NSSet *spellCheckingLanguages; // @synthesize spellCheckingLanguages=_spellCheckingLanguages;
@property(retain, nonatomic) AXMLanguage *textDetectionLanguage; // @synthesize textDetectionLanguage=_textDetectionLanguage;
@property(nonatomic) BOOL correctSpelling; // @synthesize correctSpelling=_correctSpelling;
@property(nonatomic) unsigned long long detectionFlavor; // @synthesize detectionFlavor=_detectionFlavor;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (id)initWithDetectionFlavor:(unsigned long long)arg1;

@end

