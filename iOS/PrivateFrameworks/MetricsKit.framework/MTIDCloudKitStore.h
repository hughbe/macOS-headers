/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MetricsKit.framework/MetricsKit
 */

@interface MTIDCloudKitStore : NSObject <MTIDCloudKitLocalDBDelegate, MTIDSecretStore> {
    NSObject<OS_dispatch_queue> * _accessQueue;
    NSString * _containerIdentifier;
    bool  _entitled;
    NSMutableDictionary * _generatedDates;
    MTIDCloudKitLocalDB * _localDB;
    MTIDCloudKitPromiseManager * _promiseManager;
    MTPromise * _syncEnginePromise;
    NSObject<OS_os_transaction> * _transaction;
}

@property (nonatomic, retain) NSObject<OS_dispatch_queue> *accessQueue;
@property (nonatomic, retain) NSString *containerIdentifier;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property bool entitled;
@property (nonatomic, retain) NSMutableDictionary *generatedDates;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) MTIDCloudKitLocalDB *localDB;
@property (nonatomic, retain) MTIDCloudKitPromiseManager *promiseManager;
@property (readonly) Class superclass;
@property (nonatomic, retain) MTPromise *syncEnginePromise;
@property (nonatomic, retain) NSObject<OS_os_transaction> *transaction;

+ (id)apsMachServiceName;
+ (void)populateRecord:(id)arg1 withNewSecretForScheme:(id)arg2 date:(id)arg3;
+ (id)recordIDForScheme:(id)arg1 date:(id)arg2;
+ (id)recordZoneID;
+ (id)secretFromRecord:(id)arg1;
+ (void)setTransactionTimeout:(double)arg1;
+ (double)transactionTimeout;

- (void).cxx_destruct;
- (void)_beginTransaction;
- (void)_endTransaction;
- (void)_generateFutureSecretsForScheme:(id)arg1;
- (id)accessQueue;
- (void)accountDidChange:(id)arg1;
- (void)clearLocalData;
- (void)cloudKitLocalDB:(id)arg1 didChangeRecord:(id)arg2;
- (id)containerIdentifier;
- (id)debugInfo;
- (bool)entitled;
- (void)generateFutureSecretsForScheme:(id)arg1;
- (id)generatedDates;
- (id)initWithContainerIdentifer:(id)arg1;
- (id)localDB;
- (id)promiseForRecordWithID:(id)arg1 timeout:(double)arg2 updateRecordMaybe:(id /* block */)arg3;
- (id)promiseManager;
- (id)recordWithID:(id)arg1 updateRecordMaybe:(id /* block */)arg2 error:(id*)arg3;
- (id)resetSecretForScheme:(id)arg1 options:(id)arg2;
- (id)secretForScheme:(id)arg1 options:(id)arg2;
- (void)setAccessQueue:(id)arg1;
- (void)setContainerIdentifier:(id)arg1;
- (void)setEntitled:(bool)arg1;
- (void)setGeneratedDates:(id)arg1;
- (void)setLocalDB:(id)arg1;
- (void)setPromiseManager:(id)arg1;
- (void)setSyncEnginePromise:(id)arg1;
- (void)setTransaction:(id)arg1;
- (id)startSyncEngine;
- (id)syncEnginePromise;
- (id)transaction;
- (void)updateUserRecordID:(id)arg1;

@end
