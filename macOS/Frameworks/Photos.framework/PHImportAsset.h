//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "PHImportDuplicateCheckerItem.h"

@class AVAssetImageGenerator, IPAMetadata, NSArray, NSData, NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSNumber, NSObject<OS_dispatch_queue>, NSSet, NSString, NSTimeZone, NSURL, PHImportSource;

@interface PHImportAsset : NSObject <PHImportDuplicateCheckerItem>
{
    PHImportSource *_source;
    PHImportSource *_strongSource;
    struct os_unfair_lock_s _metadataLock;
    NSDictionary *_userMetadata;
    NSDictionary *_userInfo;
    NSString *_basenameForOriginalAdjustment;
    unsigned char _duplicateStateConfidence;
    BOOL _canReference;
    BOOL _isDuplicate;
    BOOL _treatAsUnsupportedRAW;
    BOOL _sidecarsLoaded;
    unsigned char _fileLocation;
    unsigned short _resourceSubType;
    id _uuid;
    IPAMetadata *_metadata;
    NSMutableArray *_relatedBurstAssets;
    PHImportAsset *_burstPick;
    id _avchdAssetId;
    id _assetId;
    NSMutableDictionary *_duplicates;
    NSDate *_lastDuplicateCheck;
    NSURL *_url;
    NSString *_uti;
    NSString *_fileName;
    NSString *_createdFileName;
    unsigned long long _fileSize;
    NSString *_fileExtension;
    NSSet *_duplicateAssets;
    PHImportAsset *_rawAsset;
    PHImportAsset *_videoComplement;
    PHImportAsset *_largeRender;
    PHImportAsset *_largeMovieRender;
    PHImportAsset *_spatialOverCapture;
    PHImportAsset *_base;
    PHImportAsset *_thumbnailRender;
    PHImportAsset *_miniRender;
    PHImportAsset *_audioAsset;
    NSDate *_fileCreationDate;
    NSDate *_fileModificationDate;
    AVAssetImageGenerator *_imageGenerator;
    NSObject<OS_dispatch_queue> *_loadSidecars;
    NSString *_importIdentifier;
    NSMutableDictionary *_filePresenters;
    NSDate *_exifImageDate;
    unsigned long long _copyMethod;
    NSData *_fileData;
    long long _resourceType;
    NSMutableDictionary *_sidecarAssetsByType;
    struct CGSize _thumbnailSize;
    struct CGSize _imageSize;
}

+ (id)importAssetFromAssetBundleAtURL:(id)arg1 withImportSource:(id)arg2;
+ (BOOL)isOriginalAdjustmentData:(id)arg1;
+ (void)determineIfTIFFIsRAW:(id)arg1 url:(id)arg2;
+ (id)loadDatesForAssets:(id)arg1 atEnd:(CDUnknownBlockType)arg2;
+ (id)loadDatesForAssetSequence:(id)arg1 atEnd:(CDUnknownBlockType)arg2;
+ (void)logImageDateFileDateDifferencesForAsset:(id)arg1;
+ (id)assetFileForURL:(id)arg1 source:(id)arg2;
+ (id)assetFileForURL:(id)arg1 source:(id)arg2 withUuid:(id)arg3;
+ (BOOL)isValidAsSidecar:(id)arg1;
- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableDictionary *sidecarAssetsByType; // @synthesize sidecarAssetsByType=_sidecarAssetsByType;
@property(nonatomic) unsigned short resourceSubType; // @synthesize resourceSubType=_resourceSubType;
@property(nonatomic) long long resourceType; // @synthesize resourceType=_resourceType;
@property(readonly, nonatomic) __weak PHImportSource *source; // @synthesize source=_source;
@property(nonatomic) unsigned char fileLocation; // @synthesize fileLocation=_fileLocation;
@property(retain, nonatomic) NSData *fileData; // @synthesize fileData=_fileData;
@property(nonatomic) unsigned long long copyMethod; // @synthesize copyMethod=_copyMethod;
@property(retain, nonatomic) NSDate *exifImageDate; // @synthesize exifImageDate=_exifImageDate;
@property(retain, nonatomic) NSMutableDictionary *filePresenters; // @synthesize filePresenters=_filePresenters;
@property(retain, nonatomic) NSString *importIdentifier; // @synthesize importIdentifier=_importIdentifier;
@property(nonatomic) BOOL sidecarsLoaded; // @synthesize sidecarsLoaded=_sidecarsLoaded;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *loadSidecars; // @synthesize loadSidecars=_loadSidecars;
@property(retain, nonatomic) AVAssetImageGenerator *imageGenerator; // @synthesize imageGenerator=_imageGenerator;
@property(nonatomic) struct CGSize imageSize; // @synthesize imageSize=_imageSize;
@property(nonatomic) BOOL treatAsUnsupportedRAW; // @synthesize treatAsUnsupportedRAW=_treatAsUnsupportedRAW;
@property(nonatomic) struct CGSize thumbnailSize; // @synthesize thumbnailSize=_thumbnailSize;
@property(retain, nonatomic) NSDate *fileModificationDate; // @synthesize fileModificationDate=_fileModificationDate;
@property(retain, nonatomic) NSDate *fileCreationDate; // @synthesize fileCreationDate=_fileCreationDate;
@property(retain, nonatomic) PHImportAsset *audioAsset; // @synthesize audioAsset=_audioAsset;
@property(retain, nonatomic) PHImportAsset *miniRender; // @synthesize miniRender=_miniRender;
@property(retain, nonatomic) PHImportAsset *thumbnailRender; // @synthesize thumbnailRender=_thumbnailRender;
@property(retain, nonatomic) PHImportAsset *base; // @synthesize base=_base;
@property(retain, nonatomic) PHImportAsset *spatialOverCapture; // @synthesize spatialOverCapture=_spatialOverCapture;
@property(retain, nonatomic) PHImportAsset *largeMovieRender; // @synthesize largeMovieRender=_largeMovieRender;
@property(retain, nonatomic) PHImportAsset *largeRender; // @synthesize largeRender=_largeRender;
@property(retain, nonatomic) PHImportAsset *videoComplement; // @synthesize videoComplement=_videoComplement;
@property(retain, nonatomic) PHImportAsset *rawAsset; // @synthesize rawAsset=_rawAsset;
@property(readonly, nonatomic) NSSet *duplicateAssets; // @synthesize duplicateAssets=_duplicateAssets;
@property(retain, nonatomic) NSString *fileExtension; // @synthesize fileExtension=_fileExtension;
@property(nonatomic) unsigned long long fileSize; // @synthesize fileSize=_fileSize;
@property(retain, nonatomic) NSString *createdFileName; // @synthesize createdFileName=_createdFileName;
@property(retain, nonatomic) NSString *fileName; // @synthesize fileName=_fileName;
@property(retain, nonatomic) NSString *uti; // @synthesize uti=_uti;
@property(retain, nonatomic) NSURL *url; // @synthesize url=_url;
@property(retain) NSDate *lastDuplicateCheck; // @synthesize lastDuplicateCheck=_lastDuplicateCheck;
@property(retain) NSMutableDictionary *duplicates; // @synthesize duplicates=_duplicates;
@property BOOL isDuplicate; // @synthesize isDuplicate=_isDuplicate;
@property(readonly) id assetId; // @synthesize assetId=_assetId;
@property(readonly) id avchdAssetId; // @synthesize avchdAssetId=_avchdAssetId;
@property(retain, nonatomic) PHImportAsset *burstPick; // @synthesize burstPick=_burstPick;
@property(retain, nonatomic) NSMutableArray *relatedBurstAssets; // @synthesize relatedBurstAssets=_relatedBurstAssets;
@property unsigned char duplicateStateConfidence; // @synthesize duplicateStateConfidence=_duplicateStateConfidence;
@property(retain, nonatomic) id uuid; // @synthesize uuid=_uuid;
- (BOOL)isEqualToImportAsset:(id)arg1;
- (BOOL)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (void)setUserMetadata:(id)arg1;
- (id)userMetadata;
- (void)setUserInfo:(id)arg1;
- (id)userInfo;
- (id)duplicateAssetsForLibrary:(id)arg1;
- (void)setDuplicates:(id)arg1 forLibrary:(id)arg2;
@property(readonly) id sizeKey;
@property(readonly) NSDate *dateKey;
@property(readonly) id nameKey;
@property(readonly, nonatomic) NSString *assetDescription;
@property(readonly, nonatomic) NSString *title;
@property(readonly, nonatomic) NSTimeZone *exifTimeZone;
- (id)timezoneCorrectedExifImageDate;
@property(readonly) id originatingAssetID;
- (void)downloadToPathAsync:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (id)copyFromURL:(id)arg1 toURL:(id)arg2;
- (void)_addRelatedRecordsToRecord:(id)arg1 primaryRecord:(id)arg2;
- (id)importRecordForPrimaryAsset;
- (id)sidecarInfoDictionaries;
- (id)sidecarInfoDictionary;
- (id)resourceTypes;
- (BOOL)hasOriginalResourceType;
- (id)validateMetadataForImportRecord:(id)arg1;
- (BOOL)isBlessed:(id)arg1 includeXmp:(BOOL)arg2;
- (BOOL)isValidMetadata:(id)arg1;
- (struct CGImage *)avThumbnailOfSize:(unsigned long long)arg1 canceler:(id)arg2 error:(id *)arg3;
- (struct CGImage *)imageThumbnailOfSize:(unsigned long long)arg1 canceler:(id)arg2 error:(id *)arg3;
- (struct CGImage *)removeBlackBarsFromExifThumbnail:(struct CGImage *)arg1 fullSize:(struct CGSize)arg2;
- (struct CGSize)cropEXIFThumbSize:(struct CGSize)arg1 originalSize:(struct CGSize)arg2;
- (void)thumbnailUsingRequest:(id)arg1 atEnd:(CDUnknownBlockType)arg2;
- (id)thumbnailForSize:(unsigned long long)arg1 priority:(unsigned char)arg2 atEnd:(CDUnknownBlockType)arg3;
- (id)thumbnailForSize:(unsigned long long)arg1 atEnd:(CDUnknownBlockType)arg2;
- (void)_setMetadata:(id)arg1;
@property(retain, nonatomic) IPAMetadata *metadata; // @synthesize metadata=_metadata;
- (void)loadMetadataAsync:(CDUnknownBlockType)arg1;
- (void)loadMetadataSync;
- (void)informDelegateOfAssetUpdates;
- (void)addBurstAsset:(id)arg1;
- (BOOL)isAppropriateForUI;
- (id)xmpSidecar;
- (id)originalAaeSidecar;
- (id)aaeSidecar;
- (id)slmSidecar;
- (void)removeSidecarAsset:(id)arg1;
- (void)addSidecarAsset:(id)arg1;
- (unsigned long long)sidecarAssetBytes;
@property(readonly, nonatomic) NSArray *sidecarAssets;
- (void)_loadSidecarFiles;
- (void)loadSidecarFiles;
- (id)checkForSidecarWithName:(id)arg1;
- (id)checkForSidecarWithExtension:(id)arg1;
- (unsigned long long)relatedBytes;
- (id)relatedAssets;
@property(readonly, nonatomic) unsigned long long approximateBytesRequiredToImport;
@property(readonly, nonatomic) unsigned long long assetSizeIncludingRelatedAssets;
@property(readonly, nonatomic) NSNumber *trackFormat;
@property(readonly, nonatomic) NSNumber *bitrate;
@property(readonly, nonatomic) NSNumber *sampleRate;
@property(readonly, nonatomic) NSNumber *fps;
@property(readonly, nonatomic) NSString *codec;
@property(readonly, nonatomic) NSNumber *shutterSpeed;
@property(readonly, nonatomic) NSNumber *aperture;
@property(readonly, nonatomic) NSNumber *exposureBias;
@property(readonly, nonatomic) NSNumber *focalLength;
@property(readonly, nonatomic) NSNumber *iso;
@property(readonly, nonatomic) NSNumber *meteringMode;
@property(readonly, nonatomic) NSNumber *whiteBalance;
@property(readonly, nonatomic) NSNumber *flashFired;
@property(readonly, nonatomic) NSString *lensModel;
@property(readonly, nonatomic) NSString *cameraModel;
@property(readonly, nonatomic) NSString *cameraMake;
@property(readonly, nonatomic) NSNumber *duration;
- (id)spatialOverCaptureIdentifier;
- (id)mediaGroupId;
- (int)burstPickType;
- (id)groupingUUID;
@property(readonly, nonatomic) NSString *burstUUID;
- (struct CGSize)cgImageSize;
- (void)_accessMetadata:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) BOOL hasAdjustments;
@property(readonly, nonatomic) BOOL isViewable;
@property(readonly, nonatomic) BOOL isTagged;
- (void)takeAsVideoComplement:(id)arg1;
- (BOOL)isVideoComplementOf:(id)arg1;
- (BOOL)performAdditionalLivePhotoChecksOnImageAsset:(id)arg1;
- (id)stripMarkerFromName:(id)arg1 markerLocation:(unsigned long long)arg2;
- (id)basenameForOriginalAdjustmentData;
- (BOOL)isOriginalAdjustmentData;
- (BOOL)isBase;
- (BOOL)isSpatialOverCapture;
- (BOOL)isRender;
- (BOOL)isPrimary;
- (BOOL)isRepresentation;
@property(readonly, nonatomic) BOOL isGrouped;
@property(readonly, nonatomic) BOOL hasAudioAttachment;
@property(readonly, nonatomic) BOOL isLivePhoto;
@property(readonly, nonatomic) BOOL isBurst;
@property(readonly, nonatomic) BOOL isSDOF;
@property(readonly, nonatomic) BOOL isHDR;
@property(readonly, nonatomic) BOOL isJpegPlusRAW;
@property(readonly, nonatomic) BOOL isTimelapse;
@property(readonly, nonatomic) BOOL isAVCHD;
@property(readonly, nonatomic) BOOL isSloMo;
@property(readonly, nonatomic) BOOL isSidecar;
@property(readonly, nonatomic) BOOL isPSD;
@property(readonly, nonatomic) BOOL isPNG;
@property(readonly, nonatomic) BOOL isPDF;
@property(readonly, nonatomic) BOOL isGIF;
@property(readonly, nonatomic) BOOL isHEIF;
@property(readonly, nonatomic) BOOL isTIFF;
@property(readonly, nonatomic) BOOL isRAW;
@property(readonly, nonatomic) BOOL isJPEG2000;
@property(readonly, nonatomic) BOOL isJPEG;
@property(readonly, nonatomic) BOOL isAudio;
@property(readonly, nonatomic) BOOL isMovie;
@property(readonly, nonatomic) BOOL isImage;
- (BOOL)isValidForReference;
@property(readonly, nonatomic) BOOL canDelete;
@property(readonly, nonatomic) BOOL canReference; // @synthesize canReference=_canReference;
@property(readonly, nonatomic) NSString *parentFolderPath;
- (BOOL)canPreserveFolderStructure;
@property(readonly, nonatomic) id representedObject;
- (id)descriptionWithPrefix:(id)arg1;
@property(readonly, copy) NSString *description;
- (id)initWithSource:(id)arg1 url:(id)arg2 uti:(id)arg3 supportedType:(unsigned char)arg4;
- (id)initWithSource:(id)arg1;
- (BOOL)configureWithUTI:(id)arg1 supportedType:(unsigned char)arg2 error:(id *)arg3;
- (void)updateIsRAW:(BOOL)arg1 uti:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

