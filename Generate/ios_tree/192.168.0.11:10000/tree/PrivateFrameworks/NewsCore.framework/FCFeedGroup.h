/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NewsCore.framework/NewsCore
 */

@interface FCFeedGroup : NSObject <FCFeedElement, FCFeedGroupOutlining> {
    FCFeedDescriptor * _L2FeedDescriptor;
    NSString * _backingTagID;
    <FCForYouBridgedFeedGroup> * _bridgedGroup;
    <FCCardStyleProviding> * _cardStyle;
    FCHeadlineClusteringRules * _clusteringRules;
    NSDate * _creationDate;
    NSString * _ctaText;
    <FCCardStyleProviding> * _darkCardStyle;
    FCColor * _darkStyleTitleColor;
    NSArray * _debugHeadlines;
    FCFeedEdition * _edition;
    NSArray * _elements;
    NSString * _eyebrowText;
    long long  _groupType;
    NSArray * _headlines;
    NSString * _identifier;
    bool  _isFirstFromEdition;
    NSArray * _issueIDs;
    unsigned long long  _mergeID;
    unsigned long long  _options;
    NSString * _sourceIdentifier;
    NSString * _subtitle;
    NSString * _title;
    FCColor * _titleColor;
}

@property (nonatomic, readonly, copy) FCFeedDescriptor *L2FeedDescriptor;
@property (nonatomic, readonly, copy) NSString *backingTagID;
@property (nonatomic, readonly) <FCForYouBridgedFeedGroup> *bridgedGroup;
@property (nonatomic, readonly) bool canBeExtended;
@property (nonatomic, readonly, copy) <FCCardStyleProviding> *cardStyle;
@property (nonatomic, readonly, copy) FCHeadlineClusteringRules *clusteringRules;
@property (nonatomic, readonly, copy) NSString *contentIdentifier;
@property (nonatomic, readonly) NSDate *creationDate;
@property (nonatomic, readonly, copy) NSString *ctaText;
@property (nonatomic, readonly, copy) <FCCardStyleProviding> *darkCardStyle;
@property (nonatomic, readonly, copy) FCColor *darkStyleTitleColor;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly, copy) NSArray *debugHeadlines;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly, copy) FCFeedEdition *edition;
@property (nonatomic, readonly, copy) NSArray *elements;
@property (nonatomic, readonly, copy) NSString *eyebrowText;
@property (nonatomic, readonly) long long feedElementType;
@property (nonatomic, readonly) long long groupType;
@property (nonatomic, readonly) bool hasStrictHeadlineOrder;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly, copy) NSArray *headlines;
@property (nonatomic, readonly, copy) NSString *identifier;
@property (nonatomic, readonly) bool isFirstFromEdition;
@property (nonatomic, readonly, copy) NSArray *issueIDs;
@property (nonatomic, readonly) unsigned long long mergeID;
@property (nonatomic, readonly) unsigned long long options;
@property (nonatomic, readonly, copy) NSString *sourceIdentifier;
@property (nonatomic, readonly, copy) NSString *subtitle;
@property (readonly) Class superclass;
@property (nonatomic, readonly, copy) NSString *title;
@property (nonatomic, readonly, copy) FCColor *titleColor;
@property (getter=isTopStories, nonatomic, readonly) bool topStories;
@property (nonatomic, readonly) bool usesPlaceholderHeadlines;

+ (id)_pbHeadlinesFromHeadlines:(id)arg1 sharedStringIndex:(id)arg2;
+ (id)pbGroupFromGroup:(id)arg1 sharedStringIndex:(id)arg2;

- (void).cxx_destruct;
- (id)L2FeedDescriptor;
- (id)backingTagID;
- (id)bridgedGroup;
- (bool)canBeExtended;
- (id)cardStyle;
- (id)clusteringRules;
- (bool)containsHeadlineIdenticalTo:(id)arg1;
- (id)contentIdentifier;
- (id)copyWithEdition:(id)arg1 isFirst:(bool)arg2;
- (id)copyWithElements:(id)arg1;
- (id)copyWithMergeID:(unsigned long long)arg1;
- (id)copyWithOptions:(unsigned long long)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)creationDate;
- (id)ctaText;
- (id)darkCardStyle;
- (id)darkStyleTitleColor;
- (id)debugHeadlines;
- (id)description;
- (id)edition;
- (id)elements;
- (id)equivalentTopicIDs;
- (id)eyebrowText;
- (long long)feedElementType;
- (long long)groupType;
- (bool)hasStrictHeadlineOrder;
- (unsigned long long)hash;
- (id)headlines;
- (id)identifier;
- (id)initWithGroupType:(long long)arg1 sourceIdentifier:(id)arg2 elements:(id)arg3 debugHeadlines:(id)arg4 options:(unsigned long long)arg5;
- (id)initWithGroupType:(long long)arg1 sourceIdentifier:(id)arg2 title:(id)arg3 L2FeedDescriptor:(id)arg4 issueIDs:(id)arg5;
- (id)initWithGroupType:(long long)arg1 sourceIdentifier:(id)arg2 title:(id)arg3 subtitle:(id)arg4 eyebrowText:(id)arg5 ctaText:(id)arg6 cardStyle:(id)arg7 darkCardStyle:(id)arg8 elements:(id)arg9 debugHeadlines:(id)arg10 options:(unsigned long long)arg11;
- (id)initWithGroupType:(long long)arg1 sourceIdentifier:(id)arg2 title:(id)arg3 subtitle:(id)arg4 titleColor:(id)arg5 darkStyleTitleColor:(id)arg6 L2FeedDescriptor:(id)arg7 elements:(id)arg8 debugHeadlines:(id)arg9 clusteringRules:(id)arg10 options:(unsigned long long)arg11;
- (id)initWithIdentifier:(id)arg1 groupType:(long long)arg2 sourceIdentifier:(id)arg3 L2FeedDescriptor:(id)arg4 bridgedGroup:(id)arg5;
- (id)initWithIdentifier:(id)arg1 groupType:(long long)arg2 sourceIdentifier:(id)arg3 creationDate:(id)arg4 title:(id)arg5 subtitle:(id)arg6 eyebrowText:(id)arg7 ctaText:(id)arg8 titleColor:(id)arg9 darkStyleTitleColor:(id)arg10 cardStyle:(id)arg11 darkCardStyle:(id)arg12 L2FeedDescriptor:(id)arg13 backingTagID:(id)arg14 edition:(id)arg15 isFirstFromEdition:(bool)arg16 elements:(id)arg17 debugHeadlines:(id)arg18 clusteringRules:(id)arg19 issueIDs:(id)arg20 bridgedGroup:(id)arg21 options:(unsigned long long)arg22 mergeID:(unsigned long long)arg23;
- (id)initWithIdentifier:(id)arg1 groupType:(long long)arg2 sourceIdentifier:(id)arg3 title:(id)arg4 subtitle:(id)arg5 titleColor:(id)arg6 darkStyleTitleColor:(id)arg7 L2FeedDescriptor:(id)arg8 elements:(id)arg9 debugHeadlines:(id)arg10 clusteringRules:(id)arg11 options:(unsigned long long)arg12;
- (bool)isEqual:(id)arg1;
- (bool)isFirstFromEdition;
- (bool)isGap;
- (bool)isTopStories;
- (id)issueIDs;
- (unsigned long long)mergeID;
- (unsigned long long)options;
- (id)sourceIdentifier;
- (id)subtitle;
- (id)title;
- (id)titleColor;
- (bool)usesPlaceholderHeadlines;

@end
