//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSView.h"

#import "ISGestureInputDelegate.h"
#import "ISPlayerChangeObserver.h"
#import "ISPlayerChangeObserverPrivate.h"
#import "ISPlayerDelegate.h"
#import "ISPlayerOutput.h"
#import "NSGestureRecognizerDelegate.h"

@class CALayer, ISAudioVolumeInput, ISGestureInput, ISMutedAudioInput, ISPlaybackSpec, ISPlayer, ISPlayerOutputContent, ISVitalityFilter, ISVitalityInput, ISWrappedAVPlayer, NSError, NSGestureRecognizer, NSHashTable, NSMutableSet, NSObject<OS_dispatch_queue>, NSScrollView, NSString, _ISAVPlayerView, _ISCrossfadeView, _ISPlayerDebugView, _ISTargetView;

@interface ISPlayerView : NSView <ISGestureInputDelegate, ISPlayerOutput, NSGestureRecognizerDelegate, ISPlayerChangeObserver, ISPlayerChangeObserverPrivate, ISPlayerDelegate>
{
    ISPlayer *_player;
    NSHashTable *_observers;
    NSObject<OS_dispatch_queue> *_observerQueue;
    CALayer *_overridePhotoLayer;
    ISPlayerOutputContent *_content;
    ISWrappedAVPlayer *_videoPlayer;
    long long _contentMode;
    BOOL _photoViewHidden;
    struct {
        unsigned int respondsToStateDidChange:1;
        unsigned int respondsToWillBeginVisualPlayback:1;
        unsigned int respondsToDidEndVisualPlayback:1;
        unsigned int respondsToDidPlaybackVideoAssetToEnd:1;
        unsigned int respondsToWillPlaybackVideoAssetToEnd:1;
        unsigned int respondsToDelegateForGestureReognizer:1;
        unsigned int respondsToViewHostingGestureRecognizer:1;
        unsigned int respondsToIsInteractingDidChange:1;
        unsigned int respondsToGestureRecognizerDidChange:1;
        unsigned int respondsToPlayerItemDidChange:1;
    } _delegateFlags;
    BOOL _interactivePlaybackAllowed;
    BOOL _isReadyForDisplay;
    BOOL _isInteracting;
    BOOL __crossfadeEnabled;
    BOOL __needsUpdateDebugView;
    BOOL __needsNewDriver;
    BOOL __playerTransitioning;
    BOOL _useSingletonPlayer;
    BOOL _vitalityAllowed;
    BOOL _allowReversePlayback;
    BOOL _shouldManagePlayerItemLoading;
    BOOL _showCrossfadeBorder;
    BOOL _showVideoBorder;
    BOOL _showDebugInfo;
    double _photoScale;
    double _scrubOffset;
    long long _scrubRegion;
    long long _playbackState;
    long long _status;
    NSError *_error;
    id <ISPlayerViewDelegate> _delegate;
    NSView *__photoContainerView;
    NSView *__videoContainerView;
    _ISTargetView *__photoView;
    _ISAVPlayerView *__videoView;
    _ISTargetView *__videoMaskView;
    _ISCrossfadeView *__crossfadeView;
    _ISPlayerDebugView *__debugInfoView;
    ISGestureInput *__playbackInput;
    ISVitalityInput *__vitalityInput;
    ISMutedAudioInput *__mutedAudioInput;
    ISAudioVolumeInput *__audioVolumeInput;
    id __forceTouchStatusObserver;
    id <NSObject> __playerObservationToken;
    NSMutableSet *__activeGestures;
    NSScrollView *_vitalityScrollView;
    ISVitalityFilter *_vitalityFilter;
    unsigned long long _playbackStyle;
    ISPlaybackSpec *_playbackSpec;
    struct CGSize __videoSize;
    struct CGPoint _scaleAnchorOffset;
}

+ (void)setAllowPlayerReuse:(BOOL)arg1;
+ (void)resetCaches;
+ (void)initialize;
@property(retain, nonatomic) ISPlaybackSpec *playbackSpec; // @synthesize playbackSpec=_playbackSpec;
@property(nonatomic) struct CGPoint scaleAnchorOffset; // @synthesize scaleAnchorOffset=_scaleAnchorOffset;
@property(nonatomic) BOOL showDebugInfo; // @synthesize showDebugInfo=_showDebugInfo;
@property(nonatomic) BOOL showVideoBorder; // @synthesize showVideoBorder=_showVideoBorder;
@property(nonatomic) BOOL showCrossfadeBorder; // @synthesize showCrossfadeBorder=_showCrossfadeBorder;
@property(nonatomic) BOOL shouldManagePlayerItemLoading; // @synthesize shouldManagePlayerItemLoading=_shouldManagePlayerItemLoading;
@property(nonatomic) unsigned long long playbackStyle; // @synthesize playbackStyle=_playbackStyle;
@property(nonatomic) BOOL allowReversePlayback; // @synthesize allowReversePlayback=_allowReversePlayback;
@property(nonatomic, getter=isVitalityAllowed) BOOL vitalityAllowed; // @synthesize vitalityAllowed=_vitalityAllowed;
@property(nonatomic, getter=isUsingSingletonPlayer) BOOL useSingletonPlayer; // @synthesize useSingletonPlayer=_useSingletonPlayer;
@property(nonatomic, getter=isPhotoViewHidden) BOOL photoViewHidden; // @synthesize photoViewHidden=_photoViewHidden;
@property(retain, nonatomic) ISVitalityFilter *vitalityFilter; // @synthesize vitalityFilter=_vitalityFilter;
@property(nonatomic) __weak NSScrollView *vitalityScrollView; // @synthesize vitalityScrollView=_vitalityScrollView;
@property(readonly, nonatomic) NSMutableSet *_activeGestures; // @synthesize _activeGestures=__activeGestures;
@property(retain, nonatomic, setter=_setPlayerObservationToken:) id <NSObject> _playerObservationToken; // @synthesize _playerObservationToken=__playerObservationToken;
@property(retain, nonatomic, setter=_setForceTouchStatusObserver:) id _forceTouchStatusObserver; // @synthesize _forceTouchStatusObserver=__forceTouchStatusObserver;
@property(nonatomic, setter=_setVideoSize:) struct CGSize _videoSize; // @synthesize _videoSize=__videoSize;
@property(retain, nonatomic, setter=_setAudioVolumeInput:) ISAudioVolumeInput *_audioVolumeInput; // @synthesize _audioVolumeInput=__audioVolumeInput;
@property(retain, nonatomic, setter=_setMutedAudioInput:) ISMutedAudioInput *_mutedAudioInput; // @synthesize _mutedAudioInput=__mutedAudioInput;
@property(retain, nonatomic, setter=_setVitalityInput:) ISVitalityInput *_vitalityInput; // @synthesize _vitalityInput=__vitalityInput;
@property(retain, nonatomic, setter=_setPlaybackInput:) ISGestureInput *_playbackInput; // @synthesize _playbackInput=__playbackInput;
@property(nonatomic, getter=_isPlayerTransitioning, setter=_setPlayerTransitioning:) BOOL _playerTransitioning; // @synthesize _playerTransitioning=__playerTransitioning;
@property(nonatomic, setter=_setNeedsNewDriver:) BOOL _needsNewDriver; // @synthesize _needsNewDriver=__needsNewDriver;
@property(nonatomic, setter=_setNeedsUpdateDebugView:) BOOL _needsUpdateDebugView; // @synthesize _needsUpdateDebugView=__needsUpdateDebugView;
@property(retain, nonatomic, setter=_setDebugInfoView:) _ISPlayerDebugView *_debugInfoView; // @synthesize _debugInfoView=__debugInfoView;
@property(nonatomic, getter=_isCrossfadeEnabled, setter=_setCrossfadeEnabled:) BOOL _crossfadeEnabled; // @synthesize _crossfadeEnabled=__crossfadeEnabled;
@property(retain, nonatomic, setter=_setCrossfadeView:) _ISCrossfadeView *_crossfadeView; // @synthesize _crossfadeView=__crossfadeView;
@property(readonly, nonatomic) _ISTargetView *_videoMaskView; // @synthesize _videoMaskView=__videoMaskView;
@property(retain, nonatomic, setter=_setVideoView:) _ISAVPlayerView *_videoView; // @synthesize _videoView=__videoView;
@property(retain, nonatomic, setter=_setPhotoView:) _ISTargetView *_photoView; // @synthesize _photoView=__photoView;
@property(retain, nonatomic, setter=_setVideoContainerView:) NSView *_videoContainerView; // @synthesize _videoContainerView=__videoContainerView;
@property(retain, nonatomic, setter=_setPhotoContainerView:) NSView *_photoContainerView; // @synthesize _photoContainerView=__photoContainerView;
@property(nonatomic) __weak id <ISPlayerViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic, setter=_setError:) NSError *error; // @synthesize error=_error;
@property(nonatomic, setter=_setStatus:) long long status; // @synthesize status=_status;
@property(nonatomic, setter=_setInteracting:) BOOL isInteracting; // @synthesize isInteracting=_isInteracting;
@property(nonatomic, setter=_setPlaybackState:) long long playbackState; // @synthesize playbackState=_playbackState;
@property(readonly, nonatomic) BOOL isReadyForDisplay; // @synthesize isReadyForDisplay=_isReadyForDisplay;
@property(nonatomic, getter=isInteractivePlaybackAllowed) BOOL interactivePlaybackAllowed; // @synthesize interactivePlaybackAllowed=_interactivePlaybackAllowed;
@property(nonatomic) long long scrubRegion; // @synthesize scrubRegion=_scrubRegion;
@property(nonatomic) double scrubOffset; // @synthesize scrubOffset=_scrubOffset;
@property(nonatomic) double photoScale; // @synthesize photoScale=_photoScale;
- (void).cxx_destruct;
- (long long)state;
- (id)videoPlayerForPlayer:(id)arg1;
- (BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)playerPlayingVitalityChanged:(id)arg1;
- (void)player:(id)arg1 didChangePlayerItem:(id)arg2;
- (void)player:(id)arg1 didChangePlayerStatus:(long long)arg2;
- (void)player:(id)arg1 didChangePlaybackState:(long long)arg2;
- (void)unregisterObserver:(id)arg1;
- (void)registerObserver:(id)arg1;
- (void)_enumerateObserversWithBlock:(CDUnknownBlockType)arg1;
- (void)playerDidPlayVideoToEnd;
- (void)playerWillPlayVideoToEnd;
- (void)playerDidEndTransitionToPlaybackState:(long long)arg1;
- (void)playerWillBeginTransitionToPlaybackState:(long long)arg1;
@property(retain, nonatomic) ISPlayerOutputContent *content;
@property(readonly, nonatomic) CALayer *crossfadeLayer;
@property(readonly, nonatomic) CALayer *photoLayer;
@property(readonly, nonatomic) CALayer *videoLayer;
- (void)gestureInputGestureRecognizerDidChange:(id)arg1;
- (id)gestureInput:(id)arg1 delegateForGestureRecognizer:(id)arg2;
- (id)gestureInput:(id)arg1 viewHostingGestureRecognizer:(id)arg2;
- (void)_handleGesture:(id)arg1;
- (void)setVitalityEnabled:(BOOL)arg1 inScrollView:(id)arg2;
- (void)_forceTouchStatusDidChange:(id)arg1;
- (void)_updatePlayerParameters;
- (void)_playerPlaybackStateDidChange;
- (void)_playerDidChangePlayerItem;
- (void)_removePlayerObservers;
- (void)_addPlayerObservers;
- (void)_updateStatus;
- (void)_updateContainerViews;
- (void)_updateVideoBorder;
- (void)dealloc;
- (void)_updateSubviewOrdering;
- (void)_updateVideoLayer;
- (void)_updateCrossfadeLayer;
@property(readonly, nonatomic, getter=isPlayingVitalityHint) BOOL playingVitalityHint;
@property(readonly, nonatomic, getter=isPlayingVitality) BOOL playingVitality;
- (void)playVitalityHint;
- (void)seekForVitalityHintIfNeeded;
- (void)cancelGestureRecognizers;
- (void)invalidateGestureRecognizers;
- (void)_updateDebugViewIfNeeded;
- (void)_invalidateDebugView;
- (void)_updatePhotoViewVisibility;
- (void)_updateVitalityInput;
- (void)_updatePlaybackInput;
- (Class)_playbackInputClass;
@property(readonly, nonatomic) NSGestureRecognizer *gestureRecognizer;
@property(retain, nonatomic) ISPlayer *player;
- (void)prepareWithPlayerItem:(id)arg1;
@property(nonatomic) double playThreshold;
@property(nonatomic) float audioVolume;
@property(nonatomic) BOOL audioMuted;
- (void)_configureForPlaybackSpec:(id)arg1;
@property(retain, nonatomic) CALayer *overridePhotoLayer;
@property(nonatomic) double scrubThreshold;
- (void)prepareWithPhoto:(struct CGImage *)arg1 videoAsset:(id)arg2 photoTime:(double)arg3;
- (struct CGSize)_photoSize;
- (struct CGSize)intrinsicContentSize;
- (void)viewDidChangeBackingProperties;
- (void)_layoutPhotoView;
- (void)layout;
@property(nonatomic) long long contentMode;
- (BOOL)isSupportedContentMode:(long long)arg1;
- (id)supportedContentModes;
- (void)awakeFromNib;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)initWithVideoPlayer:(id)arg1;
@property(readonly, copy) NSString *debugDescription;
- (double)_backingScaleFactor;
- (void)setBackgroundColor:(id)arg1;
- (id)backgroundColor;
- (BOOL)isFlipped;
- (id)contentLayer;

// Remaining properties
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

