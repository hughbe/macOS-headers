//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class AVOutputDevice, NSArray, NSData, NSDictionary, NSNumber, NSString;

@protocol AVOutputDeviceImpl <NSObject>
@property(readonly, nonatomic) NSString *currentBluetoothListeningMode;
@property(readonly, nonatomic) NSArray *availableBluetoothListeningModes;
@property(readonly, nonatomic) long long HAPConformance;
@property(readonly, nonatomic) BOOL supportsBluetoothSharing;
@property(readonly, nonatomic) BOOL presentsOptimizedUserInterfaceWhenPlayingFetchedAudioOnlyAssets;
@property(readonly, nonatomic) BOOL canFetchMediaDataFromSender;
@property(readonly, nonatomic) BOOL canPlayEncryptedProgressiveDownloadAssets;
@property(readonly, nonatomic) BOOL canRelayCommunicationChannel;
@property(readonly, nonatomic) BOOL canCommunicateWithAllLogicalDeviceMembers;
@property(readonly, nonatomic) BOOL isLogicalDeviceLeader;
@property(readonly, nonatomic) NSString *logicalDeviceID;
@property(readonly, nonatomic) BOOL groupContainsGroupLeader;
@property(readonly, nonatomic) BOOL participatesInGroupPlayback;
@property(readonly, nonatomic) BOOL isGroupLeader;
@property(readonly, nonatomic) BOOL canBeGroupLeader;
@property(readonly, copy, nonatomic) NSString *groupID;
@property(readonly, nonatomic) BOOL canBeGrouped;
@property(readonly) BOOL canSetVolume;
@property(readonly) float volume;
@property(readonly, nonatomic) BOOL supportsBufferedAirPlay;
@property(readonly, nonatomic) BOOL canAccessiCloudMusicLibrary;
@property(readonly, nonatomic) BOOL canAccessAppleMusic;
@property(readonly, nonatomic) BOOL canAccessRemoteAssets;
@property(readonly, nonatomic) BOOL onlyAllowsConnectionsFromPeersInHomeGroup;
@property(readonly, nonatomic) BOOL automaticallyAllowsConnectionsFromPeersInHomeGroup;
@property(readonly, nonatomic) BOOL requiresAuthorization;
@property(readonly, nonatomic) unsigned long long deviceFeatures;
@property(readonly, copy, nonatomic) NSArray *connectedPairedDevices;
@property(readonly, nonatomic, getter=isInUseByPairedDevice) BOOL inUseByPairedDevice;
@property(readonly, nonatomic) NSDictionary *airPlayProperties;
@property(readonly, nonatomic) NSNumber *isInEar;
@property(readonly, nonatomic) NSNumber *supportsDataOverACLProtocol;
@property(readonly, nonatomic) NSNumber *rightBatteryLevel;
@property(readonly, nonatomic) NSNumber *leftBatteryLevel;
@property(readonly, nonatomic) NSNumber *caseBatteryLevel;
@property(readonly, nonatomic) NSNumber *batteryLevel;
@property(readonly, copy, nonatomic) NSData *identifyingMACAddress;
@property(readonly, nonatomic) NSString *firmwareVersion;
@property(readonly, nonatomic) NSString *serialNumber;
@property(readonly, copy, nonatomic) NSString *modelID;
@property(readonly, nonatomic) NSString *manufacturer;
@property(readonly, nonatomic) long long deviceSubType;
@property(readonly, nonatomic) long long deviceType;
@property(readonly, copy, nonatomic) NSString *ID;
@property(readonly, copy, nonatomic) NSString *name;
@property __weak AVOutputDevice *parentOutputDevice;
- (void)configureUsingBlock:(void (^)(id <AVOutputDeviceConfigurationModification>))arg1 options:(NSDictionary *)arg2 completionHandler:(void (^)(long long, id <AVOutputDeviceConfigurationRetrieval>, NSString *, NSError *))arg3;
- (BOOL)setCurrentBluetoothListeningMode:(NSString *)arg1 error:(id *)arg2;
- (void)setVolume:(float)arg1;
- (void)setSecondDisplayEnabled:(BOOL)arg1;
@end

