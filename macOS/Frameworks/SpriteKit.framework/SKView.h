//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled May 21 2020 17:01:39).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <AppKit/NSView.h>

#import <SpriteKit/NSSecureCoding-Protocol.h>

@class CAMetalLayer, MISSING_TYPE, NSData, NSMapTable, NSMutableDictionary, NSObject, SKDisplayLink, SKScene, SKTransition;
@protocol OS_dispatch_queue, OS_dispatch_semaphore, SKViewDelegate;

@interface SKView : NSView <NSSecureCoding>
{
    struct SKCStats _currentStats;
    struct SKCStats _nextStats;
    struct SKCStats _frameStats;
    struct SKCRenderer *_renderer;
    MISSING_TYPE *_viewScale;
    MISSING_TYPE *_viewTranslation;
    shared_ptr_2ce53ef7 _framebuffer;
    shared_ptr_bb77cfd9 _frameBufferColorTexture;
    shared_ptr_bb77cfd9 _frameBufferDepthStencilTexture;
    unsigned int _colorRenderBuffer;
    unsigned int _depthStencilRenderBuffer;
    struct shared_ptr<jet_fence> _renderFence;
    CAMetalLayer *_metalLayer;
    struct SKCRenderer *_layerBackedRenderer;
    BOOL _needsInitialUpdate;
    BOOL _didRunOnce;
    BOOL _viewFramebufferIsValid;
    MISSING_TYPE *_viewFramebufferPixelSize;
    BOOL _isBackgrounded;
    BOOL _allowsTransparency;
    BOOL _priorResignActivePausedState;
    unsigned long long _frameInterval;
    unsigned long long _preferredFramesPerSecond;
    SKDisplayLink *_displayLink;
    NSObject<OS_dispatch_queue> *_updateQueue;
    double _timePreviousUpdate;
    BOOL _prefersLowPowerGPU;
    BOOL _usesAsyncUpdateQueue;
    BOOL _hasRenderedOnce;
    BOOL _hasRenderedForCurrentUpdate;
    BOOL _disableInput;
    BOOL _mouseIsDown;
    BOOL _rightMouseIsDown;
    SKTransition *_transition;
    SKScene *_nextScene;
    SKScene *_scene;
    BOOL _paused;
    NSData *_spriteArrayHint;
    NSMutableDictionary *_viewRenderOptions;
    NSMapTable *_touchMap;
    float _prevBackingScaleFactor;
    CDUnknownBlockType _dynamicRenderBlock;
    NSObject<OS_dispatch_queue> *_renderQueue;
    NSObject<OS_dispatch_semaphore> *_renderSemaphore;
    int _queuedFrameCount;
    double _prevVsyncRenderTime;
    double _prevRenderTime;
    NSObject<SKViewDelegate> *_delegate;
    NSMutableDictionary *__info;
    double _physicsDebugStrokeWidth;
    struct CGSize _pixelSize;
}

+ (id)debugHierarchyValueForPropertyWithName:(id)arg1 onObject:(id)arg2 outOptions:(id *)arg3 outError:(id *)arg4;
+ (id)debugHierarchyPropertyDescriptions;
+ (id)debugHierarchyObjectsInGroupWithID:(id)arg1 onObject:(id)arg2 outOptions:(id *)arg3;
+ (id)debugHierarchyAdditionalGroupingIDs;
+ (void)_setCurrentTime:(double)arg1;
+ (BOOL)supportsSecureCoding;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(nonatomic) double physicsDebugStrokeWidth; // @synthesize physicsDebugStrokeWidth=_physicsDebugStrokeWidth;
@property(retain, nonatomic) NSMutableDictionary *_info; // @synthesize _info=__info;
@property(readonly, nonatomic) struct CGSize pixelSize; // @synthesize pixelSize=_pixelSize;
@property(nonatomic) __weak NSObject<SKViewDelegate> *delegate; // @synthesize delegate=_delegate;
- (id)_getPerformanceStats;
- (int)_spriteSubmitCount;
- (int)_spriteRenderCount;
- (double)_fps;
@property(nonatomic, getter=isPaused) BOOL paused;
- (float)_getViewContentsScale;
- (BOOL)wantsBestResolutionOpenGLSurface;
@property struct SKCRenderer *_layerBackedRenderer;
- (id)makeBackingLayer;
- (id)snapshot;
- (void)set_viewTranslation:(struct CGPoint)arg1;
- (struct CGPoint)_viewTranslation;
- (void)set_viewScale:(double)arg1;
- (double)_viewScale;
@property(readonly) NSMutableDictionary *options;
- (void)notifyWillRenderContent;
- (BOOL)hasValidViewFramebuffer;
- (id)getRenderOptions;
- (void)_renderContent;
- (void)renderContent;
- (void)willRenderContent;
- (CDStruct_14d5dc5e)getViewTransform;
- (MISSING_TYPE *)getViewport;
- (struct SKCNode *)getRootNode;
- (shared_ptr_2ce53ef7)nextFramebuffer;
- (struct SKCRenderer *)chooseViewRenderer;
- (id)textureFromNode:(id)arg1 crop:(struct CGRect)arg2;
- (void)_setUpdateQueue:(id)arg1;
- (void)renderToIOSurfaceID:(unsigned int)arg1 withScaleFactor:(double)arg2;
- (unsigned long long)_getEffectivePreferredFramesPerSecond;
@property(nonatomic) long long preferredFramesPerSecond;
@property(nonatomic) float preferredFrameRate;
@property(nonatomic) long long frameInterval;
- (void)writeContentsToPNG:(id)arg1;
- (void)runOnce;
- (void)onInit;
- (BOOL)isEqualToView:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1 updateQueue:(id)arg2;
- (id)initWithFrame:(struct CGRect)arg1;
- (id)textureFromNode:(id)arg1 withOptions:(id)arg2;
- (id)textureFromNode:(id)arg1;
- (void)_update:(double)arg1;
@property(readonly, nonatomic) SKScene *scene;
- (void)_reshape;
- (void)viewDidEndLiveResize;
- (void)setFrameSize:(struct CGSize)arg1;
- (void)viewWillMoveToWindow:(id)arg1;
- (void)viewDidMoveToWindow;
- (void)windowChangedScreen:(id)arg1;
- (void)windowWillClose:(id)arg1;
- (void)viewDidChangeBackingProperties;
- (void)presentScene:(id)arg1 transition:(id)arg2;
- (void)presentScene:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
@property(nonatomic) BOOL allowsTransparency;
- (BOOL)isOpaque;
- (double)alphaValue;
- (void)remakeFramebuffer:(double)arg1;
- (void)dealloc;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromScene:(id)arg2;
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 toScene:(id)arg2;
- (BOOL)acceptsFirstResponder;
- (void)keyUp:(id)arg1;
- (void)keyDown:(id)arg1;
- (void)rightMouseUp:(id)arg1;
- (void)mouseUp:(id)arg1;
- (void)rightMouseDragged:(id)arg1;
- (void)mouseDragged:(id)arg1;
- (void)mouseMoved:(id)arg1;
- (void)mouseExited:(id)arg1;
- (void)mouseEntered:(id)arg1;
- (void)rightMouseDown:(id)arg1;
- (void)mouseDown:(id)arg1;
- (struct CGPoint)_convertEventLocationToScene:(id)arg1;
- (void)pressureChangeWithEvent:(id)arg1;
- (void)_endFrameStats;
- (void)set_renderUpdateEnabled:(BOOL)arg1;
- (BOOL)_renderUpdateEnabled;
- (void)stopRenderCallbacks;
- (void)startRenderCallbacks;
- (void)setUpRenderCallback;
- (BOOL)_usesAsyncUpdateQueue;
- (void)set_usesAsyncUpdateQueue:(BOOL)arg1;
@property(nonatomic, getter=isAsynchronous) BOOL asynchronous;
- (void)_dispatchRenderToIOSurfaceID:(unsigned int)arg1 async:(BOOL)arg2 onQueue:(id)arg3 waitOnFence:(BOOL)arg4 preRender:(CDUnknownBlockType)arg5 postRender:(CDUnknownBlockType)arg6;
- (void)_renderToIOSurfaceID:(unsigned int)arg1 scaleFactor:(float)arg2 asynchronous:(BOOL)arg3 waitOnFence:(BOOL)arg4 preRender:(CDUnknownBlockType)arg5 postRender:(CDUnknownBlockType)arg6;
- (void)_renderToIOSurfaceID:(unsigned int)arg1 scaleFactor:(float)arg2 asynchronous:(BOOL)arg3 preRender:(CDUnknownBlockType)arg4 postRender:(CDUnknownBlockType)arg5;
- (void)_renderSynchronouslyForTime:(double)arg1 preRender:(CDUnknownBlockType)arg2 postRender:(CDUnknownBlockType)arg3;
- (void)_renderSynchronouslyForTime:(double)arg1 preRender:(CDUnknownBlockType)arg2 postRender:(CDUnknownBlockType)arg3 withMTLScheduleHandler:(CDUnknownBlockType)arg4;
- (void)_vsyncRenderForTime:(double)arg1 preRender:(CDUnknownBlockType)arg2 postRender:(CDUnknownBlockType)arg3;
- (BOOL)_shouldRenderForTime:(double)arg1;
- (void)renderForTime:(double)arg1 shouldBlock:(BOOL)arg2;
- (void)_commonInit;
- (void)_ensureRenderer;
- (void)remakeFramebuffer;
- (void)debugPrint;
- (id)captureToFile:(id)arg1;
- (id)archiveToFile:(id)arg1;
- (void)_showAllStats;
- (BOOL)_showsCPUStats;
- (void)set_showsCPUStats:(BOOL)arg1;
- (BOOL)_showsGPUStats;
- (void)set_showsGPUStats:(BOOL)arg1;
@property(nonatomic) BOOL showsDrawCount;
@property(nonatomic) BOOL showsNodeCount;
@property(nonatomic) BOOL showsQuadCount;
@property(nonatomic) BOOL showsFields;
@property(nonatomic) BOOL showsPhysics;
@property(nonatomic) BOOL showsFPS;
@property(nonatomic) BOOL ignoresSiblingOrder;
@property(nonatomic) BOOL disableStencilBuffers;
@property(nonatomic) BOOL shouldCullNonVisibleNodes;
- (void)setDynamicRenderBlock:(CDUnknownBlockType)arg1;
- (id)accessibilityHitTest:(struct CGPoint)arg1;
- (id)accessibilityChildren;
- (id)accessibilityLabel;
- (id)accessibilityRole;
- (BOOL)isAccessibilityElement;

@end

