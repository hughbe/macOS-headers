//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "ExtensionResourceVerifier.h"

@class NSArray, NSDictionary, NSMutableDictionary, NSMutableSet, NSObject<OS_dispatch_queue>, NSString;

__attribute__((visibility("hidden")))
@interface SafariExtensionsController : NSObject <ExtensionResourceVerifier>
{
    NSMutableSet *_enabledExtensions;
    NSMutableDictionary *_extensionIdentifierToStateMap;
    id _extensionMatchingContext;
    NSMutableSet *_blockedExtensions;
    NSMutableDictionary *_extensionUniqueIdentifierToExtensionDataMap;
    NSMutableDictionary *_extensionIdentifierToBaseURIMap;
    NSObject<OS_dispatch_queue> *_appBundleValidationQueue;
    BOOL _allowUnsignedExtensions;
    NSArray *_extensions;
    NSString *_crashReporterMessage;
}

+ (id)_baseURIForExtension:(id)arg1;
+ (void)_reportEnabledExtensionsCountToMessageTracer:(unsigned int)arg1 disabledExtensionCount:(unsigned int)arg2;
+ (void)_reportExtensionToMessageTracer:(id)arg1 enabled:(BOOL)arg2;
+ (id)_extensionsStateWithoutUnsignedExtensions:(id)arg1;
+ (id)_extensionsFromExtensionsState:(id)arg1;
+ (id)_composedIdentifierForStateOfExtensionWithBundleIdentifier:(id)arg1 developerIdentifier:(id)arg2;
+ (id)_extensionStateEnabledKey;
+ (id)extensionsCrashReporterMessageBundleParameterKey;
+ (id)_extensionsCrashReporterMessageTitle;
+ (id)extensionIdentifierToBaseURIMapBundleParameterKey;
+ (id)extensionURLScheme;
+ (id)_extensionPointIdentifier;
+ (id)_skipLoadingEnabledExtensionsAtLaunchPreferenceKey;
+ (BOOL)_initializeExtensionData:(id)arg1 forExtension:(id)arg2;
+ (Class)_extensionDataClass;
- (void).cxx_destruct;
@property(nonatomic) BOOL allowUnsignedExtensions; // @synthesize allowUnsignedExtensions=_allowUnsignedExtensions;
@property(readonly, copy, nonatomic) NSString *crashReporterMessage; // @synthesize crashReporterMessage=_crashReporterMessage;
@property(readonly, copy, nonatomic) NSArray *extensions; // @synthesize extensions=_extensions;
- (void)verifyExtensionResourceAtExtensionURL:(id)arg1 fileURL:(id)arg2;
- (void)_loadExtensions:(id)arg1;
- (void)_validateAndLoadExtensionIfNecessary:(id)arg1 attemptRetryOnFailure:(BOOL)arg2 isExtensionNewlyInstalled:(char *)arg3;
- (void)_addExtensionToBaseURIMap:(id)arg1;
- (void)_replaceLegacyExtensionsWithAppExtension:(id)arg1 andDeveloperIdentifier:(id)arg2;
- (void)_updateExtensionStateIfWebsiteAccessIncreased:(id)arg1;
- (void)_updateExtensionsCrashReporterMessage;
- (void)_blockExtension:(id)arg1;
- (void)_disableAndBlockExtension:(id)arg1;
- (BOOL)_extensionShouldBeEnabled:(id)arg1 withCodeSigningDictionary:(id)arg2;
- (void)_setExtensionIdentifierToStateMap:(id)arg1 forExtensionWithComposedIdentifier:(id)arg2;
- (void)_extensionsWereGloballyDisabled;
- (void)_extensionsWereGloballyEnabled;
@property(readonly, copy, nonatomic) NSDictionary *extensionIdentifierToBaseURIMap;
@property(readonly, nonatomic) BOOL extensionsEnabled;
- (BOOL)validateResourceWithFileURL:(id)arg1 resourceData:(id)arg2 inExtension:(id)arg3 codeRef:(struct __SecCode *)arg4;
- (BOOL)validateAndReadResourceWithExtensionURL:(id)arg1 inExtension:(id)arg2 codeRef:(struct __SecCode *)arg3 outResourceData:(id *)arg4;
- (BOOL)validateAndReadResourceWithExtensionURL:(id)arg1 inExtension:(id)arg2 outResourceData:(id *)arg3;
- (BOOL)validateAndReadResourceWithExtensionURL:(id)arg1 outResourceData:(id *)arg2;
- (void)retryExtensionValidation:(id)arg1;
- (void)unloadExtensionIfNecessary:(id)arg1;
- (void)completeRequestToExtensionWithUUID:(id)arg1 withRequestIdentifier:(id)arg2;
- (BOOL)canToggleAllowUnsignedExtensions;
- (id)extensionDataForExtension:(id)arg1;
- (id)composedIdentifierForExtensionStateForExtension:(id)arg1;
- (id)userVisibleWebsiteAccessForExtension:(id)arg1;
- (id)extensionWithComposedIdentifier:(id)arg1;
- (id)extensionWithUUID:(id)arg1;
- (void)messageTraceExtensions;
- (void)resetExtensionsState;
- (void)disableUnsignedExtensionsIfNecessary;
- (void)setExtension:(id)arg1 isEnabled:(BOOL)arg2 skipSavingToStorage:(BOOL)arg3;
- (void)setExtension:(id)arg1 isEnabled:(BOOL)arg2;
- (BOOL)extensionIsEnabled:(id)arg1;
- (id)enabledExtensions;
- (BOOL)hasAnyEnabledExtensionsInStorage;
@property(readonly, nonatomic) BOOL hasAnyEnabledExtensions;
- (void)_writeExtensionsStateToStorage;
- (void)extensionBlacklistDidChange;
- (void)findExtensions;
- (void)loadEnabledExtensions;
- (void)_loadEnabledExtension:(id)arg1;
- (void)_unloadPreviouslyEnabledExtension:(id)arg1;
- (id)_readExtensionsStateFromStorage;
- (void)_saveExtensionsStateToStorage;
- (id)toolbarItemIdentifiers;
- (id)toolbarItemForIdentifier:(id)arg1 browserWindowController:(id)arg2;
- (void)_connectToExtensionForValidation:(id)arg1 untrustedCodeSigningDictionary:(id)arg2 attemptRetryOnFailure:(BOOL)arg3;
- (void)_deferAccessToExtensionsDataInStorageDuringLoad:(BOOL)arg1;
- (BOOL)_canAccessExtensionsDataInStorage;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

