//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled May 21 2020 17:01:39).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class CKContainer, CKDatabase, CKDatabaseSubscription, CKRecordZone, NSCloudKitMirroringDelegateOptions, NSURL, PFCloudKitStoreMonitor;
@protocol OS_dispatch_semaphore;

__attribute__((visibility("hidden")))
@interface PFCloudKitSetupAssistant : NSObject
{
    NSCloudKitMirroringDelegateOptions *_mirroringOptions;
    CKRecordZone *_recordZone;
    CKContainer *_container;
    CKDatabase *_database;
    CKDatabaseSubscription *_databaseSubscription;
    NSURL *_largeBlobDirectoryURL;
    NSObject<OS_dispatch_semaphore> *_cloudKitSemaphore;
    PFCloudKitStoreMonitor *storeMonitor;
    PFCloudKitStoreMonitor *_storeMonitor;
}

@property(readonly, nonatomic) PFCloudKitStoreMonitor *storeMonitor; // @synthesize storeMonitor=_storeMonitor;
@property(readonly, nonatomic) NSObject<OS_dispatch_semaphore> *cloudKitSemaphore; // @synthesize cloudKitSemaphore=_cloudKitSemaphore;
@property(readonly, nonatomic) NSURL *largeBlobDirectoryURL; // @synthesize largeBlobDirectoryURL=_largeBlobDirectoryURL;
@property(readonly, nonatomic) CKDatabaseSubscription *databaseSubscription; // @synthesize databaseSubscription=_databaseSubscription;
@property(readonly, nonatomic) CKDatabase *database; // @synthesize database=_database;
@property(readonly, nonatomic) CKContainer *container; // @synthesize container=_container;
@property(readonly, nonatomic) CKRecordZone *recordZone; // @synthesize recordZone=_recordZone;
@property(readonly, nonatomic) NSCloudKitMirroringDelegateOptions *mirroringOptions; // @synthesize mirroringOptions=_mirroringOptions;
- (void)_setStoreMonitor:(id)arg1;
- (void)_setContainer:(id)arg1;
- (void)_setDatabase:(id)arg1;
- (BOOL)_checkUserIdentity:(id *)arg1;
- (BOOL)_setupDatabaseSubscriptionIfNecessary:(id *)arg1;
- (BOOL)_shouldAttemptRecoveryForZone:(id)arg1 byDeletingExistingZone:(char *)arg2 afterError:(id)arg3;
- (BOOL)_deleteZone:(id)arg1 error:(id *)arg2;
- (BOOL)_saveZone:(id)arg1 error:(id *)arg2;
- (BOOL)_createZoneIfNecessary:(id *)arg1;
- (BOOL)_checkAccountStatus:(id *)arg1;
- (BOOL)_initializeAssetStorageURLError:(id *)arg1;
- (BOOL)_checkAndInitializeMetadata:(id *)arg1;
- (BOOL)_initializeCloudKitForObservedStore:(id *)arg1;
- (void)dealloc;
- (id)initWithMirroringOptions:(id)arg1 observedStore:(id)arg2 zone:(id)arg3 databaseSubscription:(id)arg4;

@end

