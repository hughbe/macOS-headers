/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CrashReporterSupport.framework/CrashReporterSupport
 */

@interface CrashReport : OSAReport <OSAConcreteReport> {
    unsigned long long  _abort_cause;
    NSNumber * _adam_id;
    NSString * _appVariant;
    NSMutableArray * _applicationSpecificInfo;
    NSMutableArray * _backtraces;
    NSDictionary * _binaryImageHints;
    bool  _binaryImagePostProcessingComplete;
    NSMutableArray * _binaryImages;
    NSString * _bundle_id;
    NSString * _bundle_vers;
    NSString * _caller_name;
    unsigned long long  _coalition_id;
    NSString * _coalition_name;
    NSString * _cohort_id;
    int  _cpuType;
    int  _crashedThreadNumber;
    unsigned int  _cs_status;
    NSArray * _diagToolExtras;
    NSString * _dtbuild;
    NSMutableArray * _dyldMessages;
    long long * _exceptionCode;
    unsigned int  _exceptionCodeCount;
    unsigned int  _exceptionState;
    unsigned int  _exceptionStateCount;
    int  _exceptionType;
    bool  _execFailureError;
    void * _exit_payload;
    unsigned int  _exit_payload_length;
    struct exit_reason_snapshot { unsigned int x1; unsigned long long x2; unsigned long long x3; } * _exit_snapshot;
    unsigned int  _exit_snapshot_length;
    NSMutableDictionary * _extraInfo;
    int  _highlightedThreadNumber;
    bool  _is64Bit;
    bool  _is_beta;
    bool  _is_corpse;
    bool  _is_first_party;
    bool  _is_simulated;
    NSString * _lastExceptionBacktrace;
    int  _maxBinaryIdentifierLength;
    NSString * _memgraph_filename;
    unsigned int  _pageinState;
    unsigned int  _pageinStateCount;
    NSString * _parentProcessName;
    unsigned int  _platform;
    int  _ppid;
    NSString * _procName;
    NSString * _procPath;
    int  _proc_id;
    struct timeval { 
        long long tv_sec; 
        int tv_usec; 
    }  _proc_starttime;
    unsigned long long  _queue_serial_no;
    int  _responsible_pid;
    unsigned long long  _sharedCacheAddress;
    NSString * _short_vers;
    NSMutableString * _sig_frames;
    int  _signal;
    BOOL  _slice_uuid;
    NSMutableDictionary * _spewage_diag;
    unsigned long long  _spewage_diag_total_length;
    unsigned int  _task;
    int  _task_role;
    int  _terminator_pid;
    NSString * _terminator_proc;
    NSString * _terminator_reason;
    unsigned long long  _threadId;
    NSMutableArray * _threadNames;
    unsigned int  _threadPort;
    unsigned int  _threadState;
    unsigned int  _threadStateCount;
    int  _threadStateFlavor;
    unsigned int  _uid;
    unsigned long long  _uniqId;
    NSUUID * _vendor_id;
    NSString * _vmregion_info;
    unsigned long long  _workloop_id;
}

@property (nonatomic, readonly) NSString *bundle_id;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) int exceptionType;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool is_beta;
@property (nonatomic, readonly) bool is_simulated;
@property (nonatomic, readonly) NSString *procName;
@property (nonatomic, readonly) int proc_id;
@property (nonatomic, readonly) unsigned long long sharedCacheAddress;
@property (nonatomic, readonly) NSString *short_vers;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_appendToArray:(id)arg1 binaryImageDict:(id)arg2;
- (char *)_copyStringFromTask:(unsigned int)arg1 atAddress:(unsigned long long)arg2 immutableOnly:(bool)arg3 maxLength:(unsigned long long)arg4;
- (id)_cpuTypeDescription;
- (id)_descriptionForException:(id)arg1;
- (void)_extractBacktraceInfoUsingSymbolicator:(struct _CSTypeRef { unsigned long long x1; unsigned long long x2; })arg1 usingCorpse:(bool)arg2;
- (void)_extractBinaryImageInfoUsingSymbolicator:(struct _CSTypeRef { unsigned long long x1; unsigned long long x2; })arg1;
- (void)_extractCrashReporterAnnotationsFromSymbolOwner:(struct _CSTypeRef { unsigned long long x1; unsigned long long x2; })arg1 withMemory:(struct mapped_memory_t { }*)arg2 internal:(bool)arg3;
- (void)_extractLastExceptionBacktraceUsingSymbolicator:(struct _CSTypeRef { unsigned long long x1; unsigned long long x2; })arg1;
- (void)_extractSharedCacheAddress:(struct _CSTypeRef { unsigned long long x1; unsigned long long x2; })arg1;
- (unsigned long long)_readAddressFromMemory:(struct mapped_memory_t { }*)arg1 atSymbol:(struct _CSTypeRef { unsigned long long x1; unsigned long long x2; })arg2;
- (id)_readDataFromMemory:(struct mapped_memory_t { }*)arg1 atAddress:(unsigned long long)arg2 size:(unsigned long long)arg3;
- (id)_readStringAtTaskAddress:(unsigned long long)arg1 immutableOnly:(bool)arg2 maxLength:(unsigned long long)arg3;
- (struct _VMURange { unsigned long long x1; unsigned long long x2; })_regionAtAddress:(unsigned long long)arg1 immutableOnly:(bool)arg2;
- (id)_threadStateDescription;
- (id)additionalIPSMetadata;
- (id)appleCareDetails;
- (void)autopsyCorpse;
- (id)binaryImageDictionaryForAddress:(unsigned long long)arg1;
- (id)binaryImages;
- (id)bundle_id;
- (void)captureDiagInfo:(id)arg1;
- (void)dealloc;
- (void)decodeBacktraceWithBlock:(id /* block */)arg1;
- (id)decode_esr;
- (id)exceptionCodesDescriptionWithPrefix:(bool)arg1;
- (long long)exceptionSubcode;
- (int)exceptionType;
- (id)exceptionTypeDescription;
- (void)finishExtractionUsingCorpse:(bool)arg1;
- (id)formatFrameForSignature:(unsigned long long)arg1;
- (void)generateCustomLogAtLevel:(bool)arg1 withBlock:(id /* block */)arg2;
- (void)generateLogAtLevel:(bool)arg1 withBlock:(id /* block */)arg2;
- (id)initSimulated:(unsigned int)arg1 withReason:(const char *)arg2;
- (id)initWithTask:(unsigned int)arg1 exceptionType:(int)arg2 thread:(unsigned int)arg3 threadStateFlavor:(int)arg4 threadState:(unsigned int)arg5 threadStateCount:(unsigned int)arg6;
- (void)inspectLivePid:(int)arg1 exceptionCodes:(long long*)arg2 count:(unsigned int)arg3;
- (bool)isActionable;
- (bool)isExceptionNonFatal;
- (bool)isOSFault;
- (bool)is_beta;
- (bool)is_simulated;
- (void)loadBundleInfo;
- (void)loadBundleOnly;
- (void)noteCaller:(const char *)arg1 onThreadID:(unsigned long long)arg2;
- (id)problemType;
- (id)procName;
- (int)proc_id;
- (void)renderLibSystemReason:(id)arg1;
- (id)reportNamePrefix;
- (bool)secondChanceToSylog;
- (void)setApplicationSpecificInformation:(const char *)arg1;
- (unsigned long long)sharedCacheAddress;
- (id)short_vers;
- (id)signalName;
- (id)slice_uuid;
- (void)stashStatus:(id)arg1 note:(id)arg2 symbolicator:(struct _CSTypeRef { unsigned long long x1; unsigned long long x2; })arg3;
- (int)streamContentAtLevel:(bool)arg1 withBlock:(id /* block */)arg2;
- (id)terminationReasonExceptionCode;
- (id)terminationReasonNamespace;
- (void)unpackExceptionCodes;

@end
