/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon
 */

@interface HMDCameraRecordingBulkSendSessionInitiator : HMFObject <HMDDataStreamBulkSendListener, HMFLogging> {
    HMDHAPAccessory * _accessory;
    bool  _canOpenBulkSendSession;
    bool  _hasRegisteredBulkSendListener;
    id /* block */  _pendingOpenSessionCallback;
    NSString * _pendingOpenSessionReason;
    NSObject<OS_dispatch_queue> * _workQueue;
}

@property (readonly) HMDHAPAccessory *accessory;
@property bool canOpenBulkSendSession;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property bool hasRegisteredBulkSendListener;
@property (readonly) unsigned long long hash;
@property (copy) id /* block */ pendingOpenSessionCallback;
@property (copy) NSString *pendingOpenSessionReason;
@property (getter=isSessionOpenInProgress, readonly) bool sessionOpenInProgress;
@property (readonly) Class superclass;
@property (readonly) NSObject<OS_dispatch_queue> *workQueue;

+ (id)logCategory;

- (void).cxx_destruct;
- (void)_callPendingOpenSessionCallbackWithResult:(id)arg1 error:(id)arg2;
- (void)_openBulkSendSessionWithReason:(id)arg1;
- (void)_registerAsBulkSendListener;
- (id)accessory;
- (void)accessory:(id)arg1 didReceiveBulkSessionCandidate:(id)arg2;
- (void)accessoryDidCloseDataStream:(id)arg1;
- (void)accessoryDidStartListening:(id)arg1;
- (void)callPendingOpenSessionCallbackWithResult:(id)arg1 error:(id)arg2;
- (bool)canOpenBulkSendSession;
- (void)dealloc;
- (void)handleAccessoryDoesSupportBulkSendDataStream:(id)arg1;
- (bool)hasRegisteredBulkSendListener;
- (id)initWithWorkQueue:(id)arg1 accessory:(id)arg2;
- (bool)isSessionOpenInProgress;
- (id)logIdentifier;
- (void)openNewSessionWithReason:(id)arg1 completion:(id /* block */)arg2;
- (id /* block */)pendingOpenSessionCallback;
- (id)pendingOpenSessionReason;
- (void)setCanOpenBulkSendSession:(bool)arg1;
- (void)setHasRegisteredBulkSendListener:(bool)arg1;
- (void)setPendingOpenSessionCallback:(id /* block */)arg1;
- (void)setPendingOpenSessionReason:(id)arg1;
- (void)shutDown;
- (void)start;
- (id)workQueue;

@end
