/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WebCore.framework/WebCore
 */

@interface WebGLLayer : CALayer {
    struct IntSize { 
        int m_width; 
        int m_height; 
    }  _bufferSize;
    struct unique_ptr<WebCore::IOSurface, std::__1::default_delete<WebCore::IOSurface> > { 
        struct __compressed_pair<WebCore::IOSurface *, std::__1::default_delete<WebCore::IOSurface> > { 
            struct IOSurface {} *__value_; 
        } __ptr_; 
    }  _contentsBuffer;
    void * _contentsPbuffer;
    struct NakedPtr<WebCore::GraphicsContextGLOpenGL> { 
        struct GraphicsContextGLOpenGL {} *m_ptr; 
    }  _context;
    float  _devicePixelRatio;
    struct unique_ptr<WebCore::IOSurface, std::__1::default_delete<WebCore::IOSurface> > { 
        struct __compressed_pair<WebCore::IOSurface *, std::__1::default_delete<WebCore::IOSurface> > { 
            struct IOSurface {} *__value_; 
        } __ptr_; 
    }  _drawingBuffer;
    void * _drawingPbuffer;
    void * _eglConfig;
    void * _eglDisplay;
    void * _latchedPbuffer;
    bool  _preparedForDisplay;
    struct unique_ptr<WebCore::IOSurface, std::__1::default_delete<WebCore::IOSurface> > { 
        struct __compressed_pair<WebCore::IOSurface *, std::__1::default_delete<WebCore::IOSurface> > { 
            struct IOSurface {} *__value_; 
        } __ptr_; 
    }  _spareBuffer;
    void * _sparePbuffer;
    bool  _usingAlpha;
}

@property (nonatomic) struct NakedPtr<WebCore::GraphicsContextGLOpenGL> { struct GraphicsContextGLOpenGL {} *x1; } context;

- (id).cxx_construct;
- (void).cxx_destruct;
- (bool)allocateIOSurfaceBackingStoreWithSize:(struct IntSize { int x1; int x2; })arg1 usingAlpha:(bool)arg2;
- (void)bindFramebufferToNextAvailableSurface;
- (struct NakedPtr<WebCore::GraphicsContextGLOpenGL> { struct GraphicsContextGLOpenGL {} *x1; })context;
- (struct CGImage { }*)copyImageSnapshotWithColorSpace:(struct CGColorSpace { }*)arg1;
- (void)display;
- (id)initWithGraphicsContextGL:(struct NakedPtr<WebCore::GraphicsContextGLOpenGL> { struct GraphicsContextGLOpenGL {} *x1; })arg1;
- (void)prepareForDisplay;
- (void)releaseGLResources;
- (void)setAnchorPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)setContext:(struct NakedPtr<WebCore::GraphicsContextGLOpenGL> { struct GraphicsContextGLOpenGL {} *x1; })arg1;
- (void)setEGLDisplay:(void*)arg1 config:(void*)arg2;
- (void)setTransform:(struct CATransform3D { double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; double x16; })arg1;

@end
