//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NSArray, NSMutableArray, NSMutableDictionary, NSMutableSet, NSObject<OS_dispatch_queue>, NSSQLCore, NSSQLEntity, NSSQLSaveChangesRequestContext, NSSQLitePrefetchRequestCache, NSSQLiteStatement, NSString, NSURL;

__attribute__((visibility("hidden")))
@interface NSSQLiteConnection : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;
    NSSQLCore *_sqlCore;
    NSURL *_workingURL;
    NSString *_dbPath;
    BOOL _transactionIsOpen;
    BOOL _transactionIsCurrentlyReadOnly;
    BOOL _useSyntaxColoredLogging;
    NSSQLiteStatement *_sqlStatement;
    NSArray *_columnsToFetch;
    NSArray *_metadataColumns;
    struct sqlite3 *_db;
    struct sqlite3_stmt *_vmstatement;
    int _rowsProcessedCount;
    unsigned int _lastEntityKey;
    NSSQLEntity *_finalEntity;
    NSSQLEntity *_lastEntity;
    struct sqlite3_stmt *_fetchPKStatement;
    struct sqlite3_stmt *_updatePKStatement;
    NSSQLiteStatement *_beginStatement;
    NSSQLiteStatement *_commitStatement;
    NSSQLiteStatement *_rollbackStatement;
    struct __CFDictionary *_vmCachedStatements;
    NSMutableDictionary *_pragmaSettings;
    NSMutableSet *_mObjectIDsUpdatedByTriggers;
    NSMutableSet *_mObjectIDsInsertedByDATriggers;
    NSMutableSet *_mObjectIDsUpdatededByDATriggers;
    NSSQLSaveChangesRequestContext *_saveRequest;
    struct __CFDictionary *_statementCachesByEntity;
    NSSQLitePrefetchRequestCache *_prefetchRequestCache;
    struct __CFDictionary *_cachedEntityUpdateStatements;
    struct __CFDictionary *_cachedEntityConstrainedValuesUpdateStatements;
    double _timeOutOption;
    double _timeOutIncrement;
    void *_extraBuffersForRegisteredFunctions[5];
    NSString *_dbPathRegisteredWithBackupd;
    long long _vacuumTracker;
    NSMutableArray *_temporaryTables;
    struct __sqliteConnectionFlags {
        unsigned int _readyToBind:1;
        unsigned int _fetchInProgress:1;
        unsigned int _fileSystemType:2;
        unsigned int _proxyLocking:1;
        unsigned int _vacuumSetupNeeded:1;
        unsigned int _usingWAL:1;
        unsigned int _disallowReconnect:1;
        unsigned int _isWriter:1;
        unsigned int _didSnapshotRecovery:1;
        unsigned int _hasTransactionStringTable:1;
        unsigned int _isQueryGenTracking:1;
        unsigned int _reserved:20;
    } _sqliteConnectionFlags;
    unsigned long long _debugInode;
    NSMutableArray *_activeGenerations;
    NSMutableDictionary *_transactionStringName;
}

+ (BOOL)_rekeyPersistentStoreAtURL:(id)arg1 options:(id)arg2 withKey:(id)arg3 error:(id *)arg4;
+ (BOOL)_destroyPersistentStoreAtURL:(id)arg1 options:(id)arg2 error:(id *)arg3;
+ (BOOL)_replacePersistentStoreAtURL:(id)arg1 destinationOptions:(id)arg2 withPersistentStoreFromURL:(id)arg3 sourceOptions:(id)arg4 error:(id *)arg5;
+ (const char *)_databaseOpenURLStringForURL:(id)arg1;
+ (int)readMagicWordFromPath:(const char *)arg1 options:(id)arg2;
+ (int)openAtPath:(const char *)arg1 withKey:(id)arg2 handle:(struct sqlite3 **)arg3 flags:(int)arg4 module:(const char *)arg5 checkpointOnClose:(BOOL)arg6;
+ (void)__INode_Changed_AllThatIsLeftToUsIsHonor__;
+ (void)initialize;
+ (void)_setDebugFlags:(int)arg1;
- (void)_unregisterWithBackupd;
- (void)_registerWithBackupd;
- (void)derivedAttributeUpdatedRowInTable:(const char *)arg1 withEntityID:(long long)arg2 primaryKey:(long long)arg3 columnName:(const char *)arg4 newValue:(id)arg5;
- (void)clearObjectIDsUpdatededByDATriggers;
- (id)createSetOfObjectIDsUpdatedByDATriggers;
- (void)derivedAttributeUpdatedInsertedRowInTable:(const char *)arg1 withEntityID:(long long)arg2 primaryKey:(long long)arg3 columnName:(const char *)arg4 newValue:(id)arg5;
- (void)clearObjectIDsInsertUpdatededByDATriggers;
- (id)createSetOfObjectIDsInsertUpdatedByDATriggers;
- (void)triggerUpdatedRowInTable:(const char *)arg1 withEntityID:(long long)arg2 primaryKey:(long long)arg3 columnName:(const char *)arg4 newValue:(long long)arg5;
- (void)clearObjectIDsUpdatedByTriggers;
- (id)createSetOfObjectIDsUpdatedByTriggers;
- (void)_dropAllTriggers;
- (id)reopenQueryGenerationWithIdentifier:(id)arg1 error:(id *)arg2;
- (id)_checkActiveGenerationsForIdentfier:(id)arg1;
- (int)adoptQueryGenerationWithIdentifier:(id)arg1;
- (id)currentQueryGenerationIdentifier;
- (int)freeQueryGenerationWithIdentifier:(id)arg1;
- (int)registerCurrentQueryGenerationWithStore:(id)arg1;
- (int)registerCurrentQueryGenerationWithStore:(id)arg1 retries:(unsigned long long)arg2;
- (int)_registerNewQueryGenerationSnapshot:(id)arg1;
- (int)_adoptQueryGenerationWithSnapshot:(id)arg1;
- (id)_currentQueryGenerationSnapshot:(id *)arg1;
- (long long)_ensureWalFileExists;
- (id)executeMulticolumnUniquenessCheckSQLStatement:(id)arg1 returningColumns:(id)arg2;
- (id)executeAttributeUniquenessCheckSQLStatement:(id)arg1 returningColumns:(id)arg2;
- (BOOL)registerMigrationUpdateFunctionWithMigrator:(id)arg1;
- (void)insertBatchDeleteChangesForTransactionID:(long long)arg1;
- (id)gatherObjectIDsFromTable:(id)arg1;
- (BOOL)_tableHasRows:(id)arg1;
- (long long)_countOfRowsInTable:(id)arg1;
- (void)insertUpdates:(id)arg1 transactionID:(long long)arg2 updatedAttributes:(id)arg3;
- (void)insertBatchInserts:(id)arg1 transactionID:(long long)arg2;
- (void)insertChanges:(id)arg1 type:(long long)arg2 transactionID:(long long)arg3 context:(id)arg4;
- (unsigned long long)insertManagedObjectBlock:(CDUnknownBlockType)arg1 forEntity:(id)arg2 includeOnConflict:(BOOL)arg3;
- (unsigned long long)insertDictionaryBlock:(CDUnknownBlockType)arg1 forEntity:(id)arg2 includeOnConflict:(BOOL)arg3;
- (void)_validateProperty:(id)arg1 withValue:(id)arg2;
- (void)_batchInsertThrowWithErrorCode:(int)arg1 andMessage:(id)arg2 forKey:(id)arg3 andValue:(id)arg4 additionalDetail:(id)arg5;
- (unsigned long long)insertArray:(id)arg1 forEntity:(id)arg2 includeOnConflict:(BOOL)arg3;
- (void)prepareInsertStatementForEntity:(id)arg1 includeConstraints:(BOOL)arg2 includeOnConflict:(BOOL)arg3;
- (void)prepareInsertStatementForAncillaryEntity:(id)arg1;
- (long long)_insertTransactionForRequestContext:(id)arg1 andStrings:(id)arg2;
- (id)_insertTransactionStringForMigrationAuthor:(id)arg1;
- (id)_insertTransactionStringsForRequestContext:(id)arg1;
- (id)_transactionsStringAndPKsForStrings:(id)arg1;
- (id)_createTransactionStringWithName:(id)arg1;
- (void)processExternalDataReferenceFilesDeletedByRequest:(id)arg1;
- (void)processMigrationRequestForHash:(id)arg1;
- (void)processDeleteRequest:(id)arg1;
- (void)dropHistoryBeforeTransactionID:(id)arg1;
- (id)hasAncillaryEntitiesInHistory;
- (void)dropHistoryTrackingTables;
- (BOOL)addTransactionStringColumnsToTransactionTable;
- (BOOL)hasTransactionStringColumnsInTransactionTable;
- (unsigned long long)numberOfTombstones;
- (BOOL)addTombstoneColumnsForRange:(struct _NSRange)arg1;
- (id)transactionStringForName:(id)arg1;
- (BOOL)hasHistoryTransactionWithNumber:(id)arg1;
- (void)_dropOldHistoryTrackingTablesV1;
- (void)_dropOldHistoryTrackingTablesV0;
- (void)_dropOldHistoryTrackingTables;
- (BOOL)_hasOldHistoryTrackingTablesV1;
- (BOOL)_hasOldHistoryTrackingTablesV0;
- (BOOL)_hasOldHistoryTrackingTables;
- (void)processUpdateRequest:(id)arg1 withOIDs:(id)arg2 forAttributes:(id)arg3;
- (void)processInsertRequest:(id)arg1 withOIDs:(id)arg2;
- (void)processRelationshipUpdatesForRequestContext:(id)arg1;
- (void)processSaveRequest:(id)arg1;
- (id)_lastInsertRowID;
- (void)_dropKnownHistoryTrackingTables;
- (BOOL)_hasHistoryTransactionStringTable;
- (BOOL)_hasPersistentHistoryTables;
- (BOOL)_useContextObjects;
- (BOOL)hasHistoryRows;
- (void)dropUbiquityTables;
- (id)ubiquityTableValueForKey:(id)arg1;
- (id)ubiquityTableKeysAndValues;
- (void)setUbiquityTableValue:(id)arg1 forKey:(id)arg2;
- (id)createMapOfEntityNameToPKMaxForEntities:(id)arg1;
- (id)createMapOfEntityNameToPKMaxForEntitiesFromUBRangeTable:(id)arg1;
- (id)createMapOfEntityNameToPKMaxForEntitiesFromPKTable:(id)arg1;
- (id)allPeerRanges;
- (void)addPeerRangeForPeerID:(id)arg1 entityName:(id)arg2 rangeStart:(id)arg3 rangeEnd:(id)arg4 peerRangeStart:(id)arg5 peerRangeEnd:(id)arg6;
- (void)addPeerRange:(id)arg1;
- (void)updateUbiquityKnowledgeForPeerWithID:(id)arg1 andTransactionNumber:(id)arg2;
- (void)replaceUbiquityKnowledgeVector:(id)arg1;
- (void)updateUbiquityKnowledgeVector:(id)arg1;
- (id)fetchUbiquityKnowledgeVector;
- (int)logQueryPlanForStatement:(id)arg1;
- (BOOL)isLocalFS;
- (void)_setupVacuumIfNecessary;
- (long long)_getCurrentAutoVacuumValue;
- (void)_performPostSaveTasks:(BOOL)arg1 andForceFullVacuum:(BOOL)arg2;
- (void **)_buffersForRegisteredFunctions;
- (BOOL)recreateIndices;
- (void)createPrimaryKeyTableForModel:(id)arg1 knownEmpty:(BOOL)arg2;
- (void)createSchema;
- (void)didCreateSchema;
- (void)willCreateSchema;
- (void)_configurePageSize;
- (void)_configureAutoVacuum;
- (BOOL)hasPrimaryKeyTable;
- (long long)generatePrimaryKeysForEntity:(id)arg1 batch:(unsigned int)arg2;
- (void)_registerExtraFunctions;
- (BOOL)hasCachedModelTable;
- (void)saveCachedModel:(id)arg1;
- (id)_compressedDataWithModel:(id)arg1;
- (id)fetchCachedModel;
- (id)_decompressedModelWithData:(id)arg1;
- (BOOL)hasMetadataTable;
- (id)fetchMetadata;
- (id)metadataColumns;
- (void)_clearSaveRequest;
- (void)_setSaveRequest:(id)arg1;
- (void)saveMetadata:(id)arg1;
- (BOOL)_dropTableWithName:(id)arg1;
- (BOOL)_hasTableWithName:(id)arg1 isTemp:(BOOL)arg2;
- (BOOL)_hasTempTableWithName:(id)arg1;
- (BOOL)_hasTableWithName:(id)arg1;
- (id)newFetchUUIDSForSubentitiesRootedAt:(id)arg1;
- (id)fetchTriggerCreationSQL;
- (id)fetchIndexCreationSQL;
- (id)fetchTableCreationSQLContaining:(id)arg1;
- (id)fetchTableCreationSQL;
- (id)fetchCreationSQLForType:(id)arg1 containing:(id)arg2;
- (id)fetchTableNames;
- (BOOL)performIntegrityCheck;
- (struct sqlite3_stmt *)_vmstatement;
- (int)rowsChangedByLastStatement;
- (void)_endFetch;
- (void)setExclusiveLockingMode:(BOOL)arg1;
- (void)setSecureDeleteMode:(BOOL)arg1;
- (int)fetchBufferResultSet:(void *)arg1 usingFetchPlan:(id)arg2;
- (int)fetchResultSet:(void *)arg1 usingFetchPlan:(id)arg2;
- (void)handleCorruptedDB:(id)arg1;
- (void)cacheCurrentDBStatementOn:(id)arg1;
- (id)newFetchedArray;
- (id)_newValueForColumn:(id)arg1 atIndex:(unsigned int)arg2 inStatement:(struct sqlite3_stmt *)arg3;
- (void)_clearSaveGeneratedCachedStatements;
- (void)_clearCachedStatements;
- (void)_clearOtherStatements;
- (void)releaseSQLStatement;
- (void)resetSQLStatement;
- (void)execute;
- (void)executeCorrelationChangesForValue1:(unsigned long long)arg1 value2:(unsigned long long)arg2 value3:(unsigned long long)arg3 value4:(unsigned long long)arg4;
- (void)bindTempTableForBindIntarray:(id)arg1;
- (void)endFetchAndRecycleStatement:(BOOL)arg1;
- (void)setColumnsToFetch:(id)arg1;
- (id)columnsToFetch;
- (BOOL)selectCountWithStatement:(id)arg1;
- (void)selectRowsWithStatement:(id)arg1 cached:(BOOL)arg2;
- (void)prepareSQLStatement:(id)arg1;
- (id)sqlStatement;
- (void)prepareAndExecuteSQLStatement:(id)arg1;
- (void)bindTempTablesForStatementIfNecessary:(id)arg1;
- (void)writeCorrelationChangesFromTracker:(id)arg1;
- (void)writeCorrelationReordersFromTracker:(id)arg1;
- (void)writeCorrelationMasterReordersFromTracker:(id)arg1;
- (void)uncacheVMStatement:(id)arg1;
- (void)addVMCachedStatement:(id)arg1;
- (unsigned long long)_countOfVMCachedStatements;
- (void)writeCorrelationDeletesFromTracker:(id)arg1;
- (void)writeCorrelationInsertsFromTracker:(id)arg1;
- (BOOL)deleteRow:(id)arg1 forRequestContext:(id)arg2;
- (void)updateConstrainedValuesForRow:(id)arg1;
- (void)updateRow:(id)arg1 forRequestContext:(id)arg2;
- (id)cachedUpdateConstrainedValuesStatmentForEntity:(id)arg1;
- (void)cacheUpdateConstrainedValuesStatement:(id)arg1 forEntity:(id)arg2;
- (id)cachedUpdateStatementForEntity:(id)arg1 andDeltasMask:(struct __CFBitVector *)arg2;
- (void)cacheUpdateStatement:(id)arg1 forEntity:(id)arg2 andDeltasMask:(struct __CFBitVector *)arg3;
- (void)clearPrefetchRequestCache;
- (id)prefetchRequestCache;
- (id)statementCacheForEntity:(id)arg1;
- (void)insertRow:(id)arg1;
- (void)_bindVariablesWithDeletedRow:(id)arg1;
- (void)_clearBindVariablesForConstrainedValuesUpdateStatement:(id)arg1;
- (void)_clearBindVariablesForUpdateStatement:(id)arg1 forDeltasMask:(struct __CFBitVector *)arg2;
- (void)_bindVariablesForConstrainedValuesWithRow:(id)arg1;
- (void)_bindVariablesWithUpdatedRow:(id)arg1 andOriginalRow:(id)arg2 forDeltasMask:(struct __CFBitVector *)arg3;
- (void)_clearBindVariablesForInsertedRow;
- (void)_bindVariablesWithInsertedRow:(id)arg1;
- (int)_rowsChangedByLastExecute;
@property(nonatomic) BOOL isWriter;
- (BOOL)isOpen;
- (void)rollbackTransaction;
- (void)commitTransaction;
- (void)beginReadTransaction;
- (void)beginTransaction;
- (void)disconnect;
- (void)_forceDisconnectOnError;
- (void)_finalizeStatement;
- (void)_clearTransactionCaches;
- (void)connect;
- (BOOL)_isQueryGenerationTrackingConnection;
- (void)_configurePragmaOptions:(int)arg1 createdSchema:(BOOL)arg2;
- (void)configureUbiquityMetadataTable;
- (void)createCachedModelTable;
- (void)createMetadata;
- (void)createTablesForEntities:(id)arg1;
- (void)createTriggersForEntities:(id)arg1;
- (void)createIndexesForEntity:(id)arg1;
- (void)createManyToManyTablesForEntity:(id)arg1;
- (void)createTableForEntity:(id)arg1;
- (void)_configureIntegrityCheck;
- (void)_configureSynchronousMode;
- (void)_executeSQLString:(id)arg1;
- (BOOL)databaseIsEmpty;
- (BOOL)canConnect;
- (long long)fetchMaxPrimaryKeyForEntity:(id)arg1;
- (long long)_fetchMaxPrimaryKeyForEntity:(id)arg1;
- (struct __CFArray *)copyRawIntegerRowsForSQL:(id)arg1;
- (void)_ensureNoTransactionOpen;
- (void)_ensureNoFetchInProgress;
- (void)_ensureNoStatementPrepared;
- (void)_ensureDatabaseOpen;
- (BOOL)isFetchInProgress;
- (void)transactionDidRollback;
- (void)transactionDidCommit;
- (void)transactionDidBegin;
- (void)forceTransactionClosed;
- (BOOL)hasOpenTransaction;
- (void)_restoreBusyTimeOutSettings;
- (void)_performBlock:(CDUnknownBlockType)arg1;
- (void)performAndWait:(CDUnknownBlockType)arg1;
- (id)connectionManager;
- (id)adapter;
- (void)dealloc;
- (id)initAsQueryGenerationTrackingConnectionForSQLCore:(id)arg1;
- (id)initForSQLCore:(id)arg1;

@end

