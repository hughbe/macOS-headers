/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/BusinessChatService.framework/BusinessChatService
 */

@interface BCSCacheManager : NSObject <BCSBatchable, BCSCacheClearing, BCSConfigCacheSkipping, BCSConfigCaching, BCSItemCacheSkipping, BCSItemCaching, BCSShardCacheQueryable, BCSShardCacheSkipping> {
    <BCSItemCaching><BCSLinkItemCacheClearing> * _itemCache;
    <BCSShardCacheQueryable> * _shardCache;
}

@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) <BCSItemCaching><BCSLinkItemCacheClearing> *itemCache;
@property (nonatomic, retain) <BCSShardCacheQueryable> *shardCache;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)_clearExpiredCacheItemsForType:(long long)arg1 completion:(id /* block */)arg2;
- (void)beginBatch;
- (void)clearCachesForLinkItemsAssociatedWithBundleID:(id)arg1 completion:(id /* block */)arg2;
- (void)clearCachesForType:(long long)arg1 completion:(id /* block */)arg2;
- (void)clearExpiredCachesForType:(long long)arg1 completion:(id /* block */)arg2;
- (id)configItemForType:(long long)arg1;
- (long long)countOfExpiredShardsOfType:(long long)arg1;
- (long long)countOfShardsOfType:(long long)arg1;
- (void)deleteConfigItemForType:(long long)arg1;
- (void)deleteExpiredConfigItemForType:(long long)arg1;
- (void)deleteExpiredItemsOfType:(long long)arg1;
- (void)deleteExpiredShardItemsOfType:(long long)arg1;
- (void)deleteItemMatching:(id)arg1;
- (void)deleteItemsOfType:(long long)arg1;
- (void)deleteShardItemMatching:(id)arg1;
- (void)deleteShardItemsOfType:(long long)arg1;
- (void)endBatch;
- (id)initWithShardCache:(id)arg1 itemCache:(id)arg2;
- (id)itemCache;
- (id)itemMatching:(id)arg1;
- (void)setItemCache:(id)arg1;
- (void)setShardCache:(id)arg1;
- (id)shardCache;
- (id)shardItemMatching:(id)arg1;
- (bool)shouldSkipCacheForConfigItemOfType:(long long)arg1;
- (bool)shouldSkipCacheForItemOfType:(long long)arg1;
- (bool)shouldSkipCacheForShardItemOfType:(long long)arg1;
- (void)updateConfigItem:(id)arg1 withType:(long long)arg2;
- (void)updateItem:(id)arg1 withItemIdentifier:(id)arg2;
- (void)updateShardItem:(id)arg1 withShardIdentifier:(id)arg2;

@end
