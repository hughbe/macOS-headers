/* Generated by RuntimeBrowser.
 */

@protocol MLCEngineDispatch <NSObject>

@required

- (void)dispatchForwardAndGradientLossLayerWithStates:(NSArray *)arg1 sourceTensor:(MLCTensor *)arg2 labelsTensor:(MLCTensor *)arg3 labelsTensorStride:(unsigned long long)arg4 weightsTensor:(MLCTensor *)arg5 resultTensor:(MLCTensor *)arg6 resultGradientTensor:(MLCTensor *)arg7 resultTensorIsTemporary:(bool)arg8 resultTensorAllocate:(bool)arg9;
- (void)dispatchForwardConcatLayer:(NSArray *)arg1 sourceTensors:(NSArray *)arg2 resultTensor:(MLCTensor *)arg3;
- (void)dispatchForwardEmbeddingLayer:(NSArray *)arg1 weight:(MLCTensor *)arg2 sourceTensor:(MLCTensor *)arg3 resultTensor:(MLCTensor *)arg4;
- (void)dispatchForwardLayer:(NSArray *)arg1 sourceTensor:(MLCTensor *)arg2 resultTensor:(MLCTensor *)arg3 resultTensorIsTemporary:(bool)arg4 resultTensorAllocate:(bool)arg5;
- (void)dispatchForwardLayer:(NSArray *)arg1 sourceTensor:(MLCTensor *)arg2 secondaryTensor:(MLCTensor *)arg3 resultTensor:(MLCTensor *)arg4 resultTensorIsTemporary:(bool)arg5 resultTensorAllocate:(bool)arg6;
- (void)dispatchForwardLayerBatchNormalizationWithStates:(NSArray *)arg1 sourceTensor:(MLCTensor *)arg2 resultTensor:(MLCTensor *)arg3 resultTensorIsTemporary:(bool)arg4 resultStateIsTemporary:(bool)arg5 resultTensorAllocate:(bool)arg6;
- (void)dispatchForwardLayerNormalizationLayer:(NSArray *)arg1 sourceTensor:(MLCTensor *)arg2 resultTensor:(MLCTensor *)arg3 resultTensorIsTemporary:(bool)arg4 resultStateIsTemporary:(bool)arg5 resultTensorAllocate:(bool)arg6 forTraining:(bool)arg7;
- (void)dispatchForwardLayerWithStates:(NSArray *)arg1 sourceTensor:(MLCTensor *)arg2 resultTensor:(MLCTensor *)arg3 resultTensorIsTemporary:(bool)arg4 resultStateIsTemporary:(bool)arg5 resultTensorAllocate:(bool)arg6 forTraining:(bool)arg7;
- (void)dispatchForwardLayerWithStates:(NSArray *)arg1 sourceTensor:(MLCTensor *)arg2 secondaryTensor:(MLCTensor *)arg3 resultTensor:(MLCTensor *)arg4 resultTensorIsTemporary:(bool)arg5 resultStateIsTemporary:(bool)arg6 resultTensorAllocate:(bool)arg7 forTraining:(bool)arg8;
- (void)dispatchForwardLossLayer:(NSArray *)arg1 sourceTensor:(MLCTensor *)arg2 labelsTensor:(MLCTensor *)arg3 labelsTensorStride:(unsigned long long)arg4 weightsTensor:(MLCTensor *)arg5 resultTensor:(MLCTensor *)arg6 resultTensorIsTemporary:(bool)arg7 resultTensorAllocate:(bool)arg8;
- (void)dispatchForwardLossLayerWithStates:(NSArray *)arg1 sourceTensor:(MLCTensor *)arg2 labelsTensor:(MLCTensor *)arg3 labelsTensorStride:(unsigned long long)arg4 weightsTensor:(MLCTensor *)arg5 resultTensor:(MLCTensor *)arg6 resultTensorIsTemporary:(bool)arg7 resultStateIsTemporary:(bool)arg8 resultTensorAllocate:(bool)arg9 forTraining:(bool)arg10;
- (void)dispatchForwardMHALayer:(NSArray *)arg1 sourceTensors:(NSArray *)arg2 resultTensor:(MLCTensor *)arg3 resultTensorIsTemporary:(bool)arg4 resultTensorAllocate:(bool)arg5;
- (void)dispatchForwardMHALayerWithStates:(NSArray *)arg1 sourceTensors:(NSArray *)arg2 resultTensor:(MLCTensor *)arg3 resultTensorIsTemporary:(bool)arg4 resultStateIsTemporary:(bool)arg5 resultTensorAllocate:(bool)arg6 forTraining:(bool)arg7;
- (void)dispatchForwardMatMulLayer:(NSArray *)arg1 sourceTensor:(MLCTensor *)arg2 secondarySourceTensor:(MLCTensor *)arg3 resultTensor:(MLCTensor *)arg4 resultTensorIsTemporary:(bool)arg5 resultTensorAllocate:(bool)arg6;
- (void)dispatchForwardReshapeLayerWithDeviceOps:(NSArray *)arg1 sourceTensor:(MLCTensor *)arg2 resultTensor:(MLCTensor *)arg3 resultTensorIsTemporary:(bool)arg4 resultStateIsTemporary:(bool)arg5 resultTensorAllocate:(bool)arg6 keepsState:(bool)arg7;
- (void)dispatchForwardSliceLayer:(NSArray *)arg1 sourceTensor:(MLCTensor *)arg2 resultTensor:(MLCTensor *)arg3;
- (void)dispatchForwardSliceLayerWithStates:(NSArray *)arg1 sourceTensor:(MLCTensor *)arg2 resultTensor:(MLCTensor *)arg3 forTraining:(bool)arg4;
- (void)dispatchForwardSoftmaxLayer:(NSArray *)arg1 sourceTensor:(MLCTensor *)arg2 resultTensor:(MLCTensor *)arg3 resultTensorIsTemporary:(bool)arg4 resultTensorAllocate:(bool)arg5;
- (void)dispatchForwardSoftmaxLayerWithStates:(NSArray *)arg1 sourceTensor:(MLCTensor *)arg2 resultTensor:(MLCTensor *)arg3 resultTensorIsTemporary:(bool)arg4 resultStateIsTemporary:(bool)arg5 resultTensorAllocate:(bool)arg6 forTraining:(bool)arg7;
- (void)dispatchForwardSplitLayer:(NSArray *)arg1 sourceTensor:(MLCTensor *)arg2 resultTensors:(NSArray *)arg3;
- (void)dispatchGradientBatchNormalizationLayer:(NSArray *)arg1 sourceGradientTensor:(MLCTensor *)arg2 resultGradientTensor:(MLCTensor *)arg3 resultTensorIsTemporary:(bool)arg4 resultTensorAllocate:(bool)arg5;
- (void)dispatchGradientConcatLayer:(NSArray *)arg1 sourceGradientTensor:(MLCTensor *)arg2 resultGradientTensors:(NSArray *)arg3;
- (void)dispatchGradientEmbeddingLayer:(NSArray *)arg1 sourceGradientTensor:(MLCTensor *)arg2;
- (void)dispatchGradientLayer:(NSArray *)arg1 sourceGradientTensor:(MLCTensor *)arg2 resultGradientTensor:(MLCTensor *)arg3 resultTensorIsTemporary:(bool)arg4 resultTensorAllocate:(bool)arg5;
- (void)dispatchGradientLayer:(NSArray *)arg1 sourceGradientTensor:(MLCTensor *)arg2 resultGradientTensor:(MLCTensor *)arg3 secondaryResultGradientTensor:(MLCTensor *)arg4 resultTensorIsTemporary:(bool)arg5 resultTensorAllocate:(bool)arg6;
- (void)dispatchGradientLayerNormalizationLayer:(NSArray *)arg1 sourceGradientTensor:(MLCTensor *)arg2 resultGradientTensor:(MLCTensor *)arg3 resultTensorIsTemporary:(bool)arg4 resultTensorAllocate:(bool)arg5;
- (void)dispatchGradientLossLayer:(NSArray *)arg1 sourceGradientTensor:(MLCTensor *)arg2 labelsTensor:(MLCTensor *)arg3 labelsTensorStride:(unsigned long long)arg4 weightsTensor:(MLCTensor *)arg5 resultGradientTensor:(MLCTensor *)arg6 resultTensorIsTemporary:(bool)arg7 resultTensorAllocate:(bool)arg8;
- (void)dispatchGradientMHALayer:(NSArray *)arg1 sourceGradientTensor:(MLCTensor *)arg2 resultGradientTensors:(NSArray *)arg3 resultTensorIsTemporary:(bool)arg4 resultTensorAllocate:(bool)arg5;
- (void)dispatchGradientMatMulLayer:(NSArray *)arg1 sourceGradientTensor:(MLCTensor *)arg2 resultGradientTensor:(MLCTensor *)arg3 secondaryResultGradientTensor:(MLCTensor *)arg4 resultTensorIsTemporary:(bool)arg5 resultTensorAllocate:(bool)arg6;
- (void)dispatchGradientReshapeLayerWithDeviceOps:(NSArray *)arg1 sourceGradientTensor:(MLCTensor *)arg2 resultGradientTensor:(MLCTensor *)arg3 resultTensorIsTemporary:(bool)arg4 resultTensorAllocate:(bool)arg5;
- (void)dispatchGradientSliceLayer:(NSArray *)arg1 sourceGradientTensor:(MLCTensor *)arg2 resultGradientTensor:(MLCTensor *)arg3;
- (void)dispatchGradientSoftmaxLayer:(NSArray *)arg1 sourceGradientTensor:(MLCTensor *)arg2 resultGradientTensor:(MLCTensor *)arg3 resultTensorIsTemporary:(bool)arg4 resultTensorAllocate:(bool)arg5;
- (void)dispatchGradientSplitLayer:(NSArray *)arg1 sourceGradientTensors:(NSArray *)arg2 resultGradientTensor:(MLCTensor *)arg3;
- (void)dispatchInitialGradientLossLayer:(NSArray *)arg1 sourceGradientTensor:(MLCTensor *)arg2 resultGradientTensor:(MLCTensor *)arg3 resultTensorIsTemporary:(bool)arg4 resultTensorAllocate:(bool)arg5;
- (void)dispatchRNNForwardLayer:(NSArray *)arg1 sourceTensors:(NSArray *)arg2 resultTensors:(NSArray *)arg3 resultTensorIsTemporary:(bool)arg4 resultTensorAllocate:(bool)arg5;
- (void)dispatchRNNForwardLayerWithStates:(NSArray *)arg1 sourceTensors:(NSArray *)arg2 resultTensors:(NSArray *)arg3 resultTensorIsTemporary:(bool)arg4 resultStateIsTemporary:(bool)arg5 resultTensorAllocate:(bool)arg6 forTraining:(bool)arg7;
- (void)dispatchRNNGradientLayer:(NSArray *)arg1 sourceGradientTensors:(NSArray *)arg2 resultGradientTensors:(NSArray *)arg3 resultTensorIsTemporary:(bool)arg4 resultTensorAllocate:(bool)arg5;
- (void)incrementReadCountForGradientState:(NSArray *)arg1 increment:(long long)arg2;
- (void)incrementReadCountForTensorDeviceMemory:(NSArray *)arg1 increment:(long long)arg2;

@end
