//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "NSSecureCoding.h"

@class CKServerChangeToken, NSArray, NSMutableDictionary, NSMutableOrderedSet, NSMutableSet, NSObject<OS_dispatch_queue>;

@interface CKSyncEngineMetadata : NSObject <NSSecureCoding>
{
    BOOL _needsToFetchDatabaseChanges;
    BOOL _needsToSaveDatabaseSubscription;
    CKServerChangeToken *_serverChangeTokenForDatabase;
    NSObject<OS_dispatch_queue> *_queue;
    NSMutableSet *_zoneIDsNeedingToFetchChangesSet;
    NSMutableDictionary *_serverChangeTokensByZoneID;
    NSMutableDictionary *_zonesToSaveDictionary;
    NSMutableOrderedSet *_zoneIDsToDeleteSet;
    NSMutableOrderedSet *_pendingModificationsSet;
    NSMutableOrderedSet *_inFlightModificationsSet;
    unsigned long long _internalChangeCount;
    NSMutableOrderedSet *_fakeRecordIDsToSaveForSerializationTests;
    NSMutableOrderedSet *_fakeRecordIDsToDeleteForSerializationTests;
}

+ (BOOL)supportsSecureCoding;
- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableOrderedSet *fakeRecordIDsToDeleteForSerializationTests; // @synthesize fakeRecordIDsToDeleteForSerializationTests=_fakeRecordIDsToDeleteForSerializationTests;
@property(retain, nonatomic) NSMutableOrderedSet *fakeRecordIDsToSaveForSerializationTests; // @synthesize fakeRecordIDsToSaveForSerializationTests=_fakeRecordIDsToSaveForSerializationTests;
@property(nonatomic) unsigned long long internalChangeCount; // @synthesize internalChangeCount=_internalChangeCount;
@property(retain, nonatomic) NSMutableOrderedSet *inFlightModificationsSet; // @synthesize inFlightModificationsSet=_inFlightModificationsSet;
@property(retain, nonatomic) NSMutableOrderedSet *pendingModificationsSet; // @synthesize pendingModificationsSet=_pendingModificationsSet;
@property(retain, nonatomic) NSMutableOrderedSet *zoneIDsToDeleteSet; // @synthesize zoneIDsToDeleteSet=_zoneIDsToDeleteSet;
@property(retain, nonatomic) NSMutableDictionary *zonesToSaveDictionary; // @synthesize zonesToSaveDictionary=_zonesToSaveDictionary;
@property(retain, nonatomic) NSMutableDictionary *serverChangeTokensByZoneID; // @synthesize serverChangeTokensByZoneID=_serverChangeTokensByZoneID;
@property(retain, nonatomic) NSMutableSet *zoneIDsNeedingToFetchChangesSet; // @synthesize zoneIDsNeedingToFetchChangesSet=_zoneIDsNeedingToFetchChangesSet;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) BOOL needsToSaveDatabaseSubscription; // @synthesize needsToSaveDatabaseSubscription=_needsToSaveDatabaseSubscription;
@property(nonatomic) BOOL needsToFetchDatabaseChanges; // @synthesize needsToFetchDatabaseChanges=_needsToFetchDatabaseChanges;
@property(retain, nonatomic) CKServerChangeToken *serverChangeTokenForDatabase; // @synthesize serverChangeTokenForDatabase=_serverChangeTokenForDatabase;
- (BOOL)needsToDeleteZoneID:(id)arg1;
@property(readonly, nonatomic) NSArray *zoneIDsToDelete;
- (void)setNeedsToDelete:(BOOL)arg1 zoneIDs:(id)arg2;
- (BOOL)needsToSaveZone:(id)arg1;
@property(readonly, nonatomic) NSArray *zonesToSave;
- (void)setNeedsToSave:(BOOL)arg1 zones:(id)arg2;
@property(readonly, nonatomic) NSArray *zoneIDsNeedingToFetchChanges;
- (BOOL)needsToFetchChangesForZoneID:(id)arg1;
- (void)setNeedsToFetchChanges:(BOOL)arg1 forRecordZoneID:(id)arg2;
- (id)serverChangeTokenForRecordZoneID:(id)arg1;
- (void)setServerChangeToken:(id)arg1 forRecordZoneID:(id)arg2;
- (id)pendingRecordIDsWithModificationType:(long long)arg1;
- (id)recordIDsToDelete;
- (id)recordIDsToSave;
@property(readonly, nonatomic) NSArray *inFlightRecordModifications;
@property(readonly, nonatomic) NSArray *pendingRecordModifications;
- (void)removeInFlightRecordModifications:(id)arg1;
- (void)removePendingRecordModifications:(id)arg1;
- (void)markRecordModifications:(id)arg1 inFlight:(BOOL)arg2;
- (void)addPendingRecordModifications:(id)arg1;
@property(readonly, nonatomic) unsigned long long changeCount;
- (void)getDataRepresentation:(CDUnknownBlockType)arg1;
- (id)initWithCoder:(id)arg1;
- (void)encodeWithCoder:(id)arg1;
- (id)CKDescriptionPropertiesWithPublic:(BOOL)arg1 private:(BOOL)arg2 shouldExpand:(BOOL)arg3;
- (id)description;
- (id)init;
- (void)commonInit;
- (id)initWithData:(id)arg1;

@end

