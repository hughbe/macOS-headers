//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <Metal/_MTLDevice.h>

@class MTLIOAccelDeviceShmemPool, MTLIOAccelService, MTLIOMemoryInfo, MTLResourceListPool, NSLock, NSObject<OS_dispatch_queue>, NSObject<OS_dispatch_source>;

@interface MTLIOAccelDevice : _MTLDevice
{
    struct __IOAccelDevice *_deviceRef;
    struct __IOAccelShared *_sharedRef;
    unsigned int _acceleratorPort;
    MTLIOAccelService *_acceleratorService;
    struct {
        MTLIOAccelDeviceShmemPool *segmentListShmemPool;
        MTLIOAccelDeviceShmemPool *kernelCommandShmemPool;
        id *hwResourcePools;
        unsigned int hwResourcePoolCount;
        MTLResourceListPool *akResourceListPool;
        MTLResourceListPool *akPrivateResourceListPool;
    } _storageCreateParams;
    struct MTLIOAccelCommandBufferStoragePool *_commandBufferStoragePool;
    unsigned int _configBits;
    unsigned int _deviceBits;
    unsigned long long _textureRam;
    unsigned long long _videoRam;
    unsigned long long _sharedMemorySize;
    unsigned int _accelID;
    int _numCommandBuffers;
    unsigned long long _segmentByteThreshold;
    unsigned long long _peerGroupID;
    unsigned int _peerIndex;
    unsigned int _peerCount;
    unsigned int _peerMask;
    NSLock *_peerConnectionsLock;
    struct {
        MTLIOAccelDevice *device;
        int refCount;
    } _peerConnections[4];
    struct MTLIOAccelBufferHeap _bufferHeaps[16];
    NSObject<OS_dispatch_queue> *_device_dispatch_queue;
    NSObject<OS_dispatch_queue> *_device_pool_cleanup_queue;
    NSObject<OS_dispatch_source> *_device_pool_cleanup_source;
    _Bool _device_pool_cleanup_scheduled;
    unsigned int _fenceAllocatedCount;
    unsigned int _fenceMaximumCount;
    unsigned int _fenceBitmapSearchStart;
    unsigned int _fenceBitmapCount;
    unsigned long long *_fenceAllocationBitmap;
    Class _bufferClass;
    unsigned long long _registryID;
    unsigned long long _location;
    unsigned long long _locationNumber;
    unsigned long long _maxTransferRate;
    id <MTLDeviceSPI> _deviceWrapper;
}

+ (void)registerDevices;
+ (void)registerAcceleratorService:(id)arg1;
- (void).cxx_destruct;
@property(readonly) unsigned long long maxTransferRate; // @synthesize maxTransferRate=_maxTransferRate;
@property(readonly) unsigned long long locationNumber; // @synthesize locationNumber=_locationNumber;
@property(readonly) unsigned long long location; // @synthesize location=_location;
@property(readonly) unsigned int peerCount; // @synthesize peerCount=_peerCount;
@property(readonly) unsigned int peerIndex; // @synthesize peerIndex=_peerIndex;
@property(readonly) unsigned long long peerGroupID; // @synthesize peerGroupID=_peerGroupID;
@property(readonly) unsigned int acceleratorPort; // @synthesize acceleratorPort=_acceleratorPort;
@property(readonly) int numCommandBuffers; // @synthesize numCommandBuffers=_numCommandBuffers;
@property(readonly) MTLIOMemoryInfo *memoryInfo; // @dynamic memoryInfo;
- (BOOL)setResourcesPurgeableState:(id *)arg1 newState:(unsigned long long)arg2 oldState:(unsigned long long *)arg3 count:(int)arg4;
- (id)_deviceWrapper;
- (void)_setDeviceWrapper:(id)arg1;
- (void)updateResourcePoolPurgeability;
- (void)kickCleanupQueue;
- (void)releasePeerConnection:(id)arg1;
- (BOOL)retainPeerConnection:(id)arg1;
- (unsigned long long)maxBufferLength;
- (id)newEvent;
- (void)_removeResource:(id)arg1;
- (void)_addResource:(id)arg1;
@property(readonly) unsigned long long currentAllocatedSize;
- (id)newTiledTextureWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 deallocator:(CDUnknownBlockType)arg3 descriptor:(id)arg4 offset:(unsigned long long)arg5 bytesPerRow:(unsigned long long)arg6;
- (id)newTiledTextureWithBytesNoCopy:(void *)arg1 length:(unsigned long long)arg2 descriptor:(id)arg3 offset:(unsigned long long)arg4 bytesPerRow:(unsigned long long)arg5;
@property(readonly) Class bufferClass;
@property(readonly) BOOL supportPriorityBand;
- (void)setIndirectArgumentBufferDecodingData:(id)arg1;
- (id)indirectArgumentBufferDecodingData;
- (id)newIndirectCommandBufferWithDescriptor:(id)arg1 maxCommandCount:(unsigned long long)arg2 options:(unsigned long long)arg3;
- (id)newIndirectArgumentEncoderWithLayout:(id)arg1;
- (id)newArgumentEncoderWithLayout:(id)arg1;
- (id)newIndirectArgumentBufferLayoutWithStructType:(id)arg1;
- (void)releaseFenceIndex:(unsigned int)arg1;
- (id)newFence;
- (id)newCommandQueueWithDescriptor:(id)arg1;
- (void)deallocBufferSubData:(id)arg1 heapIndex:(short)arg2 bufferIndex:(short)arg3 bufferOffset:(unsigned long long)arg4 length:(unsigned long long)arg5;
- (id)allocBufferSubDataWithLength:(unsigned long long)arg1 options:(unsigned long long)arg2 alignment:(unsigned long long)arg3 heapIndex:(short *)arg4 bufferIndex:(short *)arg5 bufferOffset:(unsigned long long *)arg6;
- (short)heapIndexWithOptions:(unsigned long long)arg1;
- (BOOL)supportsVertexAmplificationCount:(unsigned long long)arg1;
@property(readonly) BOOL supportsVertexAmplification;
- (void)updateGPUSelectionProperties;
- (void)getBuiltInGPUProperties:(unsigned long long *)arg1 transferRate:(unsigned long long *)arg2;
- (void)getExternalGPUProperties:(unsigned long long *)arg1 transferRate:(unsigned long long *)arg2;
- (void)getSlottedGPUProperties:(unsigned long long *)arg1 transferRate:(unsigned long long *)arg2;
- (BOOL)isSlotted;
- (BOOL)isBuiltIn;
@property(readonly) BOOL hasUnifiedMemory;
@property(readonly, getter=isRemovable) BOOL removable;
@property(readonly, getter=isHeadless) BOOL headless;
@property(readonly, getter=isLowPower) BOOL lowPower;
@property(readonly) unsigned long long recommendedMaxWorkingSetSize;
@property(readonly) unsigned long long dedicatedMemorySize;
@property(readonly) unsigned long long sharedMemorySize;
@property(readonly) unsigned int hwResourcePoolCount;
@property(readonly) id *hwResourcePools;
@property(readonly) unsigned long long registryID;
- (struct __IOAccelShared *)sharedRef;
- (struct __IOAccelDevice *)deviceRef;
- (id)akPrivateResourceListPool;
- (id)akResourceListPool;
- (void)_purgeDevice;
- (void)setHwResourcePool:(id *)arg1 count:(int)arg2;
- (unsigned int)initialSegmentListShmemSize;
- (unsigned int)initialKernelCommandShmemSize;
- (id)initWithAcceleratorPort:(unsigned int)arg1;
- (void)_setAcceleratorService:(id)arg1;
- (void)setComputePipelineStateCommandShmemSize:(unsigned int)arg1;
- (void)setSegmentListShmemSize:(unsigned int)arg1;
- (void)dealloc;

@end

