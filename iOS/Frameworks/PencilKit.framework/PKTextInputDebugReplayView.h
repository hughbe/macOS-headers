/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/PencilKit.framework/PencilKit
 */

@interface PKTextInputDebugReplayView : UIView {
    struct CGContext { } * _bitmapContext;
    NSArray * _currentLogEntries;
    <PKTextInputDebugReplayViewDelegate> * _delegate;
    double  _drawScale;
    bool  _hasReplayedLoggedEntries;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    }  _playbackBounds;
    unsigned long long  _playbackLogIndex;
    NSMutableArray * _playbackStrokes;
    long long  _replayState;
}

@property (nonatomic, readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } _bitmapBounds;
@property (nonatomic, retain) NSArray *currentLogEntries;
@property (nonatomic) <PKTextInputDebugReplayViewDelegate> *delegate;
@property (nonatomic, readonly) bool hasReplayedLoggedEntries;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } playbackBounds;
@property (nonatomic) unsigned long long playbackLogIndex;
@property (nonatomic, retain) NSMutableArray *playbackStrokes;
@property (nonatomic) long long replayState;

- (void).cxx_destruct;
- (void)_advanceReplay;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_bitmapBounds;
- (void)_createReplayContextIfNecessary;
- (void)_restartReplayState;
- (void)_scheduleTimerForReplay;
- (void)_teardownContextIfNecessary;
- (double)_timestampDeltaBeforeNextLogAfterIndex:(unsigned long long)arg1;
- (void)_togglePlayPauseReplayingLoggedEntries;
- (id)currentLogEntries;
- (void)dealloc;
- (id)delegate;
- (void)drawStroke:(id)arg1;
- (bool)hasReplayedLoggedEntries;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })playbackBounds;
- (unsigned long long)playbackLogIndex;
- (id)playbackStrokes;
- (long long)replayState;
- (void)setCurrentLogEntries:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setPlaybackBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setPlaybackLogIndex:(unsigned long long)arg1;
- (void)setPlaybackStrokes:(id)arg1;
- (void)setReplayState:(long long)arg1;

@end
