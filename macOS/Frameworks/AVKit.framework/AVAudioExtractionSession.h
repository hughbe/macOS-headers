//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class AVAsset, AVAssetReader, AVAssetReaderOutput, AVAssetTrack, AVAudioSampleChunk, NSError, NSURL;

__attribute__((visibility("hidden")))
@interface AVAudioExtractionSession : NSObject
{
    struct os_unfair_lock_s _sessionLock;
    BOOL _sessionHasBeenStarted;
    NSURL *_url;
    AVAsset *_asset;
    AVAssetReader *_assetReader;
    AVAssetReaderOutput *_readerOutput;
    struct opaqueCMFormatDescription *_formatDescription;
    const struct AudioStreamBasicDescription *_streamDescription;
    unsigned long long _minSamplesPerChunk;
    unsigned long long _minChunkCount;
    unsigned long long _preferredChunkCount;
    AVAudioSampleChunk *_currentChunk;
    unsigned long long _currentChunkIndex;
    BOOL _requiresAllSamples;
    id <AVAudioExtractionSessionDelegate> _delegate;
    AVAssetTrack *_track;
    unsigned long long _samplesPerChunk;
    unsigned long long _estimatedNumberOfChunks;
    unsigned long long _extractionSampleRate;
    unsigned long long _status;
    NSError *_error;
}

+ (id)extractionSessionForTrack:(id)arg1 preferredChunkCount:(unsigned long long)arg2 requiresAllSamples:(BOOL)arg3;
+ (id)extractionSessionForTrack:(id)arg1 samplesPerChunk:(unsigned long long)arg2 requiresAllSamples:(BOOL)arg3;
+ (id)extractionSessionForTrack:(id)arg1 requiresAllSamples:(BOOL)arg2;
- (void).cxx_destruct;
@property(readonly) NSError *error; // @synthesize error=_error;
@property(readonly) unsigned long long status; // @synthesize status=_status;
@property(readonly) BOOL requiresAllSamples; // @synthesize requiresAllSamples=_requiresAllSamples;
@property(readonly) unsigned long long extractionSampleRate; // @synthesize extractionSampleRate=_extractionSampleRate;
@property(readonly) unsigned long long estimatedNumberOfChunks; // @synthesize estimatedNumberOfChunks=_estimatedNumberOfChunks;
@property(readonly) unsigned long long samplesPerChunk; // @synthesize samplesPerChunk=_samplesPerChunk;
@property(readonly) AVAssetTrack *track; // @synthesize track=_track;
@property __weak id <AVAudioExtractionSessionDelegate> delegate; // @synthesize delegate=_delegate;
- (BOOL)_verifySampleBufferCompatibility:(struct opaqueCMSampleBuffer *)arg1;
- (void)_startSession;
- (void)_setSamplesPerChunk:(unsigned long long)arg1;
- (void)_setEstimatedNumberOfChunks;
- (BOOL)_setupExtractionSession;
- (unsigned long long)_sampleRateForAudioTrack:(id)arg1;
- (BOOL)_processSampleBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (void)_extract;
- (BOOL)_ensureExtractionSampleRateMatchesSampleBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (unsigned long long)_calculateChunkSizeForTrack:(id)arg1 withChunkCount:(unsigned long long)arg2;
- (void)_cleanUpExtractionSession;
- (unsigned long long)_calculateOptimalExtractionSampleRate;
- (BOOL)_copyAudioBufferListForSampleBuffer:(struct opaqueCMSampleBuffer *)arg1 audioBufferList:(struct AudioBufferList **)arg2 backingBuffer:(struct OpaqueCMBlockBuffer **)arg3;
- (BOOL)_attemptToSetupExtractionSessionWithComposition;
- (void)cancel;
- (void)start;
- (void)dealloc;
- (id)initWithTrack:(id)arg1 samplesPerChunk:(unsigned long long)arg2 requiresAllSamples:(BOOL)arg3;
- (id)initWithTrack:(id)arg1 preferredChunkCount:(unsigned long long)arg2 requiresAllSamples:(BOOL)arg3;
- (id)initWithTrack:(id)arg1 requiresAllSamples:(BOOL)arg2;

@end

